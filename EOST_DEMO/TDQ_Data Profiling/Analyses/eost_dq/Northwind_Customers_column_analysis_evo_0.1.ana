<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dataquality.analysis="http://dataquality.analysis" xmlns:dataquality.domain="http://dataquality.domain" xmlns:dataquality.indicators="http://dataquality.indicators" xmlns:dataquality.reports="http://dataquality.reports" xmlns:orgomg.cwm.objectmodel.core="http:///orgomg/cwm/objectmodel/core.ecore" xmlns:relational="http://www.talend.org/cwm/resource/relational/2010">
  <dataquality.analysis:Analysis xmi:id="_UyjiUa0HEfCdr4B5bHeijA" name="Northwind_Customers_column_analysis_evo" supplierDependency="_d7fcwK0HEfCdr4B5bHeijA" creationDate="2025-10-19T11:49:22.383-0400" defaultContext="Default">
    <clientDependency href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_8HW4IKnKEfCPYfrxWxsLvw"/>
    <taggedValue xmi:id="_UyjiUq0HEfCdr4B5bHeijA" tag="Status" value="Draft"/>
    <taggedValue xmi:id="_UyjiU60HEfCdr4B5bHeijA" tag="Author" value="eost@eos.talend.com"/>
    <taggedValue xmi:id="_UyjiVK0HEfCdr4B5bHeijA" tag="Purpose"/>
    <taggedValue xmi:id="_UyjiVa0HEfCdr4B5bHeijA" tag="Description"/>
    <taggedValue xmi:id="_UyjiVq0HEfCdr4B5bHeijA" tag="Version" value="0.1"/>
    <taggedValue xmi:id="_UyjiV60HEfCdr4B5bHeijA" tag="ANA_LAST_RUN_CONTEXT" value="Default"/>
    <taggedValue xmi:id="_UyjiWK0HEfCdr4B5bHeijA" tag="PREVIEW_ROW_NUMBER" value="50"/>
    <taggedValue xmi:id="_UyjiWa0HEfCdr4B5bHeijA" tag="NUMBER_OF_CONNECTIONS_PER_ANALYSIS" value="5"/>
    <taggedValue xmi:id="_UyjiWq0HEfCdr4B5bHeijA" tag="Is Use Sample Data" value="false"/>
    <context xmi:id="_UyjiW60HEfCdr4B5bHeijA">
      <connection href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_8-IbkDudEe6gdvWxIcOMoQ"/>
      <analysedElements xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldcK0DEfCdr4B5bHeijA"/>
      <analysedElements xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WklddK0DEfCdr4B5bHeijA"/>
      <analysedElements xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldeK0DEfCdr4B5bHeijA"/>
      <analysedElements xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldfK0DEfCdr4B5bHeijA"/>
      <analysedElements xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldgK0DEfCdr4B5bHeijA"/>
      <analysedElements xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldhK0DEfCdr4B5bHeijA"/>
      <analysedElements xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldiK0DEfCdr4B5bHeijA"/>
      <analysedElements xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldjK0DEfCdr4B5bHeijA"/>
      <analysedElements xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldkK0DEfCdr4B5bHeijA"/>
      <analysedElements xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldlK0DEfCdr4B5bHeijA"/>
      <analysedElements xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldmK0DEfCdr4B5bHeijA"/>
    </context>
    <results xmi:id="_UyjiXK0HEfCdr4B5bHeijA">
      <resultMetadata xmi:id="_UyjiXa0HEfCdr4B5bHeijA" executionDate="2025-10-19T12:34:43.203-0400" executionDuration="689" message="" executionNumber="9" lastRunOk="true" lastExecutionNumberOk="8"/>
      <indicators xsi:type="dataquality.indicators:RowCountIndicator" xmi:id="_UyjiXq0HEfCdr4B5bHeijA" count="91" computed="true">
        <parameters xmi:id="_UyjiX60HEfCdr4B5bHeijA"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldcK0DEfCdr4B5bHeijA"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Row_Count_0.1.definition#_ccFOkBF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UyjiYK0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; " language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_UyjiYa0HEfCdr4B5bHeijA" name="Row Count" label="Row Count">
          <taggedValue xmi:id="_UyjiYq0HEfCdr4B5bHeijA" tag="Description" value="counts the number of rows"/>
          <taggedValue xmi:id="_UyjiY60HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the number of records"/>
          <sqlGenericExpression xmi:id="_UyjiZK0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:NullCountIndicator" xmi:id="_UyjiZa0HEfCdr4B5bHeijA" count="91" computed="true">
        <parameters xmi:id="_UyjiZq0HEfCdr4B5bHeijA"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldcK0DEfCdr4B5bHeijA"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Null_Count_0.1.definition#_GrAeADh9Ed2XmO7pl5Yuyg"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UyjiZ60HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE &quot;CustomerID&quot; IS NULL " language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_UyjiaK0HEfCdr4B5bHeijA" name="Null Count" label="Null Count">
          <taggedValue xmi:id="_Uyjiaa0HEfCdr4B5bHeijA" tag="Purpose" value="evaluate the number of missing data (null records)"/>
          <taggedValue xmi:id="_Uyjiaq0HEfCdr4B5bHeijA" tag="Description" value="counts the number of null rows"/>
          <sqlGenericExpression xmi:id="_Uyjia60HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE &lt;%=__COLUMN_NAMES__%> IS NULL &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:DistinctCountIndicator" xmi:id="_UyjibK0HEfCdr4B5bHeijA" count="91" computed="true" distinctValueCount="91">
        <parameters xmi:id="_Uyjiba0HEfCdr4B5bHeijA"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldcK0DEfCdr4B5bHeijA"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Distinct_Count_0.1.definition#_ccHq0BF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_Uyjibq0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT DISTINCT &quot;CustomerID&quot; FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; ) A" language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_Uyjib60HEfCdr4B5bHeijA" name="Distinct Count" label="Distinct Count">
          <taggedValue xmi:id="_UyjicK0HEfCdr4B5bHeijA" tag="Description" value="counts the number of distinct rows (like a &quot;SELECT DISTINCT&quot; SQL statement)"/>
          <taggedValue xmi:id="_Uyjica0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the number of distinct records"/>
          <sqlGenericExpression xmi:id="_Uyjicq0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT DISTINCT &lt;%=__COLUMN_NAMES__%> FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>) A" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:UniqueCountIndicator" xmi:id="_Uyjic60HEfCdr4B5bHeijA" count="91" computed="true" uniqueValueCount="91">
        <parameters xmi:id="_UyjidK0HEfCdr4B5bHeijA"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldcK0DEfCdr4B5bHeijA"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Unique_Count_0.1.definition#_ccHq0RF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_Uyjida0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &quot;CustomerID&quot;, COUNT(*) mycount FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot;  GROUP BY &quot;CustomerID&quot; HAVING COUNT(*) = 1) AS myquery" language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_Uyjidq0HEfCdr4B5bHeijA" name="Unique Count" label="Unique Count">
          <taggedValue xmi:id="_Uyjid60HEfCdr4B5bHeijA" tag="Description" value="counts the number of unique rows (i.e. distinct rows with only one instance: rows that are not duplicated)"/>
          <taggedValue xmi:id="_UyjieK0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the number of unique records"/>
          <sqlGenericExpression xmi:id="_Uyjiea0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="SQL"/>
          <sqlGenericExpression xmi:id="_Uyjieq0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount = 1) AS myquery" language="MySQL"/>
          <sqlGenericExpression xmi:id="_Uyjie60HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) myquery" language="Oracle"/>
          <sqlGenericExpression xmi:id="_UyjifK0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount = 1) AS myquery" language="Teradata"/>
          <sqlGenericExpression xmi:id="_Uyjifa0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_Uyjifq0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_Uyjif60HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1)  myquery" language="Hive" version=""/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:DuplicateCountIndicator" xmi:id="_UyjigK0HEfCdr4B5bHeijA" count="91" computed="true" duplicateValueCount="0">
        <parameters xmi:id="_Uyjiga0HEfCdr4B5bHeijA"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldcK0DEfCdr4B5bHeijA"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Duplicate_Count_0.1.definition#_ccHq0hF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_Uyjigq0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &quot;CustomerID&quot;, COUNT(*) mycount FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot;  m  GROUP BY &quot;CustomerID&quot; HAVING COUNT(*) > 1) myquery" language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_Uyjig60HEfCdr4B5bHeijA" name="Duplicate Count" label="Duplicate Count">
          <taggedValue xmi:id="_UyjihK0HEfCdr4B5bHeijA" tag="Description" value="counts the number of duplicate rows. This number and the number of unique data equals the number of distinct rows"/>
          <taggedValue xmi:id="_Uyjiha0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the number of duplicated records"/>
          <sqlGenericExpression xmi:id="_Uyjihq0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) AS myquery" language="SQL"/>
          <sqlGenericExpression xmi:id="_Uyjih60HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount > 1) AS myquery" language="MySQL"/>
          <sqlGenericExpression xmi:id="_UyjiiK0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Oracle"/>
          <sqlGenericExpression xmi:id="_Uyjiia0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount > 1) AS myquery" language="Teradata"/>
          <sqlGenericExpression xmi:id="_Uyjiiq0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_Uyjii60HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) AS myquery" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_UyjijK0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Hive"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:BlankCountIndicator" xmi:id="_Uyjija0HEfCdr4B5bHeijA" count="91" computed="true">
        <parameters xmi:id="_Uyjijq0HEfCdr4B5bHeijA"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldcK0DEfCdr4B5bHeijA"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Blank_Count_0.1.definition#_ccHq0xF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_Uyjij60HEfCdr4B5bHeijA" body="SELECT COUNT(&quot;CustomerID&quot;) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot;  WHERE LTRIM(RTRIM(&quot;CustomerID&quot;)) = '' " language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_UyjikK0HEfCdr4B5bHeijA" name="Blank Count" label="Blank Count">
          <taggedValue xmi:id="_Uyjika0HEfCdr4B5bHeijA" tag="Description" value="counts the number of blank rows. A blank is a non null textual data that contains only white spaces (or nothing). Note that Oracle does not distinguish between the empty string and the null value"/>
          <taggedValue xmi:id="_Uyjikq0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the number of blank records"/>
          <sqlGenericExpression xmi:id="_Uyjik60HEfCdr4B5bHeijA" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE TRIM(&lt;%=__COLUMN_NAMES__%>) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_UyjilK0HEfCdr4B5bHeijA" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE TRIM(&lt;%=__COLUMN_NAMES__%>) IS NULL &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_Uyjila0HEfCdr4B5bHeijA" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_Uyjilq0HEfCdr4B5bHeijA" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_Uyjil60HEfCdr4B5bHeijA" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> = '' or RTRIM(LTRIM(&lt;%=__COLUMN_NAMES__%>)) = '') &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RowCountIndicator" xmi:id="_UyjimK0HEfCdr4B5bHeijA" count="91" computed="true">
        <parameters xmi:id="_Uyjima0HEfCdr4B5bHeijA"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WklddK0DEfCdr4B5bHeijA"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Row_Count_0.1.definition#_ccFOkBF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_Uyjimq0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; " language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_Uyjim60HEfCdr4B5bHeijA" name="Row Count" label="Row Count">
          <taggedValue xmi:id="_UyjinK0HEfCdr4B5bHeijA" tag="Description" value="counts the number of rows"/>
          <taggedValue xmi:id="_Uyjina0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the number of records"/>
          <sqlGenericExpression xmi:id="_Uyjinq0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:NullCountIndicator" xmi:id="_Uyjin60HEfCdr4B5bHeijA" count="91" computed="true">
        <parameters xmi:id="_UyjioK0HEfCdr4B5bHeijA"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WklddK0DEfCdr4B5bHeijA"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Null_Count_0.1.definition#_GrAeADh9Ed2XmO7pl5Yuyg"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_Uyjioa0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE &quot;CompanyName&quot; IS NULL " language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_Uyjioq0HEfCdr4B5bHeijA" name="Null Count" label="Null Count">
          <taggedValue xmi:id="_Uyjio60HEfCdr4B5bHeijA" tag="Purpose" value="evaluate the number of missing data (null records)"/>
          <taggedValue xmi:id="_UyjipK0HEfCdr4B5bHeijA" tag="Description" value="counts the number of null rows"/>
          <sqlGenericExpression xmi:id="_Uyjipa0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE &lt;%=__COLUMN_NAMES__%> IS NULL &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:DistinctCountIndicator" xmi:id="_Uyjipq0HEfCdr4B5bHeijA" count="91" computed="true" distinctValueCount="91">
        <parameters xmi:id="_Uyjip60HEfCdr4B5bHeijA"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WklddK0DEfCdr4B5bHeijA"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Distinct_Count_0.1.definition#_ccHq0BF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UyjiqK0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT DISTINCT &quot;CompanyName&quot; FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; ) A" language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_Uyjiqa0HEfCdr4B5bHeijA" name="Distinct Count" label="Distinct Count">
          <taggedValue xmi:id="_Uyjiqq0HEfCdr4B5bHeijA" tag="Description" value="counts the number of distinct rows (like a &quot;SELECT DISTINCT&quot; SQL statement)"/>
          <taggedValue xmi:id="_Uyjiq60HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the number of distinct records"/>
          <sqlGenericExpression xmi:id="_UyjirK0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT DISTINCT &lt;%=__COLUMN_NAMES__%> FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>) A" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:UniqueCountIndicator" xmi:id="_Uyjira0HEfCdr4B5bHeijA" count="91" computed="true" uniqueValueCount="91">
        <parameters xmi:id="_Uyjirq0HEfCdr4B5bHeijA"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WklddK0DEfCdr4B5bHeijA"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Unique_Count_0.1.definition#_ccHq0RF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_Uyjir60HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &quot;CompanyName&quot;, COUNT(*) mycount FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot;  GROUP BY &quot;CompanyName&quot; HAVING COUNT(*) = 1) AS myquery" language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_UyjisK0HEfCdr4B5bHeijA" name="Unique Count" label="Unique Count">
          <taggedValue xmi:id="_Uyjisa0HEfCdr4B5bHeijA" tag="Description" value="counts the number of unique rows (i.e. distinct rows with only one instance: rows that are not duplicated)"/>
          <taggedValue xmi:id="_Uyjisq0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the number of unique records"/>
          <sqlGenericExpression xmi:id="_Uyjis60HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="SQL"/>
          <sqlGenericExpression xmi:id="_UyjitK0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount = 1) AS myquery" language="MySQL"/>
          <sqlGenericExpression xmi:id="_Uyjita0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) myquery" language="Oracle"/>
          <sqlGenericExpression xmi:id="_Uyjitq0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount = 1) AS myquery" language="Teradata"/>
          <sqlGenericExpression xmi:id="_Uyjit60HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_UyjiuK0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_Uyjiua0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1)  myquery" language="Hive" version=""/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:DuplicateCountIndicator" xmi:id="_Uyjiuq0HEfCdr4B5bHeijA" count="91" computed="true" duplicateValueCount="0">
        <parameters xmi:id="_Uyjiu60HEfCdr4B5bHeijA"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WklddK0DEfCdr4B5bHeijA"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Duplicate_Count_0.1.definition#_ccHq0hF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UyjivK0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &quot;CompanyName&quot;, COUNT(*) mycount FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot;  m  GROUP BY &quot;CompanyName&quot; HAVING COUNT(*) > 1) myquery" language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_Uyjiva0HEfCdr4B5bHeijA" name="Duplicate Count" label="Duplicate Count">
          <taggedValue xmi:id="_Uyjivq0HEfCdr4B5bHeijA" tag="Description" value="counts the number of duplicate rows. This number and the number of unique data equals the number of distinct rows"/>
          <taggedValue xmi:id="_Uyjiv60HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the number of duplicated records"/>
          <sqlGenericExpression xmi:id="_UyjiwK0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) AS myquery" language="SQL"/>
          <sqlGenericExpression xmi:id="_Uyjiwa0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount > 1) AS myquery" language="MySQL"/>
          <sqlGenericExpression xmi:id="_Uyjiwq0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Oracle"/>
          <sqlGenericExpression xmi:id="_Uyjiw60HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount > 1) AS myquery" language="Teradata"/>
          <sqlGenericExpression xmi:id="_UyjixK0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_Uyjixa0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) AS myquery" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_Uyjixq0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Hive"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:BlankCountIndicator" xmi:id="_Uyjix60HEfCdr4B5bHeijA" count="91" computed="true">
        <parameters xmi:id="_UyjiyK0HEfCdr4B5bHeijA"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WklddK0DEfCdr4B5bHeijA"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Blank_Count_0.1.definition#_ccHq0xF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_Uyjiya0HEfCdr4B5bHeijA" body="SELECT COUNT(&quot;CompanyName&quot;) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot;  WHERE LTRIM(RTRIM(&quot;CompanyName&quot;)) = '' " language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_Uyjiyq0HEfCdr4B5bHeijA" name="Blank Count" label="Blank Count">
          <taggedValue xmi:id="_Uyjiy60HEfCdr4B5bHeijA" tag="Description" value="counts the number of blank rows. A blank is a non null textual data that contains only white spaces (or nothing). Note that Oracle does not distinguish between the empty string and the null value"/>
          <taggedValue xmi:id="_UyjizK0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the number of blank records"/>
          <sqlGenericExpression xmi:id="_Uyjiza0HEfCdr4B5bHeijA" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE TRIM(&lt;%=__COLUMN_NAMES__%>) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_Uyjizq0HEfCdr4B5bHeijA" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE TRIM(&lt;%=__COLUMN_NAMES__%>) IS NULL &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_Uyjiz60HEfCdr4B5bHeijA" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_Uyji0K0HEfCdr4B5bHeijA" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_Uyji0a0HEfCdr4B5bHeijA" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> = '' or RTRIM(LTRIM(&lt;%=__COLUMN_NAMES__%>)) = '') &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:TextIndicator" xmi:id="_Uyji0q0HEfCdr4B5bHeijA">
        <parameters xmi:id="_Uyji060HEfCdr4B5bHeijA"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WklddK0DEfCdr4B5bHeijA"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Text_Statistics_0.1.definition#_yb9x0zh8Ed2XmO7pl5Yuyg"/>
        <averageLengthIndicator xmi:id="_Uyji1K0HEfCdr4B5bHeijA" count="91" computed="true" sumLength="1720.0">
          <parameters xmi:id="_Uyji1a0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_Uyji1q0HEfCdr4B5bHeijA" useBlank="false"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WklddK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_0.1.definition#_ccIR4BF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_Uyji160HEfCdr4B5bHeijA" body="SELECT SUM(LEN(&quot;CompanyName&quot;)), COUNT(&quot;CompanyName&quot;) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (&quot;CompanyName&quot; IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &quot;CompanyName&quot; IS NULL  THEN 'NULL TALEND' ELSE &quot;CompanyName&quot; END)) &lt;> '' ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_Uyji2K0HEfCdr4B5bHeijA" name="Average Length" label="Average Length">
            <taggedValue xmi:id="_Uyji2a0HEfCdr4B5bHeijA" tag="Description" value="computes the average length of the field. Does not take into account the null and blank values when computing the average length."/>
            <taggedValue xmi:id="_Uyji2q0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the average length of the textual record of non-null and non-blank values"/>
            <sqlGenericExpression xmi:id="_Uyji260HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_Uyji3K0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_Uyji3a0HEfCdr4B5bHeijA" body="SELECT SUM(LEN(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_Uyji3q0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_Uyji360HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_Uyji4K0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_Uyji4a0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_Uyji4q0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_Uyji460HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )), COUNT( &lt;%=__COLUMN_NAMES__%> ) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_Uyji5K0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_Uyji5a0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_Uyji5q0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_Uyji560HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </averageLengthIndicator>
        <maxLengthIndicator xmi:id="_Uyji6K0HEfCdr4B5bHeijA" computed="true" length="36">
          <parameters xmi:id="_Uyji6a0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_Uyji6q0HEfCdr4B5bHeijA" useBlank="false"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WklddK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_0.1.definition#_ccHq1RF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_Uyji660HEfCdr4B5bHeijA" body="SELECT MAX(LEN(&quot;CompanyName&quot;)) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (&quot;CompanyName&quot; IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &quot;CompanyName&quot; IS NULL  THEN 'NULL TALEND' ELSE &quot;CompanyName&quot; END)) &lt;> '' ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_Uyji7K0HEfCdr4B5bHeijA" name="Maximal Length" label="Maximal Length">
            <taggedValue xmi:id="_Uyji7a0HEfCdr4B5bHeijA" tag="Description" value="computes the maximal length of a text field. Does not take into account the null and blank values when computing the maximal length."/>
            <taggedValue xmi:id="_Uyji7q0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the length of the longest textual record of non-null and non-blank values"/>
            <sqlGenericExpression xmi:id="_Uyji760HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_Uyji8K0HEfCdr4B5bHeijA" body="SELECT MAX( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle" modificationDate=""/>
            <sqlGenericExpression xmi:id="_Uyji8a0HEfCdr4B5bHeijA" body="SELECT MAX(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_Uyji8q0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_Uyji860HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_Uyji9K0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive" modificationDate=""/>
            <sqlGenericExpression xmi:id="_Uyji9a0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_Uyji9q0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' )  &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_Uyji960HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_Uyji-K0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_Uyji-a0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_Uyji-q0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_Uyji-60HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </maxLengthIndicator>
        <minLengthIndicator xmi:id="_Uyji_K0HEfCdr4B5bHeijA" computed="true" length="8">
          <parameters xmi:id="_Uyji_a0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_Uyji_q0HEfCdr4B5bHeijA" useBlank="false"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WklddK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_0.1.definition#_ccHq1BF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_Uyji_60HEfCdr4B5bHeijA" body="SELECT MIN(LEN(&quot;CompanyName&quot;)) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (&quot;CompanyName&quot; IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &quot;CompanyName&quot; IS NULL  THEN 'NULL TALEND' ELSE &quot;CompanyName&quot; END)) &lt;> '' ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykJYK0HEfCdr4B5bHeijA" name="Minimal Length" label="Minimal Length">
            <taggedValue xmi:id="_UykJYa0HEfCdr4B5bHeijA" tag="Description" value="computes the minimal length of a text field. Does not take into account the null and blank values when computing the minimal length."/>
            <taggedValue xmi:id="_UykJYq0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the length of the smallest textual record of non-null and non-blank values"/>
            <sqlGenericExpression xmi:id="_UykJY60HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykJZK0HEfCdr4B5bHeijA" body="SELECT MIN( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykJZa0HEfCdr4B5bHeijA" body="SELECT MIN(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykJZq0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykJZ60HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykJaK0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_UykJaa0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykJaq0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykJa60HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykJbK0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (1=1) AND (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykJba0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_UykJbq0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykJb60HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </minLengthIndicator>
        <minLengthWithBlankIndicator xmi:id="_UykJcK0HEfCdr4B5bHeijA" computed="true" length="8">
          <parameters xmi:id="_UykJca0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykJcq0HEfCdr4B5bHeijA"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WklddK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Blank_0.1.definition#_G4EzQZU9Ed-Y15ulK_jijQ"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykJc60HEfCdr4B5bHeijA" body="SELECT MIN(LEN(&quot;CompanyName&quot;)) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (&quot;CompanyName&quot; IS NOT NULL ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykJdK0HEfCdr4B5bHeijA" name="Minimal Length With Blank" label="Minimal Length With Blank">
            <taggedValue xmi:id="_UykJda0HEfCdr4B5bHeijA" tag="Description" value="computes the minimal length of a text field. Does not take into account the null values when computing the minimal length."/>
            <taggedValue xmi:id="_UykJdq0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the length of the smallest textual record of non-null values"/>
            <sqlGenericExpression xmi:id="_UykJd60HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykJeK0HEfCdr4B5bHeijA" body="SELECT MIN( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykJea0HEfCdr4B5bHeijA" body="SELECT MIN(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykJeq0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykJe60HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykJfK0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_UykJfa0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykJfq0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykJf60HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykJgK0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykJga0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykJgq0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </minLengthWithBlankIndicator>
        <minLengthWithNullIndicator xmi:id="_UykJg60HEfCdr4B5bHeijA" computed="true" length="8">
          <parameters xmi:id="_UykJhK0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykJha0HEfCdr4B5bHeijA" useBlank="false" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WklddK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Null_0.1.definition#_a4KsoI1qEd-xwI2imLgHRA"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykJhq0HEfCdr4B5bHeijA" body="SELECT MIN(LEN(CASE WHEN &quot;CompanyName&quot; IS NULL  THEN '' ELSE &quot;CompanyName&quot; END)) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (LTRIM(RTRIM(CASE WHEN &quot;CompanyName&quot; IS NULL  THEN 'NULL TALEND' ELSE &quot;CompanyName&quot; END)) &lt;> '' ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykJh60HEfCdr4B5bHeijA" name="Minimal Length With Null" label="Minimal Length With Null">
            <taggedValue xmi:id="_UykJiK0HEfCdr4B5bHeijA" tag="Description" value="computes the minimal length of a text field. Does not take into account the blank values when computing the minimal length."/>
            <taggedValue xmi:id="_UykJia0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the length of the smallest textual record of non-blank values"/>
            <sqlGenericExpression xmi:id="_UykJiq0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykJi60HEfCdr4B5bHeijA" body="SELECT MIN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykJjK0HEfCdr4B5bHeijA" body="SELECT MIN(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykJja0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykJjq0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykJj60HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_UykJkK0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykJka0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykJkq0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykJk60HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykJlK0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_UykJla0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykJlq0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </minLengthWithNullIndicator>
        <minLengthWithBlankNullIndicator xmi:id="_UykJl60HEfCdr4B5bHeijA" computed="true" length="8">
          <parameters xmi:id="_UykJmK0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykJma0HEfCdr4B5bHeijA" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WklddK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Blank_and_Null_0.1.definition#_9HDjMJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykJmq0HEfCdr4B5bHeijA" body="SELECT MIN(LEN(CASE WHEN &quot;CompanyName&quot; IS NULL  THEN '' ELSE &quot;CompanyName&quot; END)) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykJm60HEfCdr4B5bHeijA" name="Minimal Length With Blank and Null" label="Minimal Length With Blank and Null">
            <taggedValue xmi:id="_UykJnK0HEfCdr4B5bHeijA" tag="Description" value="computes the minimal length of a text field."/>
            <taggedValue xmi:id="_UykJna0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the length of the smallest textual record"/>
            <sqlGenericExpression xmi:id="_UykJnq0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykJn60HEfCdr4B5bHeijA" body="SELECT MIN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykJoK0HEfCdr4B5bHeijA" body="SELECT MIN(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykJoa0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykJoq0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykJo60HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_UykJpK0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykJpa0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykJpq0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykJp60HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykJqK0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_UykJqa0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykJqq0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </minLengthWithBlankNullIndicator>
        <maxLengthWithBlankIndicator xmi:id="_UykJq60HEfCdr4B5bHeijA" computed="true" length="36">
          <parameters xmi:id="_UykJrK0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykJra0HEfCdr4B5bHeijA"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WklddK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Blank_0.1.definition#_-xmZcJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykJrq0HEfCdr4B5bHeijA" body="SELECT MAX(LEN(&quot;CompanyName&quot;)) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (&quot;CompanyName&quot; IS NOT NULL ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykJr60HEfCdr4B5bHeijA" name="Maximal Length With Blank" label="Maximal Length With Blank">
            <taggedValue xmi:id="_UykJsK0HEfCdr4B5bHeijA" tag="Description" value="computes the maximal length of a text field. Does not take into account the null values when computing the maximal length."/>
            <taggedValue xmi:id="_UykJsa0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the length of the longest textual record of non-null values"/>
            <sqlGenericExpression xmi:id="_UykJsq0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykJs60HEfCdr4B5bHeijA" body="SELECT MAX( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykJtK0HEfCdr4B5bHeijA" body="SELECT MAX(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykJta0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykJtq0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykJt60HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_UykJuK0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykJua0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykJuq0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykJu60HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykJvK0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykJva0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </maxLengthWithBlankIndicator>
        <maxLengthWithNullIndicator xmi:id="_UykJvq0HEfCdr4B5bHeijA" computed="true" length="36">
          <parameters xmi:id="_UykJv60HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykJwK0HEfCdr4B5bHeijA" useBlank="false" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WklddK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Null_0.1.definition#_-_UFUJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykJwa0HEfCdr4B5bHeijA" body="SELECT MAX(LEN(CASE WHEN &quot;CompanyName&quot; IS NULL  THEN '' ELSE &quot;CompanyName&quot; END)) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (LTRIM(RTRIM(CASE WHEN &quot;CompanyName&quot; IS NULL  THEN 'NULL TALEND' ELSE &quot;CompanyName&quot; END)) &lt;> '' ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykJwq0HEfCdr4B5bHeijA" name="Maximal Length With Null" label="Maximal Length With Null">
            <taggedValue xmi:id="_UykJw60HEfCdr4B5bHeijA" tag="Description" value="computes the maximal length of a text field. Does not take into account the blank values when computing the maximal length."/>
            <taggedValue xmi:id="_UykJxK0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the length of the longest textual record of non-blank values"/>
            <sqlGenericExpression xmi:id="_UykJxa0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykJxq0HEfCdr4B5bHeijA" body="SELECT MAX(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykJx60HEfCdr4B5bHeijA" body="SELECT MAX(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykJyK0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykJya0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykJyq0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive" version=""/>
            <sqlGenericExpression xmi:id="_UykJy60HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykJzK0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykJza0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykJzq0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykJz60HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_UykJ0K0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykJ0a0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </maxLengthWithNullIndicator>
        <maxLengthWithBlankNullIndicator xmi:id="_UykJ0q0HEfCdr4B5bHeijA" computed="true" length="36">
          <parameters xmi:id="_UykJ060HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykJ1K0HEfCdr4B5bHeijA" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WklddK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Blank_and_Null_0.1.definition#_-hzp8JSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykJ1a0HEfCdr4B5bHeijA" body="SELECT MAX(LEN(CASE WHEN &quot;CompanyName&quot; IS NULL  THEN '' ELSE &quot;CompanyName&quot; END)) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykJ1q0HEfCdr4B5bHeijA" name="Maximal Length With Blank and Null" label="Maximal Length With Blank and Null">
            <taggedValue xmi:id="_UykJ160HEfCdr4B5bHeijA" tag="Description" value="computes the maximal length of a text field."/>
            <taggedValue xmi:id="_UykJ2K0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the length of the longest textual record"/>
            <sqlGenericExpression xmi:id="_UykJ2a0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykJ2q0HEfCdr4B5bHeijA" body="SELECT MAX(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykJ260HEfCdr4B5bHeijA" body="SELECT MAX(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykJ3K0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykJ3a0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykJ3q0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_UykJ360HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykJ4K0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykJ4a0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykJ4q0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykJ460HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_UykJ5K0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykJ5a0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </maxLengthWithBlankNullIndicator>
        <avgLengthWithBlankIndicator xmi:id="_UykJ5q0HEfCdr4B5bHeijA" count="91" computed="true" sumLength="1720.0">
          <parameters xmi:id="_UykJ560HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykJ6K0HEfCdr4B5bHeijA"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WklddK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Blank_0.1.definition#__gPoIJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykJ6a0HEfCdr4B5bHeijA" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM(&quot;CompanyName&quot;)) )=0  THEN '' ELSE  &quot;CompanyName&quot; END)), COUNT(*) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (&quot;CompanyName&quot; IS NOT NULL ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykJ6q0HEfCdr4B5bHeijA" name="Average Length With Blank" label="Average Length With Blank">
            <taggedValue xmi:id="_UykJ660HEfCdr4B5bHeijA" tag="Description" value="computes the average length of the field. Does not take into account the null values when computing the average length."/>
            <taggedValue xmi:id="_UykJ7K0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the average length of the textual record of non-null values"/>
            <sqlGenericExpression xmi:id="_UykJ7a0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykJ7q0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykJ760HEfCdr4B5bHeijA" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) )=0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykJ8K0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykJ8a0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykJ8q0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_UykJ860HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykJ9K0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykJ9a0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykJ9q0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykJ960HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykJ-K0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </avgLengthWithBlankIndicator>
        <avgLengthWithNullIndicator xmi:id="_UykJ-a0HEfCdr4B5bHeijA" count="91" computed="true" sumLength="1720.0">
          <parameters xmi:id="_UykJ-q0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykJ-60HEfCdr4B5bHeijA" useBlank="false" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WklddK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Null_0.1.definition#__vI_wJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykJ_K0HEfCdr4B5bHeijA" body="SELECT SUM(LEN(CASE WHEN &quot;CompanyName&quot; IS NULL  THEN '' ELSE &quot;CompanyName&quot; END)), COUNT(*) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (LTRIM(RTRIM(CASE WHEN &quot;CompanyName&quot; IS NULL  THEN 'NULL TALEND' ELSE &quot;CompanyName&quot; END)) &lt;> '' ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykJ_a0HEfCdr4B5bHeijA" name="Average Length With Null" label="Average Length With Null">
            <taggedValue xmi:id="_UykJ_q0HEfCdr4B5bHeijA" tag="Description" value="computes the average length of the field. Does not take into account the blank values when computing the average length."/>
            <taggedValue xmi:id="_UykJ_60HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the average length of the textual record of non-blank values"/>
            <sqlGenericExpression xmi:id="_UykKAK0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykKAa0HEfCdr4B5bHeijA" body="SELECT SUM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykKAq0HEfCdr4B5bHeijA" body="SELECT SUM(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykKA60HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykKBK0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykKBa0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_UykKBq0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykKB60HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykKCK0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykKCa0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykKCq0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_UykKC60HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykKDK0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </avgLengthWithNullIndicator>
        <avgLengthWithBlankNullIndicator xmi:id="_UykKDa0HEfCdr4B5bHeijA" count="91" computed="true" sumLength="1720.0">
          <parameters xmi:id="_UykKDq0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykKD60HEfCdr4B5bHeijA" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WklddK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Blank_and_Null_0.1.definition#__TbUIJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykKEK0HEfCdr4B5bHeijA" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM( CASE WHEN &quot;CompanyName&quot; IS NULL  THEN '' ELSE &quot;CompanyName&quot; END )) )=0  THEN '' ELSE   CASE WHEN &quot;CompanyName&quot; IS NULL  THEN '' ELSE &quot;CompanyName&quot; END  END)), COUNT(*) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykKEa0HEfCdr4B5bHeijA" name="Average Length With Blank and Null" label="Average Length With Blank and Null">
            <taggedValue xmi:id="_UykKEq0HEfCdr4B5bHeijA" tag="Description" value="computes the average length of the field."/>
            <taggedValue xmi:id="_UykKE60HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the average length of the textual record"/>
            <sqlGenericExpression xmi:id="_UykKFK0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykKFa0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykKFq0HEfCdr4B5bHeijA" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) )=0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykKF60HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykKGK0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykKGa0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_UykKGq0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykKG60HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykKHK0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykKHa0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykKHq0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_UykKH60HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykKIK0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </avgLengthWithBlankNullIndicator>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RowCountIndicator" xmi:id="_UykKIa0HEfCdr4B5bHeijA" count="91" computed="true">
        <parameters xmi:id="_UykKIq0HEfCdr4B5bHeijA"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldeK0DEfCdr4B5bHeijA"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Row_Count_0.1.definition#_ccFOkBF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykKI60HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; " language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_UykKJK0HEfCdr4B5bHeijA" name="Row Count" label="Row Count">
          <taggedValue xmi:id="_UykKJa0HEfCdr4B5bHeijA" tag="Description" value="counts the number of rows"/>
          <taggedValue xmi:id="_UykKJq0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the number of records"/>
          <sqlGenericExpression xmi:id="_UykKJ60HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:NullCountIndicator" xmi:id="_UykKKK0HEfCdr4B5bHeijA" count="91" computed="true">
        <parameters xmi:id="_UykKKa0HEfCdr4B5bHeijA"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldeK0DEfCdr4B5bHeijA"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Null_Count_0.1.definition#_GrAeADh9Ed2XmO7pl5Yuyg"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykKKq0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE &quot;ContactName&quot; IS NULL " language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_UykKK60HEfCdr4B5bHeijA" name="Null Count" label="Null Count">
          <taggedValue xmi:id="_UykKLK0HEfCdr4B5bHeijA" tag="Purpose" value="evaluate the number of missing data (null records)"/>
          <taggedValue xmi:id="_UykKLa0HEfCdr4B5bHeijA" tag="Description" value="counts the number of null rows"/>
          <sqlGenericExpression xmi:id="_UykKLq0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE &lt;%=__COLUMN_NAMES__%> IS NULL &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:DistinctCountIndicator" xmi:id="_UykKL60HEfCdr4B5bHeijA" count="91" computed="true" distinctValueCount="91">
        <parameters xmi:id="_UykKMK0HEfCdr4B5bHeijA"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldeK0DEfCdr4B5bHeijA"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Distinct_Count_0.1.definition#_ccHq0BF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykKMa0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT DISTINCT &quot;ContactName&quot; FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; ) A" language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_UykKMq0HEfCdr4B5bHeijA" name="Distinct Count" label="Distinct Count">
          <taggedValue xmi:id="_UykKM60HEfCdr4B5bHeijA" tag="Description" value="counts the number of distinct rows (like a &quot;SELECT DISTINCT&quot; SQL statement)"/>
          <taggedValue xmi:id="_UykKNK0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the number of distinct records"/>
          <sqlGenericExpression xmi:id="_UykKNa0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT DISTINCT &lt;%=__COLUMN_NAMES__%> FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>) A" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:UniqueCountIndicator" xmi:id="_UykKNq0HEfCdr4B5bHeijA" count="91" computed="true" uniqueValueCount="91">
        <parameters xmi:id="_UykKN60HEfCdr4B5bHeijA"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldeK0DEfCdr4B5bHeijA"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Unique_Count_0.1.definition#_ccHq0RF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykKOK0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &quot;ContactName&quot;, COUNT(*) mycount FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot;  GROUP BY &quot;ContactName&quot; HAVING COUNT(*) = 1) AS myquery" language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_UykKOa0HEfCdr4B5bHeijA" name="Unique Count" label="Unique Count">
          <taggedValue xmi:id="_UykKOq0HEfCdr4B5bHeijA" tag="Description" value="counts the number of unique rows (i.e. distinct rows with only one instance: rows that are not duplicated)"/>
          <taggedValue xmi:id="_UykKO60HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the number of unique records"/>
          <sqlGenericExpression xmi:id="_UykKPK0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="SQL"/>
          <sqlGenericExpression xmi:id="_UykKPa0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount = 1) AS myquery" language="MySQL"/>
          <sqlGenericExpression xmi:id="_UykKPq0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) myquery" language="Oracle"/>
          <sqlGenericExpression xmi:id="_UykKP60HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount = 1) AS myquery" language="Teradata"/>
          <sqlGenericExpression xmi:id="_UykKQK0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_UykKQa0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_UykKQq0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1)  myquery" language="Hive" version=""/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:DuplicateCountIndicator" xmi:id="_UykKQ60HEfCdr4B5bHeijA" count="91" computed="true" duplicateValueCount="0">
        <parameters xmi:id="_UykKRK0HEfCdr4B5bHeijA"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldeK0DEfCdr4B5bHeijA"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Duplicate_Count_0.1.definition#_ccHq0hF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykKRa0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &quot;ContactName&quot;, COUNT(*) mycount FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot;  m  GROUP BY &quot;ContactName&quot; HAVING COUNT(*) > 1) myquery" language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_UykKRq0HEfCdr4B5bHeijA" name="Duplicate Count" label="Duplicate Count">
          <taggedValue xmi:id="_UykKR60HEfCdr4B5bHeijA" tag="Description" value="counts the number of duplicate rows. This number and the number of unique data equals the number of distinct rows"/>
          <taggedValue xmi:id="_UykKSK0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the number of duplicated records"/>
          <sqlGenericExpression xmi:id="_UykKSa0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) AS myquery" language="SQL"/>
          <sqlGenericExpression xmi:id="_UykKSq0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount > 1) AS myquery" language="MySQL"/>
          <sqlGenericExpression xmi:id="_UykKS60HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Oracle"/>
          <sqlGenericExpression xmi:id="_UykKTK0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount > 1) AS myquery" language="Teradata"/>
          <sqlGenericExpression xmi:id="_UykKTa0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_UykKTq0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) AS myquery" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_UykKT60HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Hive"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:BlankCountIndicator" xmi:id="_UykKUK0HEfCdr4B5bHeijA" count="91" computed="true">
        <parameters xmi:id="_UykKUa0HEfCdr4B5bHeijA"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldeK0DEfCdr4B5bHeijA"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Blank_Count_0.1.definition#_ccHq0xF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykKUq0HEfCdr4B5bHeijA" body="SELECT COUNT(&quot;ContactName&quot;) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot;  WHERE LTRIM(RTRIM(&quot;ContactName&quot;)) = '' " language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_UykKU60HEfCdr4B5bHeijA" name="Blank Count" label="Blank Count">
          <taggedValue xmi:id="_UykKVK0HEfCdr4B5bHeijA" tag="Description" value="counts the number of blank rows. A blank is a non null textual data that contains only white spaces (or nothing). Note that Oracle does not distinguish between the empty string and the null value"/>
          <taggedValue xmi:id="_UykKVa0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the number of blank records"/>
          <sqlGenericExpression xmi:id="_UykKVq0HEfCdr4B5bHeijA" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE TRIM(&lt;%=__COLUMN_NAMES__%>) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_UykKV60HEfCdr4B5bHeijA" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE TRIM(&lt;%=__COLUMN_NAMES__%>) IS NULL &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_UykKWK0HEfCdr4B5bHeijA" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_UykKWa0HEfCdr4B5bHeijA" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_UykKWq0HEfCdr4B5bHeijA" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> = '' or RTRIM(LTRIM(&lt;%=__COLUMN_NAMES__%>)) = '') &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:TextIndicator" xmi:id="_UykKW60HEfCdr4B5bHeijA">
        <parameters xmi:id="_UykKXK0HEfCdr4B5bHeijA"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldeK0DEfCdr4B5bHeijA"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Text_Statistics_0.1.definition#_yb9x0zh8Ed2XmO7pl5Yuyg"/>
        <averageLengthIndicator xmi:id="_UykKXa0HEfCdr4B5bHeijA" count="91" computed="true" sumLength="1268.0">
          <parameters xmi:id="_UykKXq0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykKX60HEfCdr4B5bHeijA" useBlank="false"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldeK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_0.1.definition#_ccIR4BF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykKYK0HEfCdr4B5bHeijA" body="SELECT SUM(LEN(&quot;ContactName&quot;)), COUNT(&quot;ContactName&quot;) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (&quot;ContactName&quot; IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &quot;ContactName&quot; IS NULL  THEN 'NULL TALEND' ELSE &quot;ContactName&quot; END)) &lt;> '' ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykKYa0HEfCdr4B5bHeijA" name="Average Length" label="Average Length">
            <taggedValue xmi:id="_UykKYq0HEfCdr4B5bHeijA" tag="Description" value="computes the average length of the field. Does not take into account the null and blank values when computing the average length."/>
            <taggedValue xmi:id="_UykKY60HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the average length of the textual record of non-null and non-blank values"/>
            <sqlGenericExpression xmi:id="_UykKZK0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykKZa0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykKZq0HEfCdr4B5bHeijA" body="SELECT SUM(LEN(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykKZ60HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykKaK0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykKaa0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_UykKaq0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykKa60HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykKbK0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )), COUNT( &lt;%=__COLUMN_NAMES__%> ) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykKba0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykKbq0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_UykKb60HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykKcK0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </averageLengthIndicator>
        <maxLengthIndicator xmi:id="_UykKca0HEfCdr4B5bHeijA" computed="true" length="23">
          <parameters xmi:id="_UykKcq0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykKc60HEfCdr4B5bHeijA" useBlank="false"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldeK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_0.1.definition#_ccHq1RF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykKdK0HEfCdr4B5bHeijA" body="SELECT MAX(LEN(&quot;ContactName&quot;)) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (&quot;ContactName&quot; IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &quot;ContactName&quot; IS NULL  THEN 'NULL TALEND' ELSE &quot;ContactName&quot; END)) &lt;> '' ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykKda0HEfCdr4B5bHeijA" name="Maximal Length" label="Maximal Length">
            <taggedValue xmi:id="_UykKdq0HEfCdr4B5bHeijA" tag="Description" value="computes the maximal length of a text field. Does not take into account the null and blank values when computing the maximal length."/>
            <taggedValue xmi:id="_UykKd60HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the length of the longest textual record of non-null and non-blank values"/>
            <sqlGenericExpression xmi:id="_UykKeK0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykKea0HEfCdr4B5bHeijA" body="SELECT MAX( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle" modificationDate=""/>
            <sqlGenericExpression xmi:id="_UykKeq0HEfCdr4B5bHeijA" body="SELECT MAX(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykKe60HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykKfK0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykKfa0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive" modificationDate=""/>
            <sqlGenericExpression xmi:id="_UykKfq0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykKf60HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' )  &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykKgK0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykKga0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykKgq0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_UykKg60HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykKhK0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </maxLengthIndicator>
        <minLengthIndicator xmi:id="_UykKha0HEfCdr4B5bHeijA" computed="true" length="8">
          <parameters xmi:id="_UykKhq0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykKh60HEfCdr4B5bHeijA" useBlank="false"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldeK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_0.1.definition#_ccHq1BF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykKiK0HEfCdr4B5bHeijA" body="SELECT MIN(LEN(&quot;ContactName&quot;)) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (&quot;ContactName&quot; IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &quot;ContactName&quot; IS NULL  THEN 'NULL TALEND' ELSE &quot;ContactName&quot; END)) &lt;> '' ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykKia0HEfCdr4B5bHeijA" name="Minimal Length" label="Minimal Length">
            <taggedValue xmi:id="_UykKiq0HEfCdr4B5bHeijA" tag="Description" value="computes the minimal length of a text field. Does not take into account the null and blank values when computing the minimal length."/>
            <taggedValue xmi:id="_UykKi60HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the length of the smallest textual record of non-null and non-blank values"/>
            <sqlGenericExpression xmi:id="_UykKjK0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykKja0HEfCdr4B5bHeijA" body="SELECT MIN( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykKjq0HEfCdr4B5bHeijA" body="SELECT MIN(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykKj60HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykKkK0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykKka0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_UykKkq0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykKk60HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykKlK0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykKla0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (1=1) AND (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykKlq0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_UykKl60HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykKmK0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </minLengthIndicator>
        <minLengthWithBlankIndicator xmi:id="_UykKma0HEfCdr4B5bHeijA" computed="true" length="8">
          <parameters xmi:id="_UykKmq0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykKm60HEfCdr4B5bHeijA"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldeK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Blank_0.1.definition#_G4EzQZU9Ed-Y15ulK_jijQ"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykKnK0HEfCdr4B5bHeijA" body="SELECT MIN(LEN(&quot;ContactName&quot;)) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (&quot;ContactName&quot; IS NOT NULL ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykKna0HEfCdr4B5bHeijA" name="Minimal Length With Blank" label="Minimal Length With Blank">
            <taggedValue xmi:id="_UykKnq0HEfCdr4B5bHeijA" tag="Description" value="computes the minimal length of a text field. Does not take into account the null values when computing the minimal length."/>
            <taggedValue xmi:id="_UykKn60HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the length of the smallest textual record of non-null values"/>
            <sqlGenericExpression xmi:id="_UykKoK0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykKoa0HEfCdr4B5bHeijA" body="SELECT MIN( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykKoq0HEfCdr4B5bHeijA" body="SELECT MIN(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykKo60HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykKpK0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykKpa0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_UykKpq0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykKp60HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykKqK0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykKqa0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykKqq0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykKq60HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </minLengthWithBlankIndicator>
        <minLengthWithNullIndicator xmi:id="_UykKrK0HEfCdr4B5bHeijA" computed="true" length="8">
          <parameters xmi:id="_UykKra0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykKrq0HEfCdr4B5bHeijA" useBlank="false" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldeK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Null_0.1.definition#_a4KsoI1qEd-xwI2imLgHRA"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykKr60HEfCdr4B5bHeijA" body="SELECT MIN(LEN(CASE WHEN &quot;ContactName&quot; IS NULL  THEN '' ELSE &quot;ContactName&quot; END)) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (LTRIM(RTRIM(CASE WHEN &quot;ContactName&quot; IS NULL  THEN 'NULL TALEND' ELSE &quot;ContactName&quot; END)) &lt;> '' ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykKsK0HEfCdr4B5bHeijA" name="Minimal Length With Null" label="Minimal Length With Null">
            <taggedValue xmi:id="_UykKsa0HEfCdr4B5bHeijA" tag="Description" value="computes the minimal length of a text field. Does not take into account the blank values when computing the minimal length."/>
            <taggedValue xmi:id="_UykKsq0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the length of the smallest textual record of non-blank values"/>
            <sqlGenericExpression xmi:id="_UykKs60HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykKtK0HEfCdr4B5bHeijA" body="SELECT MIN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykKta0HEfCdr4B5bHeijA" body="SELECT MIN(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykKtq0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykKt60HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykKuK0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_UykKua0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykKuq0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykKu60HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykKvK0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykKva0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_UykKvq0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykKv60HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </minLengthWithNullIndicator>
        <minLengthWithBlankNullIndicator xmi:id="_UykKwK0HEfCdr4B5bHeijA" computed="true" length="8">
          <parameters xmi:id="_UykKwa0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykKwq0HEfCdr4B5bHeijA" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldeK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Blank_and_Null_0.1.definition#_9HDjMJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykKw60HEfCdr4B5bHeijA" body="SELECT MIN(LEN(CASE WHEN &quot;ContactName&quot; IS NULL  THEN '' ELSE &quot;ContactName&quot; END)) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykKxK0HEfCdr4B5bHeijA" name="Minimal Length With Blank and Null" label="Minimal Length With Blank and Null">
            <taggedValue xmi:id="_UykKxa0HEfCdr4B5bHeijA" tag="Description" value="computes the minimal length of a text field."/>
            <taggedValue xmi:id="_UykKxq0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the length of the smallest textual record"/>
            <sqlGenericExpression xmi:id="_UykKx60HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykKyK0HEfCdr4B5bHeijA" body="SELECT MIN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykKya0HEfCdr4B5bHeijA" body="SELECT MIN(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykKyq0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykKy60HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykKzK0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_UykKza0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykKzq0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykKz60HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykK0K0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykK0a0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_UykK0q0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykK060HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </minLengthWithBlankNullIndicator>
        <maxLengthWithBlankIndicator xmi:id="_UykK1K0HEfCdr4B5bHeijA" computed="true" length="23">
          <parameters xmi:id="_UykK1a0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykK1q0HEfCdr4B5bHeijA"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldeK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Blank_0.1.definition#_-xmZcJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykK160HEfCdr4B5bHeijA" body="SELECT MAX(LEN(&quot;ContactName&quot;)) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (&quot;ContactName&quot; IS NOT NULL ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykK2K0HEfCdr4B5bHeijA" name="Maximal Length With Blank" label="Maximal Length With Blank">
            <taggedValue xmi:id="_UykK2a0HEfCdr4B5bHeijA" tag="Description" value="computes the maximal length of a text field. Does not take into account the null values when computing the maximal length."/>
            <taggedValue xmi:id="_UykK2q0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the length of the longest textual record of non-null values"/>
            <sqlGenericExpression xmi:id="_UykK260HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykK3K0HEfCdr4B5bHeijA" body="SELECT MAX( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykK3a0HEfCdr4B5bHeijA" body="SELECT MAX(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykK3q0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykK360HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykK4K0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_UykK4a0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykK4q0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykK460HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykK5K0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykK5a0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykK5q0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </maxLengthWithBlankIndicator>
        <maxLengthWithNullIndicator xmi:id="_UykK560HEfCdr4B5bHeijA" computed="true" length="23">
          <parameters xmi:id="_UykK6K0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykK6a0HEfCdr4B5bHeijA" useBlank="false" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldeK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Null_0.1.definition#_-_UFUJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykK6q0HEfCdr4B5bHeijA" body="SELECT MAX(LEN(CASE WHEN &quot;ContactName&quot; IS NULL  THEN '' ELSE &quot;ContactName&quot; END)) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (LTRIM(RTRIM(CASE WHEN &quot;ContactName&quot; IS NULL  THEN 'NULL TALEND' ELSE &quot;ContactName&quot; END)) &lt;> '' ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykK660HEfCdr4B5bHeijA" name="Maximal Length With Null" label="Maximal Length With Null">
            <taggedValue xmi:id="_UykK7K0HEfCdr4B5bHeijA" tag="Description" value="computes the maximal length of a text field. Does not take into account the blank values when computing the maximal length."/>
            <taggedValue xmi:id="_UykK7a0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the length of the longest textual record of non-blank values"/>
            <sqlGenericExpression xmi:id="_UykK7q0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykK760HEfCdr4B5bHeijA" body="SELECT MAX(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykK8K0HEfCdr4B5bHeijA" body="SELECT MAX(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykK8a0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykK8q0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykK860HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive" version=""/>
            <sqlGenericExpression xmi:id="_UykK9K0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykK9a0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykK9q0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykK960HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykK-K0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_UykK-a0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykK-q0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </maxLengthWithNullIndicator>
        <maxLengthWithBlankNullIndicator xmi:id="_UykK-60HEfCdr4B5bHeijA" computed="true" length="23">
          <parameters xmi:id="_UykK_K0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykK_a0HEfCdr4B5bHeijA" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldeK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Blank_and_Null_0.1.definition#_-hzp8JSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykK_q0HEfCdr4B5bHeijA" body="SELECT MAX(LEN(CASE WHEN &quot;ContactName&quot; IS NULL  THEN '' ELSE &quot;ContactName&quot; END)) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykK_60HEfCdr4B5bHeijA" name="Maximal Length With Blank and Null" label="Maximal Length With Blank and Null">
            <taggedValue xmi:id="_UykLAK0HEfCdr4B5bHeijA" tag="Description" value="computes the maximal length of a text field."/>
            <taggedValue xmi:id="_UykLAa0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the length of the longest textual record"/>
            <sqlGenericExpression xmi:id="_UykLAq0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykLA60HEfCdr4B5bHeijA" body="SELECT MAX(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykLBK0HEfCdr4B5bHeijA" body="SELECT MAX(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykLBa0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykLBq0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykLB60HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_UykLCK0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykLCa0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykLCq0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykLC60HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykLDK0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_UykLDa0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykLDq0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </maxLengthWithBlankNullIndicator>
        <avgLengthWithBlankIndicator xmi:id="_UykLD60HEfCdr4B5bHeijA" count="91" computed="true" sumLength="1268.0">
          <parameters xmi:id="_UykLEK0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykLEa0HEfCdr4B5bHeijA"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldeK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Blank_0.1.definition#__gPoIJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykLEq0HEfCdr4B5bHeijA" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM(&quot;ContactName&quot;)) )=0  THEN '' ELSE  &quot;ContactName&quot; END)), COUNT(*) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (&quot;ContactName&quot; IS NOT NULL ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykLE60HEfCdr4B5bHeijA" name="Average Length With Blank" label="Average Length With Blank">
            <taggedValue xmi:id="_UykLFK0HEfCdr4B5bHeijA" tag="Description" value="computes the average length of the field. Does not take into account the null values when computing the average length."/>
            <taggedValue xmi:id="_UykLFa0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the average length of the textual record of non-null values"/>
            <sqlGenericExpression xmi:id="_UykLFq0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykLF60HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykLGK0HEfCdr4B5bHeijA" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) )=0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykLGa0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykLGq0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykLG60HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_UykLHK0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykLHa0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykLHq0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykLH60HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykLIK0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykLIa0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </avgLengthWithBlankIndicator>
        <avgLengthWithNullIndicator xmi:id="_UykLIq0HEfCdr4B5bHeijA" count="91" computed="true" sumLength="1268.0">
          <parameters xmi:id="_UykLI60HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykLJK0HEfCdr4B5bHeijA" useBlank="false" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldeK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Null_0.1.definition#__vI_wJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykLJa0HEfCdr4B5bHeijA" body="SELECT SUM(LEN(CASE WHEN &quot;ContactName&quot; IS NULL  THEN '' ELSE &quot;ContactName&quot; END)), COUNT(*) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (LTRIM(RTRIM(CASE WHEN &quot;ContactName&quot; IS NULL  THEN 'NULL TALEND' ELSE &quot;ContactName&quot; END)) &lt;> '' ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykLJq0HEfCdr4B5bHeijA" name="Average Length With Null" label="Average Length With Null">
            <taggedValue xmi:id="_UykLJ60HEfCdr4B5bHeijA" tag="Description" value="computes the average length of the field. Does not take into account the blank values when computing the average length."/>
            <taggedValue xmi:id="_UykLKK0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the average length of the textual record of non-blank values"/>
            <sqlGenericExpression xmi:id="_UykLKa0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykLKq0HEfCdr4B5bHeijA" body="SELECT SUM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykLK60HEfCdr4B5bHeijA" body="SELECT SUM(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykLLK0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykLLa0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykLLq0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_UykLL60HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykLMK0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykLMa0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykLMq0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykLM60HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_UykLNK0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykLNa0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </avgLengthWithNullIndicator>
        <avgLengthWithBlankNullIndicator xmi:id="_UykLNq0HEfCdr4B5bHeijA" count="91" computed="true" sumLength="1268.0">
          <parameters xmi:id="_UykLN60HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykLOK0HEfCdr4B5bHeijA" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldeK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Blank_and_Null_0.1.definition#__TbUIJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykLOa0HEfCdr4B5bHeijA" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM( CASE WHEN &quot;ContactName&quot; IS NULL  THEN '' ELSE &quot;ContactName&quot; END )) )=0  THEN '' ELSE   CASE WHEN &quot;ContactName&quot; IS NULL  THEN '' ELSE &quot;ContactName&quot; END  END)), COUNT(*) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykLOq0HEfCdr4B5bHeijA" name="Average Length With Blank and Null" label="Average Length With Blank and Null">
            <taggedValue xmi:id="_UykLO60HEfCdr4B5bHeijA" tag="Description" value="computes the average length of the field."/>
            <taggedValue xmi:id="_UykLPK0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the average length of the textual record"/>
            <sqlGenericExpression xmi:id="_UykLPa0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykLPq0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykLP60HEfCdr4B5bHeijA" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) )=0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykLQK0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykLQa0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykLQq0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_UykLQ60HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykLRK0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykLRa0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykLRq0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykLR60HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_UykLSK0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykLSa0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </avgLengthWithBlankNullIndicator>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RowCountIndicator" xmi:id="_UykLSq0HEfCdr4B5bHeijA" count="91" computed="true">
        <parameters xmi:id="_UykLS60HEfCdr4B5bHeijA"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldfK0DEfCdr4B5bHeijA"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Row_Count_0.1.definition#_ccFOkBF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykLTK0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; " language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_UykLTa0HEfCdr4B5bHeijA" name="Row Count" label="Row Count">
          <taggedValue xmi:id="_UykLTq0HEfCdr4B5bHeijA" tag="Description" value="counts the number of rows"/>
          <taggedValue xmi:id="_UykLT60HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the number of records"/>
          <sqlGenericExpression xmi:id="_UykLUK0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:NullCountIndicator" xmi:id="_UykLUa0HEfCdr4B5bHeijA" count="91" computed="true">
        <parameters xmi:id="_UykLUq0HEfCdr4B5bHeijA"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldfK0DEfCdr4B5bHeijA"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Null_Count_0.1.definition#_GrAeADh9Ed2XmO7pl5Yuyg"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykLU60HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE &quot;ContactTitle&quot; IS NULL " language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_UykLVK0HEfCdr4B5bHeijA" name="Null Count" label="Null Count">
          <taggedValue xmi:id="_UykLVa0HEfCdr4B5bHeijA" tag="Purpose" value="evaluate the number of missing data (null records)"/>
          <taggedValue xmi:id="_UykLVq0HEfCdr4B5bHeijA" tag="Description" value="counts the number of null rows"/>
          <sqlGenericExpression xmi:id="_UykLV60HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE &lt;%=__COLUMN_NAMES__%> IS NULL &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:DistinctCountIndicator" xmi:id="_UykLWK0HEfCdr4B5bHeijA" count="91" computed="true" distinctValueCount="12">
        <parameters xmi:id="_UykLWa0HEfCdr4B5bHeijA"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldfK0DEfCdr4B5bHeijA"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Distinct_Count_0.1.definition#_ccHq0BF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykLWq0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT DISTINCT &quot;ContactTitle&quot; FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; ) A" language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_UykLW60HEfCdr4B5bHeijA" name="Distinct Count" label="Distinct Count">
          <taggedValue xmi:id="_UykLXK0HEfCdr4B5bHeijA" tag="Description" value="counts the number of distinct rows (like a &quot;SELECT DISTINCT&quot; SQL statement)"/>
          <taggedValue xmi:id="_UykLXa0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the number of distinct records"/>
          <sqlGenericExpression xmi:id="_UykLXq0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT DISTINCT &lt;%=__COLUMN_NAMES__%> FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>) A" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:UniqueCountIndicator" xmi:id="_UykLX60HEfCdr4B5bHeijA" count="91" computed="true" uniqueValueCount="2">
        <parameters xmi:id="_UykLYK0HEfCdr4B5bHeijA"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldfK0DEfCdr4B5bHeijA"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Unique_Count_0.1.definition#_ccHq0RF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykLYa0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &quot;ContactTitle&quot;, COUNT(*) mycount FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot;  GROUP BY &quot;ContactTitle&quot; HAVING COUNT(*) = 1) AS myquery" language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_UykLYq0HEfCdr4B5bHeijA" name="Unique Count" label="Unique Count">
          <taggedValue xmi:id="_UykLY60HEfCdr4B5bHeijA" tag="Description" value="counts the number of unique rows (i.e. distinct rows with only one instance: rows that are not duplicated)"/>
          <taggedValue xmi:id="_UykLZK0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the number of unique records"/>
          <sqlGenericExpression xmi:id="_UykLZa0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="SQL"/>
          <sqlGenericExpression xmi:id="_UykLZq0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount = 1) AS myquery" language="MySQL"/>
          <sqlGenericExpression xmi:id="_UykLZ60HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) myquery" language="Oracle"/>
          <sqlGenericExpression xmi:id="_UykLaK0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount = 1) AS myquery" language="Teradata"/>
          <sqlGenericExpression xmi:id="_UykLaa0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_UykLaq0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_UykLa60HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1)  myquery" language="Hive" version=""/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:DuplicateCountIndicator" xmi:id="_UykLbK0HEfCdr4B5bHeijA" count="91" computed="true" duplicateValueCount="10">
        <parameters xmi:id="_UykLba0HEfCdr4B5bHeijA"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldfK0DEfCdr4B5bHeijA"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Duplicate_Count_0.1.definition#_ccHq0hF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykLbq0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &quot;ContactTitle&quot;, COUNT(*) mycount FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot;  m  GROUP BY &quot;ContactTitle&quot; HAVING COUNT(*) > 1) myquery" language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_UykLb60HEfCdr4B5bHeijA" name="Duplicate Count" label="Duplicate Count">
          <taggedValue xmi:id="_UykLcK0HEfCdr4B5bHeijA" tag="Description" value="counts the number of duplicate rows. This number and the number of unique data equals the number of distinct rows"/>
          <taggedValue xmi:id="_UykLca0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the number of duplicated records"/>
          <sqlGenericExpression xmi:id="_UykLcq0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) AS myquery" language="SQL"/>
          <sqlGenericExpression xmi:id="_UykLc60HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount > 1) AS myquery" language="MySQL"/>
          <sqlGenericExpression xmi:id="_UykLdK0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Oracle"/>
          <sqlGenericExpression xmi:id="_UykLda0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount > 1) AS myquery" language="Teradata"/>
          <sqlGenericExpression xmi:id="_UykLdq0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_UykLd60HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) AS myquery" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_UykLeK0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Hive"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:BlankCountIndicator" xmi:id="_UykLea0HEfCdr4B5bHeijA" count="91" computed="true">
        <parameters xmi:id="_UykLeq0HEfCdr4B5bHeijA"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldfK0DEfCdr4B5bHeijA"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Blank_Count_0.1.definition#_ccHq0xF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykLe60HEfCdr4B5bHeijA" body="SELECT COUNT(&quot;ContactTitle&quot;) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot;  WHERE LTRIM(RTRIM(&quot;ContactTitle&quot;)) = '' " language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_UykLfK0HEfCdr4B5bHeijA" name="Blank Count" label="Blank Count">
          <taggedValue xmi:id="_UykLfa0HEfCdr4B5bHeijA" tag="Description" value="counts the number of blank rows. A blank is a non null textual data that contains only white spaces (or nothing). Note that Oracle does not distinguish between the empty string and the null value"/>
          <taggedValue xmi:id="_UykLfq0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the number of blank records"/>
          <sqlGenericExpression xmi:id="_UykLf60HEfCdr4B5bHeijA" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE TRIM(&lt;%=__COLUMN_NAMES__%>) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_UykLgK0HEfCdr4B5bHeijA" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE TRIM(&lt;%=__COLUMN_NAMES__%>) IS NULL &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_UykLga0HEfCdr4B5bHeijA" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_UykLgq0HEfCdr4B5bHeijA" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_UykLg60HEfCdr4B5bHeijA" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> = '' or RTRIM(LTRIM(&lt;%=__COLUMN_NAMES__%>)) = '') &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:TextIndicator" xmi:id="_UykLhK0HEfCdr4B5bHeijA">
        <parameters xmi:id="_UykLha0HEfCdr4B5bHeijA"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldfK0DEfCdr4B5bHeijA"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Text_Statistics_0.1.definition#_yb9x0zh8Ed2XmO7pl5Yuyg"/>
        <averageLengthIndicator xmi:id="_UykLhq0HEfCdr4B5bHeijA" count="91" computed="true" sumLength="1361.0">
          <parameters xmi:id="_UykLh60HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykLiK0HEfCdr4B5bHeijA" useBlank="false"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldfK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_0.1.definition#_ccIR4BF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykLia0HEfCdr4B5bHeijA" body="SELECT SUM(LEN(&quot;ContactTitle&quot;)), COUNT(&quot;ContactTitle&quot;) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (&quot;ContactTitle&quot; IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &quot;ContactTitle&quot; IS NULL  THEN 'NULL TALEND' ELSE &quot;ContactTitle&quot; END)) &lt;> '' ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykLiq0HEfCdr4B5bHeijA" name="Average Length" label="Average Length">
            <taggedValue xmi:id="_UykLi60HEfCdr4B5bHeijA" tag="Description" value="computes the average length of the field. Does not take into account the null and blank values when computing the average length."/>
            <taggedValue xmi:id="_UykLjK0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the average length of the textual record of non-null and non-blank values"/>
            <sqlGenericExpression xmi:id="_UykLja0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykLjq0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykLj60HEfCdr4B5bHeijA" body="SELECT SUM(LEN(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykLkK0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykLka0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykLkq0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_UykLk60HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykLlK0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykLla0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )), COUNT( &lt;%=__COLUMN_NAMES__%> ) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykLlq0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykLl60HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_UykLmK0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykLma0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </averageLengthIndicator>
        <maxLengthIndicator xmi:id="_UykLmq0HEfCdr4B5bHeijA" computed="true" length="30">
          <parameters xmi:id="_UykLm60HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykLnK0HEfCdr4B5bHeijA" useBlank="false"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldfK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_0.1.definition#_ccHq1RF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykLna0HEfCdr4B5bHeijA" body="SELECT MAX(LEN(&quot;ContactTitle&quot;)) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (&quot;ContactTitle&quot; IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &quot;ContactTitle&quot; IS NULL  THEN 'NULL TALEND' ELSE &quot;ContactTitle&quot; END)) &lt;> '' ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykLnq0HEfCdr4B5bHeijA" name="Maximal Length" label="Maximal Length">
            <taggedValue xmi:id="_UykLn60HEfCdr4B5bHeijA" tag="Description" value="computes the maximal length of a text field. Does not take into account the null and blank values when computing the maximal length."/>
            <taggedValue xmi:id="_UykLoK0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the length of the longest textual record of non-null and non-blank values"/>
            <sqlGenericExpression xmi:id="_UykLoa0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykLoq0HEfCdr4B5bHeijA" body="SELECT MAX( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle" modificationDate=""/>
            <sqlGenericExpression xmi:id="_UykLo60HEfCdr4B5bHeijA" body="SELECT MAX(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykLpK0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykLpa0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykLpq0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive" modificationDate=""/>
            <sqlGenericExpression xmi:id="_UykLp60HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykLqK0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' )  &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykLqa0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykLqq0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykLq60HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_UykLrK0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykLra0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </maxLengthIndicator>
        <minLengthIndicator xmi:id="_UykLrq0HEfCdr4B5bHeijA" computed="true" length="5">
          <parameters xmi:id="_UykLr60HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykLsK0HEfCdr4B5bHeijA" useBlank="false"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldfK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_0.1.definition#_ccHq1BF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykLsa0HEfCdr4B5bHeijA" body="SELECT MIN(LEN(&quot;ContactTitle&quot;)) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (&quot;ContactTitle&quot; IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &quot;ContactTitle&quot; IS NULL  THEN 'NULL TALEND' ELSE &quot;ContactTitle&quot; END)) &lt;> '' ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykLsq0HEfCdr4B5bHeijA" name="Minimal Length" label="Minimal Length">
            <taggedValue xmi:id="_UykLs60HEfCdr4B5bHeijA" tag="Description" value="computes the minimal length of a text field. Does not take into account the null and blank values when computing the minimal length."/>
            <taggedValue xmi:id="_UykLtK0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the length of the smallest textual record of non-null and non-blank values"/>
            <sqlGenericExpression xmi:id="_UykLta0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykLtq0HEfCdr4B5bHeijA" body="SELECT MIN( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykLt60HEfCdr4B5bHeijA" body="SELECT MIN(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykLuK0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykLua0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykLuq0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_UykLu60HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykLvK0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykLva0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykLvq0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (1=1) AND (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykLv60HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_UykLwK0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykLwa0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </minLengthIndicator>
        <minLengthWithBlankIndicator xmi:id="_UykLwq0HEfCdr4B5bHeijA" computed="true" length="5">
          <parameters xmi:id="_UykLw60HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykLxK0HEfCdr4B5bHeijA"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldfK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Blank_0.1.definition#_G4EzQZU9Ed-Y15ulK_jijQ"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykLxa0HEfCdr4B5bHeijA" body="SELECT MIN(LEN(&quot;ContactTitle&quot;)) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (&quot;ContactTitle&quot; IS NOT NULL ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykLxq0HEfCdr4B5bHeijA" name="Minimal Length With Blank" label="Minimal Length With Blank">
            <taggedValue xmi:id="_UykLx60HEfCdr4B5bHeijA" tag="Description" value="computes the minimal length of a text field. Does not take into account the null values when computing the minimal length."/>
            <taggedValue xmi:id="_UykLyK0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the length of the smallest textual record of non-null values"/>
            <sqlGenericExpression xmi:id="_UykLya0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykLyq0HEfCdr4B5bHeijA" body="SELECT MIN( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykLy60HEfCdr4B5bHeijA" body="SELECT MIN(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykLzK0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykLza0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykLzq0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_UykLz60HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykL0K0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykL0a0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykL0q0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykL060HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykL1K0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </minLengthWithBlankIndicator>
        <minLengthWithNullIndicator xmi:id="_UykL1a0HEfCdr4B5bHeijA" computed="true" length="5">
          <parameters xmi:id="_UykL1q0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykL160HEfCdr4B5bHeijA" useBlank="false" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldfK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Null_0.1.definition#_a4KsoI1qEd-xwI2imLgHRA"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykL2K0HEfCdr4B5bHeijA" body="SELECT MIN(LEN(CASE WHEN &quot;ContactTitle&quot; IS NULL  THEN '' ELSE &quot;ContactTitle&quot; END)) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (LTRIM(RTRIM(CASE WHEN &quot;ContactTitle&quot; IS NULL  THEN 'NULL TALEND' ELSE &quot;ContactTitle&quot; END)) &lt;> '' ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykL2a0HEfCdr4B5bHeijA" name="Minimal Length With Null" label="Minimal Length With Null">
            <taggedValue xmi:id="_UykL2q0HEfCdr4B5bHeijA" tag="Description" value="computes the minimal length of a text field. Does not take into account the blank values when computing the minimal length."/>
            <taggedValue xmi:id="_UykL260HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the length of the smallest textual record of non-blank values"/>
            <sqlGenericExpression xmi:id="_UykL3K0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykL3a0HEfCdr4B5bHeijA" body="SELECT MIN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykL3q0HEfCdr4B5bHeijA" body="SELECT MIN(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykL360HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykL4K0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykL4a0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_UykL4q0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykL460HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykL5K0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykL5a0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykL5q0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_UykL560HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykL6K0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </minLengthWithNullIndicator>
        <minLengthWithBlankNullIndicator xmi:id="_UykL6a0HEfCdr4B5bHeijA" computed="true" length="5">
          <parameters xmi:id="_UykL6q0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykL660HEfCdr4B5bHeijA" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldfK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Blank_and_Null_0.1.definition#_9HDjMJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykL7K0HEfCdr4B5bHeijA" body="SELECT MIN(LEN(CASE WHEN &quot;ContactTitle&quot; IS NULL  THEN '' ELSE &quot;ContactTitle&quot; END)) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykL7a0HEfCdr4B5bHeijA" name="Minimal Length With Blank and Null" label="Minimal Length With Blank and Null">
            <taggedValue xmi:id="_UykL7q0HEfCdr4B5bHeijA" tag="Description" value="computes the minimal length of a text field."/>
            <taggedValue xmi:id="_UykL760HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the length of the smallest textual record"/>
            <sqlGenericExpression xmi:id="_UykL8K0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykL8a0HEfCdr4B5bHeijA" body="SELECT MIN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykL8q0HEfCdr4B5bHeijA" body="SELECT MIN(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykL860HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykL9K0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykL9a0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_UykL9q0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykL960HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykL-K0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykL-a0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykL-q0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_UykL-60HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykL_K0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </minLengthWithBlankNullIndicator>
        <maxLengthWithBlankIndicator xmi:id="_UykL_a0HEfCdr4B5bHeijA" computed="true" length="30">
          <parameters xmi:id="_UykL_q0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykL_60HEfCdr4B5bHeijA"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldfK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Blank_0.1.definition#_-xmZcJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykMAK0HEfCdr4B5bHeijA" body="SELECT MAX(LEN(&quot;ContactTitle&quot;)) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (&quot;ContactTitle&quot; IS NOT NULL ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykMAa0HEfCdr4B5bHeijA" name="Maximal Length With Blank" label="Maximal Length With Blank">
            <taggedValue xmi:id="_UykMAq0HEfCdr4B5bHeijA" tag="Description" value="computes the maximal length of a text field. Does not take into account the null values when computing the maximal length."/>
            <taggedValue xmi:id="_UykMA60HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the length of the longest textual record of non-null values"/>
            <sqlGenericExpression xmi:id="_UykMBK0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykMBa0HEfCdr4B5bHeijA" body="SELECT MAX( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykMBq0HEfCdr4B5bHeijA" body="SELECT MAX(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykMB60HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykMCK0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykMCa0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_UykMCq0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykMC60HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykMDK0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykMDa0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykMDq0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykMD60HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </maxLengthWithBlankIndicator>
        <maxLengthWithNullIndicator xmi:id="_UykMEK0HEfCdr4B5bHeijA" computed="true" length="30">
          <parameters xmi:id="_UykMEa0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykMEq0HEfCdr4B5bHeijA" useBlank="false" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldfK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Null_0.1.definition#_-_UFUJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykME60HEfCdr4B5bHeijA" body="SELECT MAX(LEN(CASE WHEN &quot;ContactTitle&quot; IS NULL  THEN '' ELSE &quot;ContactTitle&quot; END)) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (LTRIM(RTRIM(CASE WHEN &quot;ContactTitle&quot; IS NULL  THEN 'NULL TALEND' ELSE &quot;ContactTitle&quot; END)) &lt;> '' ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykMFK0HEfCdr4B5bHeijA" name="Maximal Length With Null" label="Maximal Length With Null">
            <taggedValue xmi:id="_UykMFa0HEfCdr4B5bHeijA" tag="Description" value="computes the maximal length of a text field. Does not take into account the blank values when computing the maximal length."/>
            <taggedValue xmi:id="_UykMFq0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the length of the longest textual record of non-blank values"/>
            <sqlGenericExpression xmi:id="_UykMF60HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykMGK0HEfCdr4B5bHeijA" body="SELECT MAX(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykMGa0HEfCdr4B5bHeijA" body="SELECT MAX(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykMGq0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykMG60HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykMHK0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive" version=""/>
            <sqlGenericExpression xmi:id="_UykMHa0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykMHq0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykMH60HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykMIK0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykMIa0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_UykMIq0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykMI60HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </maxLengthWithNullIndicator>
        <maxLengthWithBlankNullIndicator xmi:id="_UykMJK0HEfCdr4B5bHeijA" computed="true" length="30">
          <parameters xmi:id="_UykMJa0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykMJq0HEfCdr4B5bHeijA" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldfK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Blank_and_Null_0.1.definition#_-hzp8JSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykMJ60HEfCdr4B5bHeijA" body="SELECT MAX(LEN(CASE WHEN &quot;ContactTitle&quot; IS NULL  THEN '' ELSE &quot;ContactTitle&quot; END)) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykMKK0HEfCdr4B5bHeijA" name="Maximal Length With Blank and Null" label="Maximal Length With Blank and Null">
            <taggedValue xmi:id="_UykMKa0HEfCdr4B5bHeijA" tag="Description" value="computes the maximal length of a text field."/>
            <taggedValue xmi:id="_UykMKq0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the length of the longest textual record"/>
            <sqlGenericExpression xmi:id="_UykMK60HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykMLK0HEfCdr4B5bHeijA" body="SELECT MAX(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykMLa0HEfCdr4B5bHeijA" body="SELECT MAX(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykMLq0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykML60HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykMMK0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_UykMMa0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykMMq0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykMM60HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykMNK0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykMNa0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_UykMNq0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykMN60HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </maxLengthWithBlankNullIndicator>
        <avgLengthWithBlankIndicator xmi:id="_UykMOK0HEfCdr4B5bHeijA" count="91" computed="true" sumLength="1361.0">
          <parameters xmi:id="_UykMOa0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykMOq0HEfCdr4B5bHeijA"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldfK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Blank_0.1.definition#__gPoIJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykMO60HEfCdr4B5bHeijA" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM(&quot;ContactTitle&quot;)) )=0  THEN '' ELSE  &quot;ContactTitle&quot; END)), COUNT(*) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (&quot;ContactTitle&quot; IS NOT NULL ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykMPK0HEfCdr4B5bHeijA" name="Average Length With Blank" label="Average Length With Blank">
            <taggedValue xmi:id="_UykMPa0HEfCdr4B5bHeijA" tag="Description" value="computes the average length of the field. Does not take into account the null values when computing the average length."/>
            <taggedValue xmi:id="_UykMPq0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the average length of the textual record of non-null values"/>
            <sqlGenericExpression xmi:id="_UykMP60HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykMQK0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykMQa0HEfCdr4B5bHeijA" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) )=0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykMQq0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykMQ60HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykMRK0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_UykMRa0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykMRq0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykMR60HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykMSK0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykMSa0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykMSq0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </avgLengthWithBlankIndicator>
        <avgLengthWithNullIndicator xmi:id="_UykMS60HEfCdr4B5bHeijA" count="91" computed="true" sumLength="1361.0">
          <parameters xmi:id="_UykMTK0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykMTa0HEfCdr4B5bHeijA" useBlank="false" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldfK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Null_0.1.definition#__vI_wJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykMTq0HEfCdr4B5bHeijA" body="SELECT SUM(LEN(CASE WHEN &quot;ContactTitle&quot; IS NULL  THEN '' ELSE &quot;ContactTitle&quot; END)), COUNT(*) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (LTRIM(RTRIM(CASE WHEN &quot;ContactTitle&quot; IS NULL  THEN 'NULL TALEND' ELSE &quot;ContactTitle&quot; END)) &lt;> '' ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykMT60HEfCdr4B5bHeijA" name="Average Length With Null" label="Average Length With Null">
            <taggedValue xmi:id="_UykMUK0HEfCdr4B5bHeijA" tag="Description" value="computes the average length of the field. Does not take into account the blank values when computing the average length."/>
            <taggedValue xmi:id="_UykMUa0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the average length of the textual record of non-blank values"/>
            <sqlGenericExpression xmi:id="_UykMUq0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykMU60HEfCdr4B5bHeijA" body="SELECT SUM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykMVK0HEfCdr4B5bHeijA" body="SELECT SUM(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykMVa0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykMVq0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykMV60HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_UykMWK0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykMWa0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykMWq0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykMW60HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykMXK0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_UykMXa0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykMXq0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </avgLengthWithNullIndicator>
        <avgLengthWithBlankNullIndicator xmi:id="_UykMX60HEfCdr4B5bHeijA" count="91" computed="true" sumLength="1361.0">
          <parameters xmi:id="_UykMYK0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykMYa0HEfCdr4B5bHeijA" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldfK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Blank_and_Null_0.1.definition#__TbUIJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykMYq0HEfCdr4B5bHeijA" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM( CASE WHEN &quot;ContactTitle&quot; IS NULL  THEN '' ELSE &quot;ContactTitle&quot; END )) )=0  THEN '' ELSE   CASE WHEN &quot;ContactTitle&quot; IS NULL  THEN '' ELSE &quot;ContactTitle&quot; END  END)), COUNT(*) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykMY60HEfCdr4B5bHeijA" name="Average Length With Blank and Null" label="Average Length With Blank and Null">
            <taggedValue xmi:id="_UykMZK0HEfCdr4B5bHeijA" tag="Description" value="computes the average length of the field."/>
            <taggedValue xmi:id="_UykMZa0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the average length of the textual record"/>
            <sqlGenericExpression xmi:id="_UykMZq0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykMZ60HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykMaK0HEfCdr4B5bHeijA" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) )=0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykMaa0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykMaq0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykMa60HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_UykMbK0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykMba0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykMbq0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykMb60HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykMcK0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_UykMca0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykMcq0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </avgLengthWithBlankNullIndicator>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RowCountIndicator" xmi:id="_UykMc60HEfCdr4B5bHeijA" count="91" computed="true">
        <parameters xmi:id="_UykMdK0HEfCdr4B5bHeijA"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldgK0DEfCdr4B5bHeijA"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Row_Count_0.1.definition#_ccFOkBF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykMda0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; " language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_UykMdq0HEfCdr4B5bHeijA" name="Row Count" label="Row Count">
          <taggedValue xmi:id="_UykMd60HEfCdr4B5bHeijA" tag="Description" value="counts the number of rows"/>
          <taggedValue xmi:id="_UykMeK0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the number of records"/>
          <sqlGenericExpression xmi:id="_UykMea0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:NullCountIndicator" xmi:id="_UykMeq0HEfCdr4B5bHeijA" count="91" computed="true">
        <parameters xmi:id="_UykMe60HEfCdr4B5bHeijA"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldgK0DEfCdr4B5bHeijA"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Null_Count_0.1.definition#_GrAeADh9Ed2XmO7pl5Yuyg"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykMfK0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE &quot;Address&quot; IS NULL " language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_UykMfa0HEfCdr4B5bHeijA" name="Null Count" label="Null Count">
          <taggedValue xmi:id="_UykMfq0HEfCdr4B5bHeijA" tag="Purpose" value="evaluate the number of missing data (null records)"/>
          <taggedValue xmi:id="_UykMf60HEfCdr4B5bHeijA" tag="Description" value="counts the number of null rows"/>
          <sqlGenericExpression xmi:id="_UykMgK0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE &lt;%=__COLUMN_NAMES__%> IS NULL &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:DistinctCountIndicator" xmi:id="_UykMga0HEfCdr4B5bHeijA" count="91" computed="true" distinctValueCount="91">
        <parameters xmi:id="_UykMgq0HEfCdr4B5bHeijA"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldgK0DEfCdr4B5bHeijA"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Distinct_Count_0.1.definition#_ccHq0BF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykMg60HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT DISTINCT &quot;Address&quot; FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; ) A" language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_UykMhK0HEfCdr4B5bHeijA" name="Distinct Count" label="Distinct Count">
          <taggedValue xmi:id="_UykMha0HEfCdr4B5bHeijA" tag="Description" value="counts the number of distinct rows (like a &quot;SELECT DISTINCT&quot; SQL statement)"/>
          <taggedValue xmi:id="_UykMhq0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the number of distinct records"/>
          <sqlGenericExpression xmi:id="_UykMh60HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT DISTINCT &lt;%=__COLUMN_NAMES__%> FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>) A" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:UniqueCountIndicator" xmi:id="_UykMiK0HEfCdr4B5bHeijA" count="91" computed="true" uniqueValueCount="91">
        <parameters xmi:id="_UykMia0HEfCdr4B5bHeijA"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldgK0DEfCdr4B5bHeijA"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Unique_Count_0.1.definition#_ccHq0RF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykMiq0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &quot;Address&quot;, COUNT(*) mycount FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot;  GROUP BY &quot;Address&quot; HAVING COUNT(*) = 1) AS myquery" language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_UykMi60HEfCdr4B5bHeijA" name="Unique Count" label="Unique Count">
          <taggedValue xmi:id="_UykMjK0HEfCdr4B5bHeijA" tag="Description" value="counts the number of unique rows (i.e. distinct rows with only one instance: rows that are not duplicated)"/>
          <taggedValue xmi:id="_UykMja0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the number of unique records"/>
          <sqlGenericExpression xmi:id="_UykMjq0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="SQL"/>
          <sqlGenericExpression xmi:id="_UykMj60HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount = 1) AS myquery" language="MySQL"/>
          <sqlGenericExpression xmi:id="_UykMkK0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) myquery" language="Oracle"/>
          <sqlGenericExpression xmi:id="_UykMka0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount = 1) AS myquery" language="Teradata"/>
          <sqlGenericExpression xmi:id="_UykMkq0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_UykMk60HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_UykMlK0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1)  myquery" language="Hive" version=""/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:DuplicateCountIndicator" xmi:id="_UykMla0HEfCdr4B5bHeijA" count="91" computed="true" duplicateValueCount="0">
        <parameters xmi:id="_UykMlq0HEfCdr4B5bHeijA"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldgK0DEfCdr4B5bHeijA"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Duplicate_Count_0.1.definition#_ccHq0hF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykMl60HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &quot;Address&quot;, COUNT(*) mycount FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot;  m  GROUP BY &quot;Address&quot; HAVING COUNT(*) > 1) myquery" language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_UykMmK0HEfCdr4B5bHeijA" name="Duplicate Count" label="Duplicate Count">
          <taggedValue xmi:id="_UykMma0HEfCdr4B5bHeijA" tag="Description" value="counts the number of duplicate rows. This number and the number of unique data equals the number of distinct rows"/>
          <taggedValue xmi:id="_UykMmq0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the number of duplicated records"/>
          <sqlGenericExpression xmi:id="_UykMm60HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) AS myquery" language="SQL"/>
          <sqlGenericExpression xmi:id="_UykMnK0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount > 1) AS myquery" language="MySQL"/>
          <sqlGenericExpression xmi:id="_UykMna0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Oracle"/>
          <sqlGenericExpression xmi:id="_UykMnq0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount > 1) AS myquery" language="Teradata"/>
          <sqlGenericExpression xmi:id="_UykMn60HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_UykMoK0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) AS myquery" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_UykMoa0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Hive"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:BlankCountIndicator" xmi:id="_UykMoq0HEfCdr4B5bHeijA" count="91" computed="true">
        <parameters xmi:id="_UykMo60HEfCdr4B5bHeijA"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldgK0DEfCdr4B5bHeijA"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Blank_Count_0.1.definition#_ccHq0xF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykMpK0HEfCdr4B5bHeijA" body="SELECT COUNT(&quot;Address&quot;) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot;  WHERE LTRIM(RTRIM(&quot;Address&quot;)) = '' " language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_UykMpa0HEfCdr4B5bHeijA" name="Blank Count" label="Blank Count">
          <taggedValue xmi:id="_UykMpq0HEfCdr4B5bHeijA" tag="Description" value="counts the number of blank rows. A blank is a non null textual data that contains only white spaces (or nothing). Note that Oracle does not distinguish between the empty string and the null value"/>
          <taggedValue xmi:id="_UykMp60HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the number of blank records"/>
          <sqlGenericExpression xmi:id="_UykMqK0HEfCdr4B5bHeijA" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE TRIM(&lt;%=__COLUMN_NAMES__%>) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_UykMqa0HEfCdr4B5bHeijA" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE TRIM(&lt;%=__COLUMN_NAMES__%>) IS NULL &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_UykMqq0HEfCdr4B5bHeijA" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_UykMq60HEfCdr4B5bHeijA" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_UykMrK0HEfCdr4B5bHeijA" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> = '' or RTRIM(LTRIM(&lt;%=__COLUMN_NAMES__%>)) = '') &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:TextIndicator" xmi:id="_UykMra0HEfCdr4B5bHeijA">
        <parameters xmi:id="_UykMrq0HEfCdr4B5bHeijA"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldgK0DEfCdr4B5bHeijA"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Text_Statistics_0.1.definition#_yb9x0zh8Ed2XmO7pl5Yuyg"/>
        <averageLengthIndicator xmi:id="_UykMr60HEfCdr4B5bHeijA" count="91" computed="true" sumLength="1701.0">
          <parameters xmi:id="_UykMsK0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykMsa0HEfCdr4B5bHeijA" useBlank="false"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldgK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_0.1.definition#_ccIR4BF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykMsq0HEfCdr4B5bHeijA" body="SELECT SUM(LEN(&quot;Address&quot;)), COUNT(&quot;Address&quot;) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (&quot;Address&quot; IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &quot;Address&quot; IS NULL  THEN 'NULL TALEND' ELSE &quot;Address&quot; END)) &lt;> '' ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykMs60HEfCdr4B5bHeijA" name="Average Length" label="Average Length">
            <taggedValue xmi:id="_UykMtK0HEfCdr4B5bHeijA" tag="Description" value="computes the average length of the field. Does not take into account the null and blank values when computing the average length."/>
            <taggedValue xmi:id="_UykMta0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the average length of the textual record of non-null and non-blank values"/>
            <sqlGenericExpression xmi:id="_UykMtq0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykMt60HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykMuK0HEfCdr4B5bHeijA" body="SELECT SUM(LEN(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykMua0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykMuq0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykMu60HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_UykMvK0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykMva0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykMvq0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )), COUNT( &lt;%=__COLUMN_NAMES__%> ) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykMv60HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykMwK0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_UykMwa0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykMwq0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </averageLengthIndicator>
        <maxLengthIndicator xmi:id="_UykMw60HEfCdr4B5bHeijA" computed="true" length="46">
          <parameters xmi:id="_UykMxK0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykMxa0HEfCdr4B5bHeijA" useBlank="false"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldgK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_0.1.definition#_ccHq1RF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykMxq0HEfCdr4B5bHeijA" body="SELECT MAX(LEN(&quot;Address&quot;)) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (&quot;Address&quot; IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &quot;Address&quot; IS NULL  THEN 'NULL TALEND' ELSE &quot;Address&quot; END)) &lt;> '' ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykMx60HEfCdr4B5bHeijA" name="Maximal Length" label="Maximal Length">
            <taggedValue xmi:id="_UykMyK0HEfCdr4B5bHeijA" tag="Description" value="computes the maximal length of a text field. Does not take into account the null and blank values when computing the maximal length."/>
            <taggedValue xmi:id="_UykMya0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the length of the longest textual record of non-null and non-blank values"/>
            <sqlGenericExpression xmi:id="_UykMyq0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykMy60HEfCdr4B5bHeijA" body="SELECT MAX( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle" modificationDate=""/>
            <sqlGenericExpression xmi:id="_UykMzK0HEfCdr4B5bHeijA" body="SELECT MAX(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykMza0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykMzq0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykMz60HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive" modificationDate=""/>
            <sqlGenericExpression xmi:id="_UykM0K0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykM0a0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' )  &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykM0q0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykM060HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykM1K0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_UykM1a0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykM1q0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </maxLengthIndicator>
        <minLengthIndicator xmi:id="_UykM160HEfCdr4B5bHeijA" computed="true" length="11">
          <parameters xmi:id="_UykM2K0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykM2a0HEfCdr4B5bHeijA" useBlank="false"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldgK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_0.1.definition#_ccHq1BF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykM2q0HEfCdr4B5bHeijA" body="SELECT MIN(LEN(&quot;Address&quot;)) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (&quot;Address&quot; IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &quot;Address&quot; IS NULL  THEN 'NULL TALEND' ELSE &quot;Address&quot; END)) &lt;> '' ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykM260HEfCdr4B5bHeijA" name="Minimal Length" label="Minimal Length">
            <taggedValue xmi:id="_UykM3K0HEfCdr4B5bHeijA" tag="Description" value="computes the minimal length of a text field. Does not take into account the null and blank values when computing the minimal length."/>
            <taggedValue xmi:id="_UykM3a0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the length of the smallest textual record of non-null and non-blank values"/>
            <sqlGenericExpression xmi:id="_UykM3q0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykM360HEfCdr4B5bHeijA" body="SELECT MIN( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykM4K0HEfCdr4B5bHeijA" body="SELECT MIN(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykM4a0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykM4q0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykM460HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_UykM5K0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykM5a0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykM5q0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykM560HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (1=1) AND (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykM6K0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_UykM6a0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykM6q0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </minLengthIndicator>
        <minLengthWithBlankIndicator xmi:id="_UykM660HEfCdr4B5bHeijA" computed="true" length="11">
          <parameters xmi:id="_UykM7K0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykM7a0HEfCdr4B5bHeijA"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldgK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Blank_0.1.definition#_G4EzQZU9Ed-Y15ulK_jijQ"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykM7q0HEfCdr4B5bHeijA" body="SELECT MIN(LEN(&quot;Address&quot;)) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (&quot;Address&quot; IS NOT NULL ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykM760HEfCdr4B5bHeijA" name="Minimal Length With Blank" label="Minimal Length With Blank">
            <taggedValue xmi:id="_UykM8K0HEfCdr4B5bHeijA" tag="Description" value="computes the minimal length of a text field. Does not take into account the null values when computing the minimal length."/>
            <taggedValue xmi:id="_UykM8a0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the length of the smallest textual record of non-null values"/>
            <sqlGenericExpression xmi:id="_UykM8q0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykM860HEfCdr4B5bHeijA" body="SELECT MIN( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykM9K0HEfCdr4B5bHeijA" body="SELECT MIN(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykM9a0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykM9q0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykM960HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_UykM-K0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykM-a0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykM-q0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykM-60HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykM_K0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykM_a0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </minLengthWithBlankIndicator>
        <minLengthWithNullIndicator xmi:id="_UykM_q0HEfCdr4B5bHeijA" computed="true" length="11">
          <parameters xmi:id="_UykM_60HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykNAK0HEfCdr4B5bHeijA" useBlank="false" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldgK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Null_0.1.definition#_a4KsoI1qEd-xwI2imLgHRA"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykNAa0HEfCdr4B5bHeijA" body="SELECT MIN(LEN(CASE WHEN &quot;Address&quot; IS NULL  THEN '' ELSE &quot;Address&quot; END)) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (LTRIM(RTRIM(CASE WHEN &quot;Address&quot; IS NULL  THEN 'NULL TALEND' ELSE &quot;Address&quot; END)) &lt;> '' ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykNAq0HEfCdr4B5bHeijA" name="Minimal Length With Null" label="Minimal Length With Null">
            <taggedValue xmi:id="_UykNA60HEfCdr4B5bHeijA" tag="Description" value="computes the minimal length of a text field. Does not take into account the blank values when computing the minimal length."/>
            <taggedValue xmi:id="_UykNBK0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the length of the smallest textual record of non-blank values"/>
            <sqlGenericExpression xmi:id="_UykNBa0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykNBq0HEfCdr4B5bHeijA" body="SELECT MIN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykNB60HEfCdr4B5bHeijA" body="SELECT MIN(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykNCK0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykNCa0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykNCq0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_UykNC60HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykNDK0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykNDa0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykNDq0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykND60HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_UykNEK0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykNEa0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </minLengthWithNullIndicator>
        <minLengthWithBlankNullIndicator xmi:id="_UykNEq0HEfCdr4B5bHeijA" computed="true" length="11">
          <parameters xmi:id="_UykNE60HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykNFK0HEfCdr4B5bHeijA" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldgK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Blank_and_Null_0.1.definition#_9HDjMJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykNFa0HEfCdr4B5bHeijA" body="SELECT MIN(LEN(CASE WHEN &quot;Address&quot; IS NULL  THEN '' ELSE &quot;Address&quot; END)) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykNFq0HEfCdr4B5bHeijA" name="Minimal Length With Blank and Null" label="Minimal Length With Blank and Null">
            <taggedValue xmi:id="_UykNF60HEfCdr4B5bHeijA" tag="Description" value="computes the minimal length of a text field."/>
            <taggedValue xmi:id="_UykNGK0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the length of the smallest textual record"/>
            <sqlGenericExpression xmi:id="_UykNGa0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykNGq0HEfCdr4B5bHeijA" body="SELECT MIN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykNG60HEfCdr4B5bHeijA" body="SELECT MIN(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykNHK0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykNHa0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykNHq0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_UykNH60HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykNIK0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykNIa0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykNIq0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykNI60HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_UykNJK0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykNJa0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </minLengthWithBlankNullIndicator>
        <maxLengthWithBlankIndicator xmi:id="_UykNJq0HEfCdr4B5bHeijA" computed="true" length="46">
          <parameters xmi:id="_UykNJ60HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykNKK0HEfCdr4B5bHeijA"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldgK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Blank_0.1.definition#_-xmZcJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykNKa0HEfCdr4B5bHeijA" body="SELECT MAX(LEN(&quot;Address&quot;)) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (&quot;Address&quot; IS NOT NULL ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykNKq0HEfCdr4B5bHeijA" name="Maximal Length With Blank" label="Maximal Length With Blank">
            <taggedValue xmi:id="_UykNK60HEfCdr4B5bHeijA" tag="Description" value="computes the maximal length of a text field. Does not take into account the null values when computing the maximal length."/>
            <taggedValue xmi:id="_UykNLK0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the length of the longest textual record of non-null values"/>
            <sqlGenericExpression xmi:id="_UykNLa0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykNLq0HEfCdr4B5bHeijA" body="SELECT MAX( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykNL60HEfCdr4B5bHeijA" body="SELECT MAX(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykNMK0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykNMa0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykNMq0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_UykNM60HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykNNK0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykNNa0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykNNq0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykNN60HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykNOK0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </maxLengthWithBlankIndicator>
        <maxLengthWithNullIndicator xmi:id="_UykNOa0HEfCdr4B5bHeijA" computed="true" length="46">
          <parameters xmi:id="_UykNOq0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykNO60HEfCdr4B5bHeijA" useBlank="false" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldgK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Null_0.1.definition#_-_UFUJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykNPK0HEfCdr4B5bHeijA" body="SELECT MAX(LEN(CASE WHEN &quot;Address&quot; IS NULL  THEN '' ELSE &quot;Address&quot; END)) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (LTRIM(RTRIM(CASE WHEN &quot;Address&quot; IS NULL  THEN 'NULL TALEND' ELSE &quot;Address&quot; END)) &lt;> '' ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykNPa0HEfCdr4B5bHeijA" name="Maximal Length With Null" label="Maximal Length With Null">
            <taggedValue xmi:id="_UykNPq0HEfCdr4B5bHeijA" tag="Description" value="computes the maximal length of a text field. Does not take into account the blank values when computing the maximal length."/>
            <taggedValue xmi:id="_UykNP60HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the length of the longest textual record of non-blank values"/>
            <sqlGenericExpression xmi:id="_UykNQK0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykNQa0HEfCdr4B5bHeijA" body="SELECT MAX(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykNQq0HEfCdr4B5bHeijA" body="SELECT MAX(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykNQ60HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykNRK0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykNRa0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive" version=""/>
            <sqlGenericExpression xmi:id="_UykNRq0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykNR60HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykNSK0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykNSa0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykNSq0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_UykNS60HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykNTK0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </maxLengthWithNullIndicator>
        <maxLengthWithBlankNullIndicator xmi:id="_UykNTa0HEfCdr4B5bHeijA" computed="true" length="46">
          <parameters xmi:id="_UykNTq0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykNT60HEfCdr4B5bHeijA" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldgK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Blank_and_Null_0.1.definition#_-hzp8JSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykNUK0HEfCdr4B5bHeijA" body="SELECT MAX(LEN(CASE WHEN &quot;Address&quot; IS NULL  THEN '' ELSE &quot;Address&quot; END)) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykNUa0HEfCdr4B5bHeijA" name="Maximal Length With Blank and Null" label="Maximal Length With Blank and Null">
            <taggedValue xmi:id="_UykNUq0HEfCdr4B5bHeijA" tag="Description" value="computes the maximal length of a text field."/>
            <taggedValue xmi:id="_UykNU60HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the length of the longest textual record"/>
            <sqlGenericExpression xmi:id="_UykNVK0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykNVa0HEfCdr4B5bHeijA" body="SELECT MAX(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykNVq0HEfCdr4B5bHeijA" body="SELECT MAX(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykNV60HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykNWK0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykNWa0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_UykNWq0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykNW60HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykNXK0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykNXa0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykNXq0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_UykNX60HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykNYK0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </maxLengthWithBlankNullIndicator>
        <avgLengthWithBlankIndicator xmi:id="_UykNYa0HEfCdr4B5bHeijA" count="91" computed="true" sumLength="1701.0">
          <parameters xmi:id="_UykNYq0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykNY60HEfCdr4B5bHeijA"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldgK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Blank_0.1.definition#__gPoIJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykNZK0HEfCdr4B5bHeijA" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM(&quot;Address&quot;)) )=0  THEN '' ELSE  &quot;Address&quot; END)), COUNT(*) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (&quot;Address&quot; IS NOT NULL ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykNZa0HEfCdr4B5bHeijA" name="Average Length With Blank" label="Average Length With Blank">
            <taggedValue xmi:id="_UykNZq0HEfCdr4B5bHeijA" tag="Description" value="computes the average length of the field. Does not take into account the null values when computing the average length."/>
            <taggedValue xmi:id="_UykNZ60HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the average length of the textual record of non-null values"/>
            <sqlGenericExpression xmi:id="_UykNaK0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykNaa0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykNaq0HEfCdr4B5bHeijA" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) )=0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykNa60HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykNbK0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykNba0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_UykNbq0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykNb60HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykNcK0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykNca0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykNcq0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykNc60HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </avgLengthWithBlankIndicator>
        <avgLengthWithNullIndicator xmi:id="_UykNdK0HEfCdr4B5bHeijA" count="91" computed="true" sumLength="1701.0">
          <parameters xmi:id="_UykNda0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykNdq0HEfCdr4B5bHeijA" useBlank="false" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldgK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Null_0.1.definition#__vI_wJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykNd60HEfCdr4B5bHeijA" body="SELECT SUM(LEN(CASE WHEN &quot;Address&quot; IS NULL  THEN '' ELSE &quot;Address&quot; END)), COUNT(*) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (LTRIM(RTRIM(CASE WHEN &quot;Address&quot; IS NULL  THEN 'NULL TALEND' ELSE &quot;Address&quot; END)) &lt;> '' ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykNeK0HEfCdr4B5bHeijA" name="Average Length With Null" label="Average Length With Null">
            <taggedValue xmi:id="_UykNea0HEfCdr4B5bHeijA" tag="Description" value="computes the average length of the field. Does not take into account the blank values when computing the average length."/>
            <taggedValue xmi:id="_UykNeq0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the average length of the textual record of non-blank values"/>
            <sqlGenericExpression xmi:id="_UykNe60HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykNfK0HEfCdr4B5bHeijA" body="SELECT SUM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykNfa0HEfCdr4B5bHeijA" body="SELECT SUM(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykNfq0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykNf60HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykNgK0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_UykNga0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykNgq0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykNg60HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykNhK0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykNha0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_UykNhq0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykNh60HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </avgLengthWithNullIndicator>
        <avgLengthWithBlankNullIndicator xmi:id="_UykNiK0HEfCdr4B5bHeijA" count="91" computed="true" sumLength="1701.0">
          <parameters xmi:id="_UykNia0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykNiq0HEfCdr4B5bHeijA" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldgK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Blank_and_Null_0.1.definition#__TbUIJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykNi60HEfCdr4B5bHeijA" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM( CASE WHEN &quot;Address&quot; IS NULL  THEN '' ELSE &quot;Address&quot; END )) )=0  THEN '' ELSE   CASE WHEN &quot;Address&quot; IS NULL  THEN '' ELSE &quot;Address&quot; END  END)), COUNT(*) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykNjK0HEfCdr4B5bHeijA" name="Average Length With Blank and Null" label="Average Length With Blank and Null">
            <taggedValue xmi:id="_UykNja0HEfCdr4B5bHeijA" tag="Description" value="computes the average length of the field."/>
            <taggedValue xmi:id="_UykNjq0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the average length of the textual record"/>
            <sqlGenericExpression xmi:id="_UykNj60HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykNkK0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykNka0HEfCdr4B5bHeijA" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) )=0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykNkq0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykNk60HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykNlK0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_UykNla0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykNlq0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykNl60HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykNmK0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykNma0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_UykNmq0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykNm60HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </avgLengthWithBlankNullIndicator>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RowCountIndicator" xmi:id="_UykNnK0HEfCdr4B5bHeijA" count="91" computed="true">
        <parameters xmi:id="_UykNna0HEfCdr4B5bHeijA"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldhK0DEfCdr4B5bHeijA"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Row_Count_0.1.definition#_ccFOkBF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykNnq0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; " language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_UykNn60HEfCdr4B5bHeijA" name="Row Count" label="Row Count">
          <taggedValue xmi:id="_UykNoK0HEfCdr4B5bHeijA" tag="Description" value="counts the number of rows"/>
          <taggedValue xmi:id="_UykNoa0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the number of records"/>
          <sqlGenericExpression xmi:id="_UykNoq0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:NullCountIndicator" xmi:id="_UykNo60HEfCdr4B5bHeijA" count="91" computed="true">
        <parameters xmi:id="_UykNpK0HEfCdr4B5bHeijA"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldhK0DEfCdr4B5bHeijA"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Null_Count_0.1.definition#_GrAeADh9Ed2XmO7pl5Yuyg"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykNpa0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE &quot;City&quot; IS NULL " language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_UykNpq0HEfCdr4B5bHeijA" name="Null Count" label="Null Count">
          <taggedValue xmi:id="_UykNp60HEfCdr4B5bHeijA" tag="Purpose" value="evaluate the number of missing data (null records)"/>
          <taggedValue xmi:id="_UykNqK0HEfCdr4B5bHeijA" tag="Description" value="counts the number of null rows"/>
          <sqlGenericExpression xmi:id="_UykNqa0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE &lt;%=__COLUMN_NAMES__%> IS NULL &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:DistinctCountIndicator" xmi:id="_UykNqq0HEfCdr4B5bHeijA" count="91" computed="true" distinctValueCount="69">
        <parameters xmi:id="_UykNq60HEfCdr4B5bHeijA"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldhK0DEfCdr4B5bHeijA"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Distinct_Count_0.1.definition#_ccHq0BF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykNrK0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT DISTINCT &quot;City&quot; FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; ) A" language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_UykNra0HEfCdr4B5bHeijA" name="Distinct Count" label="Distinct Count">
          <taggedValue xmi:id="_UykNrq0HEfCdr4B5bHeijA" tag="Description" value="counts the number of distinct rows (like a &quot;SELECT DISTINCT&quot; SQL statement)"/>
          <taggedValue xmi:id="_UykNr60HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the number of distinct records"/>
          <sqlGenericExpression xmi:id="_UykNsK0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT DISTINCT &lt;%=__COLUMN_NAMES__%> FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>) A" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:UniqueCountIndicator" xmi:id="_UykNsa0HEfCdr4B5bHeijA" count="91" computed="true" uniqueValueCount="59">
        <parameters xmi:id="_UykNsq0HEfCdr4B5bHeijA"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldhK0DEfCdr4B5bHeijA"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Unique_Count_0.1.definition#_ccHq0RF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykNs60HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &quot;City&quot;, COUNT(*) mycount FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot;  GROUP BY &quot;City&quot; HAVING COUNT(*) = 1) AS myquery" language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_UykNtK0HEfCdr4B5bHeijA" name="Unique Count" label="Unique Count">
          <taggedValue xmi:id="_UykNta0HEfCdr4B5bHeijA" tag="Description" value="counts the number of unique rows (i.e. distinct rows with only one instance: rows that are not duplicated)"/>
          <taggedValue xmi:id="_UykNtq0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the number of unique records"/>
          <sqlGenericExpression xmi:id="_UykNt60HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="SQL"/>
          <sqlGenericExpression xmi:id="_UykNuK0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount = 1) AS myquery" language="MySQL"/>
          <sqlGenericExpression xmi:id="_UykNua0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) myquery" language="Oracle"/>
          <sqlGenericExpression xmi:id="_UykNuq0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount = 1) AS myquery" language="Teradata"/>
          <sqlGenericExpression xmi:id="_UykNu60HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_UykNvK0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_UykNva0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1)  myquery" language="Hive" version=""/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:DuplicateCountIndicator" xmi:id="_UykNvq0HEfCdr4B5bHeijA" count="91" computed="true" duplicateValueCount="10">
        <parameters xmi:id="_UykNv60HEfCdr4B5bHeijA"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldhK0DEfCdr4B5bHeijA"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Duplicate_Count_0.1.definition#_ccHq0hF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykNwK0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &quot;City&quot;, COUNT(*) mycount FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot;  m  GROUP BY &quot;City&quot; HAVING COUNT(*) > 1) myquery" language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_UykNwa0HEfCdr4B5bHeijA" name="Duplicate Count" label="Duplicate Count">
          <taggedValue xmi:id="_UykNwq0HEfCdr4B5bHeijA" tag="Description" value="counts the number of duplicate rows. This number and the number of unique data equals the number of distinct rows"/>
          <taggedValue xmi:id="_UykNw60HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the number of duplicated records"/>
          <sqlGenericExpression xmi:id="_UykNxK0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) AS myquery" language="SQL"/>
          <sqlGenericExpression xmi:id="_UykNxa0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount > 1) AS myquery" language="MySQL"/>
          <sqlGenericExpression xmi:id="_UykNxq0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Oracle"/>
          <sqlGenericExpression xmi:id="_UykNx60HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount > 1) AS myquery" language="Teradata"/>
          <sqlGenericExpression xmi:id="_UykNyK0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_UykNya0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) AS myquery" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_UykNyq0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Hive"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:BlankCountIndicator" xmi:id="_UykNy60HEfCdr4B5bHeijA" count="91" computed="true">
        <parameters xmi:id="_UykNzK0HEfCdr4B5bHeijA"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldhK0DEfCdr4B5bHeijA"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Blank_Count_0.1.definition#_ccHq0xF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykNza0HEfCdr4B5bHeijA" body="SELECT COUNT(&quot;City&quot;) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot;  WHERE LTRIM(RTRIM(&quot;City&quot;)) = '' " language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_UykNzq0HEfCdr4B5bHeijA" name="Blank Count" label="Blank Count">
          <taggedValue xmi:id="_UykNz60HEfCdr4B5bHeijA" tag="Description" value="counts the number of blank rows. A blank is a non null textual data that contains only white spaces (or nothing). Note that Oracle does not distinguish between the empty string and the null value"/>
          <taggedValue xmi:id="_UykN0K0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the number of blank records"/>
          <sqlGenericExpression xmi:id="_UykN0a0HEfCdr4B5bHeijA" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE TRIM(&lt;%=__COLUMN_NAMES__%>) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_UykN0q0HEfCdr4B5bHeijA" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE TRIM(&lt;%=__COLUMN_NAMES__%>) IS NULL &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_UykN060HEfCdr4B5bHeijA" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_UykN1K0HEfCdr4B5bHeijA" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_UykN1a0HEfCdr4B5bHeijA" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> = '' or RTRIM(LTRIM(&lt;%=__COLUMN_NAMES__%>)) = '') &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:TextIndicator" xmi:id="_UykN1q0HEfCdr4B5bHeijA">
        <parameters xmi:id="_UykN160HEfCdr4B5bHeijA"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldhK0DEfCdr4B5bHeijA"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Text_Statistics_0.1.definition#_yb9x0zh8Ed2XmO7pl5Yuyg"/>
        <averageLengthIndicator xmi:id="_UykN2K0HEfCdr4B5bHeijA" count="91" computed="true" sumLength="729.0">
          <parameters xmi:id="_UykN2a0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykN2q0HEfCdr4B5bHeijA" useBlank="false"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldhK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_0.1.definition#_ccIR4BF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykN260HEfCdr4B5bHeijA" body="SELECT SUM(LEN(&quot;City&quot;)), COUNT(&quot;City&quot;) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (&quot;City&quot; IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &quot;City&quot; IS NULL  THEN 'NULL TALEND' ELSE &quot;City&quot; END)) &lt;> '' ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykN3K0HEfCdr4B5bHeijA" name="Average Length" label="Average Length">
            <taggedValue xmi:id="_UykN3a0HEfCdr4B5bHeijA" tag="Description" value="computes the average length of the field. Does not take into account the null and blank values when computing the average length."/>
            <taggedValue xmi:id="_UykN3q0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the average length of the textual record of non-null and non-blank values"/>
            <sqlGenericExpression xmi:id="_UykN360HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykN4K0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykN4a0HEfCdr4B5bHeijA" body="SELECT SUM(LEN(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykN4q0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykN460HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykN5K0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_UykN5a0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykN5q0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykN560HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )), COUNT( &lt;%=__COLUMN_NAMES__%> ) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykN6K0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykN6a0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_UykN6q0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykN660HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </averageLengthIndicator>
        <maxLengthIndicator xmi:id="_UykN7K0HEfCdr4B5bHeijA" computed="true" length="15">
          <parameters xmi:id="_UykN7a0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykN7q0HEfCdr4B5bHeijA" useBlank="false"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldhK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_0.1.definition#_ccHq1RF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykN760HEfCdr4B5bHeijA" body="SELECT MAX(LEN(&quot;City&quot;)) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (&quot;City&quot; IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &quot;City&quot; IS NULL  THEN 'NULL TALEND' ELSE &quot;City&quot; END)) &lt;> '' ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykN8K0HEfCdr4B5bHeijA" name="Maximal Length" label="Maximal Length">
            <taggedValue xmi:id="_UykN8a0HEfCdr4B5bHeijA" tag="Description" value="computes the maximal length of a text field. Does not take into account the null and blank values when computing the maximal length."/>
            <taggedValue xmi:id="_UykN8q0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the length of the longest textual record of non-null and non-blank values"/>
            <sqlGenericExpression xmi:id="_UykN860HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykN9K0HEfCdr4B5bHeijA" body="SELECT MAX( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle" modificationDate=""/>
            <sqlGenericExpression xmi:id="_UykN9a0HEfCdr4B5bHeijA" body="SELECT MAX(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykN9q0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykN960HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykN-K0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive" modificationDate=""/>
            <sqlGenericExpression xmi:id="_UykN-a0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykN-q0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' )  &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykN-60HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykN_K0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykN_a0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_UykN_q0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykN_60HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </maxLengthIndicator>
        <minLengthIndicator xmi:id="_UykOAK0HEfCdr4B5bHeijA" computed="true" length="4">
          <parameters xmi:id="_UykOAa0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykOAq0HEfCdr4B5bHeijA" useBlank="false"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldhK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_0.1.definition#_ccHq1BF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykOA60HEfCdr4B5bHeijA" body="SELECT MIN(LEN(&quot;City&quot;)) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (&quot;City&quot; IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &quot;City&quot; IS NULL  THEN 'NULL TALEND' ELSE &quot;City&quot; END)) &lt;> '' ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykOBK0HEfCdr4B5bHeijA" name="Minimal Length" label="Minimal Length">
            <taggedValue xmi:id="_UykOBa0HEfCdr4B5bHeijA" tag="Description" value="computes the minimal length of a text field. Does not take into account the null and blank values when computing the minimal length."/>
            <taggedValue xmi:id="_UykOBq0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the length of the smallest textual record of non-null and non-blank values"/>
            <sqlGenericExpression xmi:id="_UykOB60HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykOCK0HEfCdr4B5bHeijA" body="SELECT MIN( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykOCa0HEfCdr4B5bHeijA" body="SELECT MIN(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykOCq0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykOC60HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykODK0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_UykODa0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykODq0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykOD60HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykOEK0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (1=1) AND (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykOEa0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_UykOEq0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykOE60HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </minLengthIndicator>
        <minLengthWithBlankIndicator xmi:id="_UykOFK0HEfCdr4B5bHeijA" computed="true" length="4">
          <parameters xmi:id="_UykOFa0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykOFq0HEfCdr4B5bHeijA"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldhK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Blank_0.1.definition#_G4EzQZU9Ed-Y15ulK_jijQ"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykOF60HEfCdr4B5bHeijA" body="SELECT MIN(LEN(&quot;City&quot;)) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (&quot;City&quot; IS NOT NULL ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykOGK0HEfCdr4B5bHeijA" name="Minimal Length With Blank" label="Minimal Length With Blank">
            <taggedValue xmi:id="_UykOGa0HEfCdr4B5bHeijA" tag="Description" value="computes the minimal length of a text field. Does not take into account the null values when computing the minimal length."/>
            <taggedValue xmi:id="_UykOGq0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the length of the smallest textual record of non-null values"/>
            <sqlGenericExpression xmi:id="_UykOG60HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykOHK0HEfCdr4B5bHeijA" body="SELECT MIN( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykOHa0HEfCdr4B5bHeijA" body="SELECT MIN(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykOHq0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykOH60HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykOIK0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_UykOIa0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykOIq0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykOI60HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykOJK0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykOJa0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykOJq0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </minLengthWithBlankIndicator>
        <minLengthWithNullIndicator xmi:id="_UykOJ60HEfCdr4B5bHeijA" computed="true" length="4">
          <parameters xmi:id="_UykOKK0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykOKa0HEfCdr4B5bHeijA" useBlank="false" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldhK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Null_0.1.definition#_a4KsoI1qEd-xwI2imLgHRA"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykOKq0HEfCdr4B5bHeijA" body="SELECT MIN(LEN(CASE WHEN &quot;City&quot; IS NULL  THEN '' ELSE &quot;City&quot; END)) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (LTRIM(RTRIM(CASE WHEN &quot;City&quot; IS NULL  THEN 'NULL TALEND' ELSE &quot;City&quot; END)) &lt;> '' ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykOK60HEfCdr4B5bHeijA" name="Minimal Length With Null" label="Minimal Length With Null">
            <taggedValue xmi:id="_UykOLK0HEfCdr4B5bHeijA" tag="Description" value="computes the minimal length of a text field. Does not take into account the blank values when computing the minimal length."/>
            <taggedValue xmi:id="_UykOLa0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the length of the smallest textual record of non-blank values"/>
            <sqlGenericExpression xmi:id="_UykOLq0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykOL60HEfCdr4B5bHeijA" body="SELECT MIN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykOMK0HEfCdr4B5bHeijA" body="SELECT MIN(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykOMa0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykOMq0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykOM60HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_UykONK0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykONa0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykONq0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykON60HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykOOK0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_UykOOa0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykOOq0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </minLengthWithNullIndicator>
        <minLengthWithBlankNullIndicator xmi:id="_UykOO60HEfCdr4B5bHeijA" computed="true" length="4">
          <parameters xmi:id="_UykOPK0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykOPa0HEfCdr4B5bHeijA" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldhK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Blank_and_Null_0.1.definition#_9HDjMJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykOPq0HEfCdr4B5bHeijA" body="SELECT MIN(LEN(CASE WHEN &quot;City&quot; IS NULL  THEN '' ELSE &quot;City&quot; END)) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykOP60HEfCdr4B5bHeijA" name="Minimal Length With Blank and Null" label="Minimal Length With Blank and Null">
            <taggedValue xmi:id="_UykOQK0HEfCdr4B5bHeijA" tag="Description" value="computes the minimal length of a text field."/>
            <taggedValue xmi:id="_UykOQa0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the length of the smallest textual record"/>
            <sqlGenericExpression xmi:id="_UykOQq0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykOQ60HEfCdr4B5bHeijA" body="SELECT MIN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykORK0HEfCdr4B5bHeijA" body="SELECT MIN(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykORa0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykORq0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykOR60HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_UykOSK0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykOSa0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykOSq0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykOS60HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykOTK0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_UykOTa0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykOTq0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </minLengthWithBlankNullIndicator>
        <maxLengthWithBlankIndicator xmi:id="_UykOT60HEfCdr4B5bHeijA" computed="true" length="15">
          <parameters xmi:id="_UykOUK0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykOUa0HEfCdr4B5bHeijA"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldhK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Blank_0.1.definition#_-xmZcJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykOUq0HEfCdr4B5bHeijA" body="SELECT MAX(LEN(&quot;City&quot;)) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (&quot;City&quot; IS NOT NULL ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykOU60HEfCdr4B5bHeijA" name="Maximal Length With Blank" label="Maximal Length With Blank">
            <taggedValue xmi:id="_UykOVK0HEfCdr4B5bHeijA" tag="Description" value="computes the maximal length of a text field. Does not take into account the null values when computing the maximal length."/>
            <taggedValue xmi:id="_UykOVa0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the length of the longest textual record of non-null values"/>
            <sqlGenericExpression xmi:id="_UykOVq0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykOV60HEfCdr4B5bHeijA" body="SELECT MAX( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykOWK0HEfCdr4B5bHeijA" body="SELECT MAX(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykOWa0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykOWq0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykOW60HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_UykOXK0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykOXa0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykOXq0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykOX60HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykOYK0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykOYa0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </maxLengthWithBlankIndicator>
        <maxLengthWithNullIndicator xmi:id="_UykOYq0HEfCdr4B5bHeijA" computed="true" length="15">
          <parameters xmi:id="_UykOY60HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykOZK0HEfCdr4B5bHeijA" useBlank="false" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldhK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Null_0.1.definition#_-_UFUJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykOZa0HEfCdr4B5bHeijA" body="SELECT MAX(LEN(CASE WHEN &quot;City&quot; IS NULL  THEN '' ELSE &quot;City&quot; END)) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (LTRIM(RTRIM(CASE WHEN &quot;City&quot; IS NULL  THEN 'NULL TALEND' ELSE &quot;City&quot; END)) &lt;> '' ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykOZq0HEfCdr4B5bHeijA" name="Maximal Length With Null" label="Maximal Length With Null">
            <taggedValue xmi:id="_UykOZ60HEfCdr4B5bHeijA" tag="Description" value="computes the maximal length of a text field. Does not take into account the blank values when computing the maximal length."/>
            <taggedValue xmi:id="_UykOaK0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the length of the longest textual record of non-blank values"/>
            <sqlGenericExpression xmi:id="_UykOaa0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykOaq0HEfCdr4B5bHeijA" body="SELECT MAX(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykOa60HEfCdr4B5bHeijA" body="SELECT MAX(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykObK0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykOba0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykObq0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive" version=""/>
            <sqlGenericExpression xmi:id="_UykOb60HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykOcK0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykOca0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykOcq0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykOc60HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_UykOdK0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykOda0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </maxLengthWithNullIndicator>
        <maxLengthWithBlankNullIndicator xmi:id="_UykOdq0HEfCdr4B5bHeijA" computed="true" length="15">
          <parameters xmi:id="_UykOd60HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykOeK0HEfCdr4B5bHeijA" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldhK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Blank_and_Null_0.1.definition#_-hzp8JSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykOea0HEfCdr4B5bHeijA" body="SELECT MAX(LEN(CASE WHEN &quot;City&quot; IS NULL  THEN '' ELSE &quot;City&quot; END)) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykOeq0HEfCdr4B5bHeijA" name="Maximal Length With Blank and Null" label="Maximal Length With Blank and Null">
            <taggedValue xmi:id="_UykOe60HEfCdr4B5bHeijA" tag="Description" value="computes the maximal length of a text field."/>
            <taggedValue xmi:id="_UykOfK0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the length of the longest textual record"/>
            <sqlGenericExpression xmi:id="_UykOfa0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykOfq0HEfCdr4B5bHeijA" body="SELECT MAX(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykOf60HEfCdr4B5bHeijA" body="SELECT MAX(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykOgK0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykOga0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykOgq0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_UykOg60HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykOhK0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykOha0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykOhq0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykOh60HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_UykOiK0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykOia0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </maxLengthWithBlankNullIndicator>
        <avgLengthWithBlankIndicator xmi:id="_UykOiq0HEfCdr4B5bHeijA" count="91" computed="true" sumLength="729.0">
          <parameters xmi:id="_UykOi60HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykOjK0HEfCdr4B5bHeijA"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldhK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Blank_0.1.definition#__gPoIJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykOja0HEfCdr4B5bHeijA" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM(&quot;City&quot;)) )=0  THEN '' ELSE  &quot;City&quot; END)), COUNT(*) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (&quot;City&quot; IS NOT NULL ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykOjq0HEfCdr4B5bHeijA" name="Average Length With Blank" label="Average Length With Blank">
            <taggedValue xmi:id="_UykOj60HEfCdr4B5bHeijA" tag="Description" value="computes the average length of the field. Does not take into account the null values when computing the average length."/>
            <taggedValue xmi:id="_UykOkK0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the average length of the textual record of non-null values"/>
            <sqlGenericExpression xmi:id="_UykOka0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykOkq0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykOk60HEfCdr4B5bHeijA" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) )=0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykOlK0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykOla0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykOlq0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_UykOl60HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykOmK0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykOma0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykOmq0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykOm60HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykOnK0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </avgLengthWithBlankIndicator>
        <avgLengthWithNullIndicator xmi:id="_UykOna0HEfCdr4B5bHeijA" count="91" computed="true" sumLength="729.0">
          <parameters xmi:id="_UykOnq0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykOn60HEfCdr4B5bHeijA" useBlank="false" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldhK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Null_0.1.definition#__vI_wJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykOoK0HEfCdr4B5bHeijA" body="SELECT SUM(LEN(CASE WHEN &quot;City&quot; IS NULL  THEN '' ELSE &quot;City&quot; END)), COUNT(*) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (LTRIM(RTRIM(CASE WHEN &quot;City&quot; IS NULL  THEN 'NULL TALEND' ELSE &quot;City&quot; END)) &lt;> '' ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykOoa0HEfCdr4B5bHeijA" name="Average Length With Null" label="Average Length With Null">
            <taggedValue xmi:id="_UykOoq0HEfCdr4B5bHeijA" tag="Description" value="computes the average length of the field. Does not take into account the blank values when computing the average length."/>
            <taggedValue xmi:id="_UykOo60HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the average length of the textual record of non-blank values"/>
            <sqlGenericExpression xmi:id="_UykOpK0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykOpa0HEfCdr4B5bHeijA" body="SELECT SUM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykOpq0HEfCdr4B5bHeijA" body="SELECT SUM(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykOp60HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykOqK0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykOqa0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_UykOqq0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykOq60HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykOrK0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykOra0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykOrq0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_UykOr60HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykOsK0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </avgLengthWithNullIndicator>
        <avgLengthWithBlankNullIndicator xmi:id="_UykOsa0HEfCdr4B5bHeijA" count="91" computed="true" sumLength="729.0">
          <parameters xmi:id="_UykOsq0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykOs60HEfCdr4B5bHeijA" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldhK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Blank_and_Null_0.1.definition#__TbUIJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykOtK0HEfCdr4B5bHeijA" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM( CASE WHEN &quot;City&quot; IS NULL  THEN '' ELSE &quot;City&quot; END )) )=0  THEN '' ELSE   CASE WHEN &quot;City&quot; IS NULL  THEN '' ELSE &quot;City&quot; END  END)), COUNT(*) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykOta0HEfCdr4B5bHeijA" name="Average Length With Blank and Null" label="Average Length With Blank and Null">
            <taggedValue xmi:id="_UykOtq0HEfCdr4B5bHeijA" tag="Description" value="computes the average length of the field."/>
            <taggedValue xmi:id="_UykOt60HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the average length of the textual record"/>
            <sqlGenericExpression xmi:id="_UykOuK0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykOua0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykOuq0HEfCdr4B5bHeijA" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) )=0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykOu60HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykOvK0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykOva0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_UykOvq0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykOv60HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykOwK0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykOwa0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykOwq0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_UykOw60HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykOxK0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </avgLengthWithBlankNullIndicator>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RowCountIndicator" xmi:id="_UykOxa0HEfCdr4B5bHeijA" count="91" computed="true">
        <parameters xmi:id="_UykOxq0HEfCdr4B5bHeijA"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldiK0DEfCdr4B5bHeijA"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Row_Count_0.1.definition#_ccFOkBF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykOx60HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; " language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_UykOyK0HEfCdr4B5bHeijA" name="Row Count" label="Row Count">
          <taggedValue xmi:id="_UykOya0HEfCdr4B5bHeijA" tag="Description" value="counts the number of rows"/>
          <taggedValue xmi:id="_UykOyq0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the number of records"/>
          <sqlGenericExpression xmi:id="_UykOy60HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:NullCountIndicator" xmi:id="_UykOzK0HEfCdr4B5bHeijA" count="91" nullCount="60" computed="true">
        <parameters xmi:id="_UykOza0HEfCdr4B5bHeijA"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldiK0DEfCdr4B5bHeijA"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Null_Count_0.1.definition#_GrAeADh9Ed2XmO7pl5Yuyg"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykOzq0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE &quot;Region&quot; IS NULL " language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_UykOz60HEfCdr4B5bHeijA" name="Null Count" label="Null Count">
          <taggedValue xmi:id="_UykO0K0HEfCdr4B5bHeijA" tag="Purpose" value="evaluate the number of missing data (null records)"/>
          <taggedValue xmi:id="_UykO0a0HEfCdr4B5bHeijA" tag="Description" value="counts the number of null rows"/>
          <sqlGenericExpression xmi:id="_UykO0q0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE &lt;%=__COLUMN_NAMES__%> IS NULL &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:DistinctCountIndicator" xmi:id="_UykO060HEfCdr4B5bHeijA" count="91" nullCount="60" computed="true" distinctValueCount="19">
        <parameters xmi:id="_UykO1K0HEfCdr4B5bHeijA"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldiK0DEfCdr4B5bHeijA"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Distinct_Count_0.1.definition#_ccHq0BF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykO1a0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT DISTINCT &quot;Region&quot; FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; ) A" language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_UykO1q0HEfCdr4B5bHeijA" name="Distinct Count" label="Distinct Count">
          <taggedValue xmi:id="_UykO160HEfCdr4B5bHeijA" tag="Description" value="counts the number of distinct rows (like a &quot;SELECT DISTINCT&quot; SQL statement)"/>
          <taggedValue xmi:id="_UykO2K0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the number of distinct records"/>
          <sqlGenericExpression xmi:id="_UykO2a0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT DISTINCT &lt;%=__COLUMN_NAMES__%> FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>) A" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:UniqueCountIndicator" xmi:id="_UykO2q0HEfCdr4B5bHeijA" count="91" nullCount="60" computed="true" uniqueValueCount="13">
        <parameters xmi:id="_UykO260HEfCdr4B5bHeijA"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldiK0DEfCdr4B5bHeijA"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Unique_Count_0.1.definition#_ccHq0RF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykO3K0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &quot;Region&quot;, COUNT(*) mycount FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot;  GROUP BY &quot;Region&quot; HAVING COUNT(*) = 1) AS myquery" language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_UykO3a0HEfCdr4B5bHeijA" name="Unique Count" label="Unique Count">
          <taggedValue xmi:id="_UykO3q0HEfCdr4B5bHeijA" tag="Description" value="counts the number of unique rows (i.e. distinct rows with only one instance: rows that are not duplicated)"/>
          <taggedValue xmi:id="_UykO360HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the number of unique records"/>
          <sqlGenericExpression xmi:id="_UykO4K0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="SQL"/>
          <sqlGenericExpression xmi:id="_UykO4a0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount = 1) AS myquery" language="MySQL"/>
          <sqlGenericExpression xmi:id="_UykO4q0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) myquery" language="Oracle"/>
          <sqlGenericExpression xmi:id="_UykO460HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount = 1) AS myquery" language="Teradata"/>
          <sqlGenericExpression xmi:id="_UykO5K0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_UykO5a0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_UykO5q0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1)  myquery" language="Hive" version=""/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:DuplicateCountIndicator" xmi:id="_UykO560HEfCdr4B5bHeijA" count="91" nullCount="60" computed="true" duplicateValueCount="6">
        <parameters xmi:id="_UykO6K0HEfCdr4B5bHeijA"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldiK0DEfCdr4B5bHeijA"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Duplicate_Count_0.1.definition#_ccHq0hF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykO6a0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &quot;Region&quot;, COUNT(*) mycount FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot;  m  GROUP BY &quot;Region&quot; HAVING COUNT(*) > 1) myquery" language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_UykO6q0HEfCdr4B5bHeijA" name="Duplicate Count" label="Duplicate Count">
          <taggedValue xmi:id="_UykO660HEfCdr4B5bHeijA" tag="Description" value="counts the number of duplicate rows. This number and the number of unique data equals the number of distinct rows"/>
          <taggedValue xmi:id="_UykO7K0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the number of duplicated records"/>
          <sqlGenericExpression xmi:id="_UykO7a0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) AS myquery" language="SQL"/>
          <sqlGenericExpression xmi:id="_UykO7q0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount > 1) AS myquery" language="MySQL"/>
          <sqlGenericExpression xmi:id="_UykO760HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Oracle"/>
          <sqlGenericExpression xmi:id="_UykO8K0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount > 1) AS myquery" language="Teradata"/>
          <sqlGenericExpression xmi:id="_UykO8a0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_UykO8q0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) AS myquery" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_UykO860HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Hive"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:BlankCountIndicator" xmi:id="_UykO9K0HEfCdr4B5bHeijA" count="91" nullCount="60" computed="true">
        <parameters xmi:id="_UykO9a0HEfCdr4B5bHeijA"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldiK0DEfCdr4B5bHeijA"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Blank_Count_0.1.definition#_ccHq0xF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykO9q0HEfCdr4B5bHeijA" body="SELECT COUNT(&quot;Region&quot;) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot;  WHERE LTRIM(RTRIM(&quot;Region&quot;)) = '' " language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_UykO960HEfCdr4B5bHeijA" name="Blank Count" label="Blank Count">
          <taggedValue xmi:id="_UykO-K0HEfCdr4B5bHeijA" tag="Description" value="counts the number of blank rows. A blank is a non null textual data that contains only white spaces (or nothing). Note that Oracle does not distinguish between the empty string and the null value"/>
          <taggedValue xmi:id="_UykO-a0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the number of blank records"/>
          <sqlGenericExpression xmi:id="_UykO-q0HEfCdr4B5bHeijA" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE TRIM(&lt;%=__COLUMN_NAMES__%>) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_UykO-60HEfCdr4B5bHeijA" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE TRIM(&lt;%=__COLUMN_NAMES__%>) IS NULL &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_UykO_K0HEfCdr4B5bHeijA" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_UykO_a0HEfCdr4B5bHeijA" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_UykO_q0HEfCdr4B5bHeijA" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> = '' or RTRIM(LTRIM(&lt;%=__COLUMN_NAMES__%>)) = '') &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:TextIndicator" xmi:id="_UykO_60HEfCdr4B5bHeijA">
        <parameters xmi:id="_UykPAK0HEfCdr4B5bHeijA"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldiK0DEfCdr4B5bHeijA"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Text_Statistics_0.1.definition#_yb9x0zh8Ed2XmO7pl5Yuyg"/>
        <averageLengthIndicator xmi:id="_UykPAa0HEfCdr4B5bHeijA" count="31" nullCount="60" computed="true" sumLength="101.0">
          <parameters xmi:id="_UykPAq0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykPA60HEfCdr4B5bHeijA" useBlank="false"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldiK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_0.1.definition#_ccIR4BF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykPBK0HEfCdr4B5bHeijA" body="SELECT SUM(LEN(&quot;Region&quot;)), COUNT(&quot;Region&quot;) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (&quot;Region&quot; IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &quot;Region&quot; IS NULL  THEN 'NULL TALEND' ELSE &quot;Region&quot; END)) &lt;> '' ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykPBa0HEfCdr4B5bHeijA" name="Average Length" label="Average Length">
            <taggedValue xmi:id="_UykPBq0HEfCdr4B5bHeijA" tag="Description" value="computes the average length of the field. Does not take into account the null and blank values when computing the average length."/>
            <taggedValue xmi:id="_UykPB60HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the average length of the textual record of non-null and non-blank values"/>
            <sqlGenericExpression xmi:id="_UykPCK0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykPCa0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykPCq0HEfCdr4B5bHeijA" body="SELECT SUM(LEN(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykPC60HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykPDK0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykPDa0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_UykPDq0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykPD60HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykPEK0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )), COUNT( &lt;%=__COLUMN_NAMES__%> ) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykPEa0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykPEq0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_UykPE60HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykPFK0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </averageLengthIndicator>
        <maxLengthIndicator xmi:id="_UykPFa0HEfCdr4B5bHeijA" nullCount="60" computed="true" length="13">
          <parameters xmi:id="_UykPFq0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykPF60HEfCdr4B5bHeijA" useBlank="false"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldiK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_0.1.definition#_ccHq1RF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykPGK0HEfCdr4B5bHeijA" body="SELECT MAX(LEN(&quot;Region&quot;)) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (&quot;Region&quot; IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &quot;Region&quot; IS NULL  THEN 'NULL TALEND' ELSE &quot;Region&quot; END)) &lt;> '' ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykPGa0HEfCdr4B5bHeijA" name="Maximal Length" label="Maximal Length">
            <taggedValue xmi:id="_UykPGq0HEfCdr4B5bHeijA" tag="Description" value="computes the maximal length of a text field. Does not take into account the null and blank values when computing the maximal length."/>
            <taggedValue xmi:id="_UykPG60HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the length of the longest textual record of non-null and non-blank values"/>
            <sqlGenericExpression xmi:id="_UykPHK0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykPHa0HEfCdr4B5bHeijA" body="SELECT MAX( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle" modificationDate=""/>
            <sqlGenericExpression xmi:id="_UykPHq0HEfCdr4B5bHeijA" body="SELECT MAX(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykPH60HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykPIK0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykPIa0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive" modificationDate=""/>
            <sqlGenericExpression xmi:id="_UykPIq0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykPI60HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' )  &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykPJK0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykPJa0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykPJq0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_UykPJ60HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykPKK0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </maxLengthIndicator>
        <minLengthIndicator xmi:id="_UykPKa0HEfCdr4B5bHeijA" nullCount="60" computed="true" length="2">
          <parameters xmi:id="_UykPKq0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykPK60HEfCdr4B5bHeijA" useBlank="false"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldiK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_0.1.definition#_ccHq1BF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykPLK0HEfCdr4B5bHeijA" body="SELECT MIN(LEN(&quot;Region&quot;)) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (&quot;Region&quot; IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &quot;Region&quot; IS NULL  THEN 'NULL TALEND' ELSE &quot;Region&quot; END)) &lt;> '' ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykPLa0HEfCdr4B5bHeijA" name="Minimal Length" label="Minimal Length">
            <taggedValue xmi:id="_UykPLq0HEfCdr4B5bHeijA" tag="Description" value="computes the minimal length of a text field. Does not take into account the null and blank values when computing the minimal length."/>
            <taggedValue xmi:id="_UykPL60HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the length of the smallest textual record of non-null and non-blank values"/>
            <sqlGenericExpression xmi:id="_UykPMK0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykPMa0HEfCdr4B5bHeijA" body="SELECT MIN( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykPMq0HEfCdr4B5bHeijA" body="SELECT MIN(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykPM60HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykPNK0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykPNa0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_UykPNq0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykPN60HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykPOK0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykPOa0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (1=1) AND (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykPOq0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_UykPO60HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykPPK0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </minLengthIndicator>
        <minLengthWithBlankIndicator xmi:id="_UykPPa0HEfCdr4B5bHeijA" nullCount="60" computed="true" length="2">
          <parameters xmi:id="_UykPPq0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykPP60HEfCdr4B5bHeijA"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldiK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Blank_0.1.definition#_G4EzQZU9Ed-Y15ulK_jijQ"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykPQK0HEfCdr4B5bHeijA" body="SELECT MIN(LEN(&quot;Region&quot;)) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (&quot;Region&quot; IS NOT NULL ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykPQa0HEfCdr4B5bHeijA" name="Minimal Length With Blank" label="Minimal Length With Blank">
            <taggedValue xmi:id="_UykPQq0HEfCdr4B5bHeijA" tag="Description" value="computes the minimal length of a text field. Does not take into account the null values when computing the minimal length."/>
            <taggedValue xmi:id="_UykPQ60HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the length of the smallest textual record of non-null values"/>
            <sqlGenericExpression xmi:id="_UykPRK0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykPRa0HEfCdr4B5bHeijA" body="SELECT MIN( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykPRq0HEfCdr4B5bHeijA" body="SELECT MIN(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykPR60HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykPSK0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykPSa0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_UykPSq0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykPS60HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykPTK0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykPTa0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykPTq0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykPT60HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </minLengthWithBlankIndicator>
        <minLengthWithNullIndicator xmi:id="_UykPUK0HEfCdr4B5bHeijA" nullCount="60" computed="true" length="0">
          <parameters xmi:id="_UykPUa0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykPUq0HEfCdr4B5bHeijA" useBlank="false" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldiK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Null_0.1.definition#_a4KsoI1qEd-xwI2imLgHRA"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykPU60HEfCdr4B5bHeijA" body="SELECT MIN(LEN(CASE WHEN &quot;Region&quot; IS NULL  THEN '' ELSE &quot;Region&quot; END)) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (LTRIM(RTRIM(CASE WHEN &quot;Region&quot; IS NULL  THEN 'NULL TALEND' ELSE &quot;Region&quot; END)) &lt;> '' ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykPVK0HEfCdr4B5bHeijA" name="Minimal Length With Null" label="Minimal Length With Null">
            <taggedValue xmi:id="_UykPVa0HEfCdr4B5bHeijA" tag="Description" value="computes the minimal length of a text field. Does not take into account the blank values when computing the minimal length."/>
            <taggedValue xmi:id="_UykPVq0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the length of the smallest textual record of non-blank values"/>
            <sqlGenericExpression xmi:id="_UykPV60HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykPWK0HEfCdr4B5bHeijA" body="SELECT MIN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykPWa0HEfCdr4B5bHeijA" body="SELECT MIN(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykPWq0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykPW60HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykPXK0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_UykPXa0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykPXq0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykPX60HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykPYK0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykPYa0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_UykPYq0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykPY60HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </minLengthWithNullIndicator>
        <minLengthWithBlankNullIndicator xmi:id="_UykPZK0HEfCdr4B5bHeijA" nullCount="60" computed="true" length="0">
          <parameters xmi:id="_UykPZa0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykPZq0HEfCdr4B5bHeijA" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldiK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Blank_and_Null_0.1.definition#_9HDjMJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykPZ60HEfCdr4B5bHeijA" body="SELECT MIN(LEN(CASE WHEN &quot;Region&quot; IS NULL  THEN '' ELSE &quot;Region&quot; END)) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykPaK0HEfCdr4B5bHeijA" name="Minimal Length With Blank and Null" label="Minimal Length With Blank and Null">
            <taggedValue xmi:id="_UykPaa0HEfCdr4B5bHeijA" tag="Description" value="computes the minimal length of a text field."/>
            <taggedValue xmi:id="_UykPaq0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the length of the smallest textual record"/>
            <sqlGenericExpression xmi:id="_UykPa60HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykPbK0HEfCdr4B5bHeijA" body="SELECT MIN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykPba0HEfCdr4B5bHeijA" body="SELECT MIN(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykPbq0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykPb60HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykPcK0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_UykPca0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykPcq0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykPc60HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykPdK0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykPda0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_UykPdq0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykPd60HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </minLengthWithBlankNullIndicator>
        <maxLengthWithBlankIndicator xmi:id="_UykPeK0HEfCdr4B5bHeijA" nullCount="60" computed="true" length="13">
          <parameters xmi:id="_UykPea0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykPeq0HEfCdr4B5bHeijA"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldiK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Blank_0.1.definition#_-xmZcJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykPe60HEfCdr4B5bHeijA" body="SELECT MAX(LEN(&quot;Region&quot;)) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (&quot;Region&quot; IS NOT NULL ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykPfK0HEfCdr4B5bHeijA" name="Maximal Length With Blank" label="Maximal Length With Blank">
            <taggedValue xmi:id="_UykPfa0HEfCdr4B5bHeijA" tag="Description" value="computes the maximal length of a text field. Does not take into account the null values when computing the maximal length."/>
            <taggedValue xmi:id="_UykPfq0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the length of the longest textual record of non-null values"/>
            <sqlGenericExpression xmi:id="_UykPf60HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykPgK0HEfCdr4B5bHeijA" body="SELECT MAX( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykPga0HEfCdr4B5bHeijA" body="SELECT MAX(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykPgq0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykPg60HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykPhK0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_UykPha0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykPhq0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykPh60HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykPiK0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykPia0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykPiq0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </maxLengthWithBlankIndicator>
        <maxLengthWithNullIndicator xmi:id="_UykPi60HEfCdr4B5bHeijA" nullCount="60" computed="true" length="13">
          <parameters xmi:id="_UykPjK0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykPja0HEfCdr4B5bHeijA" useBlank="false" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldiK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Null_0.1.definition#_-_UFUJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykPjq0HEfCdr4B5bHeijA" body="SELECT MAX(LEN(CASE WHEN &quot;Region&quot; IS NULL  THEN '' ELSE &quot;Region&quot; END)) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (LTRIM(RTRIM(CASE WHEN &quot;Region&quot; IS NULL  THEN 'NULL TALEND' ELSE &quot;Region&quot; END)) &lt;> '' ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykPj60HEfCdr4B5bHeijA" name="Maximal Length With Null" label="Maximal Length With Null">
            <taggedValue xmi:id="_UykPkK0HEfCdr4B5bHeijA" tag="Description" value="computes the maximal length of a text field. Does not take into account the blank values when computing the maximal length."/>
            <taggedValue xmi:id="_UykPka0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the length of the longest textual record of non-blank values"/>
            <sqlGenericExpression xmi:id="_UykPkq0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykPk60HEfCdr4B5bHeijA" body="SELECT MAX(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykPlK0HEfCdr4B5bHeijA" body="SELECT MAX(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykPla0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykPlq0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykPl60HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive" version=""/>
            <sqlGenericExpression xmi:id="_UykPmK0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykPma0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykPmq0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykPm60HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykPnK0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_UykPna0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykPnq0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </maxLengthWithNullIndicator>
        <maxLengthWithBlankNullIndicator xmi:id="_UykPn60HEfCdr4B5bHeijA" nullCount="60" computed="true" length="13">
          <parameters xmi:id="_UykPoK0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykPoa0HEfCdr4B5bHeijA" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldiK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Blank_and_Null_0.1.definition#_-hzp8JSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykPoq0HEfCdr4B5bHeijA" body="SELECT MAX(LEN(CASE WHEN &quot;Region&quot; IS NULL  THEN '' ELSE &quot;Region&quot; END)) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykPo60HEfCdr4B5bHeijA" name="Maximal Length With Blank and Null" label="Maximal Length With Blank and Null">
            <taggedValue xmi:id="_UykPpK0HEfCdr4B5bHeijA" tag="Description" value="computes the maximal length of a text field."/>
            <taggedValue xmi:id="_UykPpa0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the length of the longest textual record"/>
            <sqlGenericExpression xmi:id="_UykPpq0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykPp60HEfCdr4B5bHeijA" body="SELECT MAX(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykPqK0HEfCdr4B5bHeijA" body="SELECT MAX(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykPqa0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykPqq0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykPq60HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_UykPrK0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykPra0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykPrq0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykPr60HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykPsK0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_UykPsa0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykPsq0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </maxLengthWithBlankNullIndicator>
        <avgLengthWithBlankIndicator xmi:id="_UykPs60HEfCdr4B5bHeijA" count="31" nullCount="60" computed="true" sumLength="101.0">
          <parameters xmi:id="_UykPtK0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykPta0HEfCdr4B5bHeijA"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldiK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Blank_0.1.definition#__gPoIJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykPtq0HEfCdr4B5bHeijA" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM(&quot;Region&quot;)) )=0  THEN '' ELSE  &quot;Region&quot; END)), COUNT(*) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (&quot;Region&quot; IS NOT NULL ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykPt60HEfCdr4B5bHeijA" name="Average Length With Blank" label="Average Length With Blank">
            <taggedValue xmi:id="_UykPuK0HEfCdr4B5bHeijA" tag="Description" value="computes the average length of the field. Does not take into account the null values when computing the average length."/>
            <taggedValue xmi:id="_UykPua0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the average length of the textual record of non-null values"/>
            <sqlGenericExpression xmi:id="_UykPuq0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykPu60HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykPvK0HEfCdr4B5bHeijA" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) )=0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykPva0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykPvq0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykPv60HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_UykPwK0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykPwa0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykPwq0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykPw60HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykPxK0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykPxa0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </avgLengthWithBlankIndicator>
        <avgLengthWithNullIndicator xmi:id="_UykPxq0HEfCdr4B5bHeijA" count="91" nullCount="60" computed="true" sumLength="101.0">
          <parameters xmi:id="_UykPx60HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykPyK0HEfCdr4B5bHeijA" useBlank="false" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldiK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Null_0.1.definition#__vI_wJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykPya0HEfCdr4B5bHeijA" body="SELECT SUM(LEN(CASE WHEN &quot;Region&quot; IS NULL  THEN '' ELSE &quot;Region&quot; END)), COUNT(*) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (LTRIM(RTRIM(CASE WHEN &quot;Region&quot; IS NULL  THEN 'NULL TALEND' ELSE &quot;Region&quot; END)) &lt;> '' ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykPyq0HEfCdr4B5bHeijA" name="Average Length With Null" label="Average Length With Null">
            <taggedValue xmi:id="_UykPy60HEfCdr4B5bHeijA" tag="Description" value="computes the average length of the field. Does not take into account the blank values when computing the average length."/>
            <taggedValue xmi:id="_UykPzK0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the average length of the textual record of non-blank values"/>
            <sqlGenericExpression xmi:id="_UykPza0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykPzq0HEfCdr4B5bHeijA" body="SELECT SUM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykPz60HEfCdr4B5bHeijA" body="SELECT SUM(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykP0K0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykP0a0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykP0q0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_UykP060HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykP1K0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykP1a0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykP1q0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykP160HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_UykP2K0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykP2a0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </avgLengthWithNullIndicator>
        <avgLengthWithBlankNullIndicator xmi:id="_UykP2q0HEfCdr4B5bHeijA" count="91" nullCount="60" computed="true" sumLength="101.0">
          <parameters xmi:id="_UykP260HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykP3K0HEfCdr4B5bHeijA" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldiK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Blank_and_Null_0.1.definition#__TbUIJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykP3a0HEfCdr4B5bHeijA" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM( CASE WHEN &quot;Region&quot; IS NULL  THEN '' ELSE &quot;Region&quot; END )) )=0  THEN '' ELSE   CASE WHEN &quot;Region&quot; IS NULL  THEN '' ELSE &quot;Region&quot; END  END)), COUNT(*) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykP3q0HEfCdr4B5bHeijA" name="Average Length With Blank and Null" label="Average Length With Blank and Null">
            <taggedValue xmi:id="_UykP360HEfCdr4B5bHeijA" tag="Description" value="computes the average length of the field."/>
            <taggedValue xmi:id="_UykP4K0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the average length of the textual record"/>
            <sqlGenericExpression xmi:id="_UykP4a0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykP4q0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykP460HEfCdr4B5bHeijA" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) )=0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykP5K0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykP5a0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykP5q0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_UykP560HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykP6K0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykP6a0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykP6q0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykP660HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_UykP7K0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykP7a0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </avgLengthWithBlankNullIndicator>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RowCountIndicator" xmi:id="_UykP7q0HEfCdr4B5bHeijA" count="91" computed="true">
        <parameters xmi:id="_UykP760HEfCdr4B5bHeijA"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldjK0DEfCdr4B5bHeijA"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Row_Count_0.1.definition#_ccFOkBF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykP8K0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; " language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_UykP8a0HEfCdr4B5bHeijA" name="Row Count" label="Row Count">
          <taggedValue xmi:id="_UykP8q0HEfCdr4B5bHeijA" tag="Description" value="counts the number of rows"/>
          <taggedValue xmi:id="_UykP860HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the number of records"/>
          <sqlGenericExpression xmi:id="_UykP9K0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:NullCountIndicator" xmi:id="_UykP9a0HEfCdr4B5bHeijA" count="91" nullCount="1" computed="true">
        <parameters xmi:id="_UykP9q0HEfCdr4B5bHeijA"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldjK0DEfCdr4B5bHeijA"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Null_Count_0.1.definition#_GrAeADh9Ed2XmO7pl5Yuyg"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykP960HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE &quot;PostalCode&quot; IS NULL " language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_UykP-K0HEfCdr4B5bHeijA" name="Null Count" label="Null Count">
          <taggedValue xmi:id="_UykP-a0HEfCdr4B5bHeijA" tag="Purpose" value="evaluate the number of missing data (null records)"/>
          <taggedValue xmi:id="_UykP-q0HEfCdr4B5bHeijA" tag="Description" value="counts the number of null rows"/>
          <sqlGenericExpression xmi:id="_UykP-60HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE &lt;%=__COLUMN_NAMES__%> IS NULL &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:DistinctCountIndicator" xmi:id="_UykP_K0HEfCdr4B5bHeijA" count="91" nullCount="1" computed="true" distinctValueCount="87">
        <parameters xmi:id="_UykP_a0HEfCdr4B5bHeijA"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldjK0DEfCdr4B5bHeijA"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Distinct_Count_0.1.definition#_ccHq0BF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykP_q0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT DISTINCT &quot;PostalCode&quot; FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; ) A" language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_UykP_60HEfCdr4B5bHeijA" name="Distinct Count" label="Distinct Count">
          <taggedValue xmi:id="_UykQAK0HEfCdr4B5bHeijA" tag="Description" value="counts the number of distinct rows (like a &quot;SELECT DISTINCT&quot; SQL statement)"/>
          <taggedValue xmi:id="_UykQAa0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the number of distinct records"/>
          <sqlGenericExpression xmi:id="_UykQAq0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT DISTINCT &lt;%=__COLUMN_NAMES__%> FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>) A" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:UniqueCountIndicator" xmi:id="_UykQA60HEfCdr4B5bHeijA" count="91" nullCount="1" computed="true" uniqueValueCount="84">
        <parameters xmi:id="_UykQBK0HEfCdr4B5bHeijA"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldjK0DEfCdr4B5bHeijA"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Unique_Count_0.1.definition#_ccHq0RF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykQBa0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &quot;PostalCode&quot;, COUNT(*) mycount FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot;  GROUP BY &quot;PostalCode&quot; HAVING COUNT(*) = 1) AS myquery" language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_UykQBq0HEfCdr4B5bHeijA" name="Unique Count" label="Unique Count">
          <taggedValue xmi:id="_UykQB60HEfCdr4B5bHeijA" tag="Description" value="counts the number of unique rows (i.e. distinct rows with only one instance: rows that are not duplicated)"/>
          <taggedValue xmi:id="_UykQCK0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the number of unique records"/>
          <sqlGenericExpression xmi:id="_UykQCa0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="SQL"/>
          <sqlGenericExpression xmi:id="_UykQCq0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount = 1) AS myquery" language="MySQL"/>
          <sqlGenericExpression xmi:id="_UykQC60HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) myquery" language="Oracle"/>
          <sqlGenericExpression xmi:id="_UykQDK0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount = 1) AS myquery" language="Teradata"/>
          <sqlGenericExpression xmi:id="_UykQDa0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_UykQDq0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_UykQD60HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1)  myquery" language="Hive" version=""/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:DuplicateCountIndicator" xmi:id="_UykQEK0HEfCdr4B5bHeijA" count="91" nullCount="1" computed="true" duplicateValueCount="3">
        <parameters xmi:id="_UykQEa0HEfCdr4B5bHeijA"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldjK0DEfCdr4B5bHeijA"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Duplicate_Count_0.1.definition#_ccHq0hF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykQEq0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &quot;PostalCode&quot;, COUNT(*) mycount FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot;  m  GROUP BY &quot;PostalCode&quot; HAVING COUNT(*) > 1) myquery" language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_UykQE60HEfCdr4B5bHeijA" name="Duplicate Count" label="Duplicate Count">
          <taggedValue xmi:id="_UykQFK0HEfCdr4B5bHeijA" tag="Description" value="counts the number of duplicate rows. This number and the number of unique data equals the number of distinct rows"/>
          <taggedValue xmi:id="_UykQFa0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the number of duplicated records"/>
          <sqlGenericExpression xmi:id="_UykQFq0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) AS myquery" language="SQL"/>
          <sqlGenericExpression xmi:id="_UykQF60HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount > 1) AS myquery" language="MySQL"/>
          <sqlGenericExpression xmi:id="_UykQGK0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Oracle"/>
          <sqlGenericExpression xmi:id="_UykQGa0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount > 1) AS myquery" language="Teradata"/>
          <sqlGenericExpression xmi:id="_UykQGq0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_UykQG60HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) AS myquery" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_UykQHK0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Hive"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:BlankCountIndicator" xmi:id="_UykQHa0HEfCdr4B5bHeijA" count="91" nullCount="1" computed="true">
        <parameters xmi:id="_UykQHq0HEfCdr4B5bHeijA"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldjK0DEfCdr4B5bHeijA"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Blank_Count_0.1.definition#_ccHq0xF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykQH60HEfCdr4B5bHeijA" body="SELECT COUNT(&quot;PostalCode&quot;) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot;  WHERE LTRIM(RTRIM(&quot;PostalCode&quot;)) = '' " language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_UykQIK0HEfCdr4B5bHeijA" name="Blank Count" label="Blank Count">
          <taggedValue xmi:id="_UykQIa0HEfCdr4B5bHeijA" tag="Description" value="counts the number of blank rows. A blank is a non null textual data that contains only white spaces (or nothing). Note that Oracle does not distinguish between the empty string and the null value"/>
          <taggedValue xmi:id="_UykQIq0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the number of blank records"/>
          <sqlGenericExpression xmi:id="_UykQI60HEfCdr4B5bHeijA" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE TRIM(&lt;%=__COLUMN_NAMES__%>) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_UykQJK0HEfCdr4B5bHeijA" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE TRIM(&lt;%=__COLUMN_NAMES__%>) IS NULL &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_UykQJa0HEfCdr4B5bHeijA" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_UykQJq0HEfCdr4B5bHeijA" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_UykQJ60HEfCdr4B5bHeijA" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> = '' or RTRIM(LTRIM(&lt;%=__COLUMN_NAMES__%>)) = '') &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:TextIndicator" xmi:id="_UykQKK0HEfCdr4B5bHeijA">
        <parameters xmi:id="_UykQKa0HEfCdr4B5bHeijA"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldjK0DEfCdr4B5bHeijA"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Text_Statistics_0.1.definition#_yb9x0zh8Ed2XmO7pl5Yuyg"/>
        <averageLengthIndicator xmi:id="_UykQKq0HEfCdr4B5bHeijA" count="90" nullCount="1" computed="true" sumLength="501.0">
          <parameters xmi:id="_UykQK60HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykQLK0HEfCdr4B5bHeijA" useBlank="false"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldjK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_0.1.definition#_ccIR4BF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykQLa0HEfCdr4B5bHeijA" body="SELECT SUM(LEN(&quot;PostalCode&quot;)), COUNT(&quot;PostalCode&quot;) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (&quot;PostalCode&quot; IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &quot;PostalCode&quot; IS NULL  THEN 'NULL TALEND' ELSE &quot;PostalCode&quot; END)) &lt;> '' ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykQLq0HEfCdr4B5bHeijA" name="Average Length" label="Average Length">
            <taggedValue xmi:id="_UykQL60HEfCdr4B5bHeijA" tag="Description" value="computes the average length of the field. Does not take into account the null and blank values when computing the average length."/>
            <taggedValue xmi:id="_UykQMK0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the average length of the textual record of non-null and non-blank values"/>
            <sqlGenericExpression xmi:id="_UykQMa0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykQMq0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykQM60HEfCdr4B5bHeijA" body="SELECT SUM(LEN(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykQNK0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykQNa0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykQNq0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_UykQN60HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykQOK0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykQOa0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )), COUNT( &lt;%=__COLUMN_NAMES__%> ) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykQOq0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykQO60HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_UykQPK0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykQPa0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </averageLengthIndicator>
        <maxLengthIndicator xmi:id="_UykQPq0HEfCdr4B5bHeijA" nullCount="1" computed="true" length="9">
          <parameters xmi:id="_UykQP60HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykQQK0HEfCdr4B5bHeijA" useBlank="false"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldjK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_0.1.definition#_ccHq1RF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykQQa0HEfCdr4B5bHeijA" body="SELECT MAX(LEN(&quot;PostalCode&quot;)) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (&quot;PostalCode&quot; IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &quot;PostalCode&quot; IS NULL  THEN 'NULL TALEND' ELSE &quot;PostalCode&quot; END)) &lt;> '' ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykQQq0HEfCdr4B5bHeijA" name="Maximal Length" label="Maximal Length">
            <taggedValue xmi:id="_UykQQ60HEfCdr4B5bHeijA" tag="Description" value="computes the maximal length of a text field. Does not take into account the null and blank values when computing the maximal length."/>
            <taggedValue xmi:id="_UykQRK0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the length of the longest textual record of non-null and non-blank values"/>
            <sqlGenericExpression xmi:id="_UykQRa0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykQRq0HEfCdr4B5bHeijA" body="SELECT MAX( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle" modificationDate=""/>
            <sqlGenericExpression xmi:id="_UykQR60HEfCdr4B5bHeijA" body="SELECT MAX(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykQSK0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykQSa0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykQSq0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive" modificationDate=""/>
            <sqlGenericExpression xmi:id="_UykQS60HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykQTK0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' )  &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykQTa0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykQTq0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykQT60HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_UykQUK0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykQUa0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </maxLengthIndicator>
        <minLengthIndicator xmi:id="_UykQUq0HEfCdr4B5bHeijA" nullCount="1" computed="true" length="4">
          <parameters xmi:id="_UykQU60HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykQVK0HEfCdr4B5bHeijA" useBlank="false"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldjK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_0.1.definition#_ccHq1BF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykQVa0HEfCdr4B5bHeijA" body="SELECT MIN(LEN(&quot;PostalCode&quot;)) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (&quot;PostalCode&quot; IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &quot;PostalCode&quot; IS NULL  THEN 'NULL TALEND' ELSE &quot;PostalCode&quot; END)) &lt;> '' ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykQVq0HEfCdr4B5bHeijA" name="Minimal Length" label="Minimal Length">
            <taggedValue xmi:id="_UykQV60HEfCdr4B5bHeijA" tag="Description" value="computes the minimal length of a text field. Does not take into account the null and blank values when computing the minimal length."/>
            <taggedValue xmi:id="_UykQWK0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the length of the smallest textual record of non-null and non-blank values"/>
            <sqlGenericExpression xmi:id="_UykQWa0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykQWq0HEfCdr4B5bHeijA" body="SELECT MIN( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykQW60HEfCdr4B5bHeijA" body="SELECT MIN(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykQXK0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykQXa0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykQXq0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_UykQX60HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykQYK0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykQYa0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykQYq0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (1=1) AND (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykQY60HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_UykQZK0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykQZa0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </minLengthIndicator>
        <minLengthWithBlankIndicator xmi:id="_UykQZq0HEfCdr4B5bHeijA" nullCount="1" computed="true" length="4">
          <parameters xmi:id="_UykQZ60HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykQaK0HEfCdr4B5bHeijA"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldjK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Blank_0.1.definition#_G4EzQZU9Ed-Y15ulK_jijQ"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykQaa0HEfCdr4B5bHeijA" body="SELECT MIN(LEN(&quot;PostalCode&quot;)) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (&quot;PostalCode&quot; IS NOT NULL ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykQaq0HEfCdr4B5bHeijA" name="Minimal Length With Blank" label="Minimal Length With Blank">
            <taggedValue xmi:id="_UykQa60HEfCdr4B5bHeijA" tag="Description" value="computes the minimal length of a text field. Does not take into account the null values when computing the minimal length."/>
            <taggedValue xmi:id="_UykQbK0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the length of the smallest textual record of non-null values"/>
            <sqlGenericExpression xmi:id="_UykQba0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykQbq0HEfCdr4B5bHeijA" body="SELECT MIN( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykQb60HEfCdr4B5bHeijA" body="SELECT MIN(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykQcK0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykQca0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykQcq0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_UykQc60HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykQdK0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykQda0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykQdq0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykQd60HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykQeK0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </minLengthWithBlankIndicator>
        <minLengthWithNullIndicator xmi:id="_UykQea0HEfCdr4B5bHeijA" nullCount="1" computed="true" length="0">
          <parameters xmi:id="_UykQeq0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykQe60HEfCdr4B5bHeijA" useBlank="false" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldjK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Null_0.1.definition#_a4KsoI1qEd-xwI2imLgHRA"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykQfK0HEfCdr4B5bHeijA" body="SELECT MIN(LEN(CASE WHEN &quot;PostalCode&quot; IS NULL  THEN '' ELSE &quot;PostalCode&quot; END)) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (LTRIM(RTRIM(CASE WHEN &quot;PostalCode&quot; IS NULL  THEN 'NULL TALEND' ELSE &quot;PostalCode&quot; END)) &lt;> '' ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykQfa0HEfCdr4B5bHeijA" name="Minimal Length With Null" label="Minimal Length With Null">
            <taggedValue xmi:id="_UykQfq0HEfCdr4B5bHeijA" tag="Description" value="computes the minimal length of a text field. Does not take into account the blank values when computing the minimal length."/>
            <taggedValue xmi:id="_UykQf60HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the length of the smallest textual record of non-blank values"/>
            <sqlGenericExpression xmi:id="_UykQgK0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykQga0HEfCdr4B5bHeijA" body="SELECT MIN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykQgq0HEfCdr4B5bHeijA" body="SELECT MIN(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykQg60HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykQhK0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykQha0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_UykQhq0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykQh60HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykQiK0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykQia0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykQiq0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_UykQi60HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykQjK0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </minLengthWithNullIndicator>
        <minLengthWithBlankNullIndicator xmi:id="_UykQja0HEfCdr4B5bHeijA" nullCount="1" computed="true" length="0">
          <parameters xmi:id="_UykQjq0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykQj60HEfCdr4B5bHeijA" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldjK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Blank_and_Null_0.1.definition#_9HDjMJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykQkK0HEfCdr4B5bHeijA" body="SELECT MIN(LEN(CASE WHEN &quot;PostalCode&quot; IS NULL  THEN '' ELSE &quot;PostalCode&quot; END)) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykQka0HEfCdr4B5bHeijA" name="Minimal Length With Blank and Null" label="Minimal Length With Blank and Null">
            <taggedValue xmi:id="_UykQkq0HEfCdr4B5bHeijA" tag="Description" value="computes the minimal length of a text field."/>
            <taggedValue xmi:id="_UykQk60HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the length of the smallest textual record"/>
            <sqlGenericExpression xmi:id="_UykQlK0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykQla0HEfCdr4B5bHeijA" body="SELECT MIN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykQlq0HEfCdr4B5bHeijA" body="SELECT MIN(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykQl60HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykQmK0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykQma0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_UykQmq0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykQm60HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykQnK0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykQna0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykQnq0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_UykQn60HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykQoK0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </minLengthWithBlankNullIndicator>
        <maxLengthWithBlankIndicator xmi:id="_UykQoa0HEfCdr4B5bHeijA" nullCount="1" computed="true" length="9">
          <parameters xmi:id="_UykQoq0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykQo60HEfCdr4B5bHeijA"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldjK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Blank_0.1.definition#_-xmZcJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykQpK0HEfCdr4B5bHeijA" body="SELECT MAX(LEN(&quot;PostalCode&quot;)) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (&quot;PostalCode&quot; IS NOT NULL ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykQpa0HEfCdr4B5bHeijA" name="Maximal Length With Blank" label="Maximal Length With Blank">
            <taggedValue xmi:id="_UykQpq0HEfCdr4B5bHeijA" tag="Description" value="computes the maximal length of a text field. Does not take into account the null values when computing the maximal length."/>
            <taggedValue xmi:id="_UykQp60HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the length of the longest textual record of non-null values"/>
            <sqlGenericExpression xmi:id="_UykQqK0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykQqa0HEfCdr4B5bHeijA" body="SELECT MAX( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykQqq0HEfCdr4B5bHeijA" body="SELECT MAX(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykQq60HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykQrK0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykQra0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_UykQrq0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykQr60HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykQsK0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykQsa0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykQsq0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykQs60HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </maxLengthWithBlankIndicator>
        <maxLengthWithNullIndicator xmi:id="_UykQtK0HEfCdr4B5bHeijA" nullCount="1" computed="true" length="9">
          <parameters xmi:id="_UykQta0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykQtq0HEfCdr4B5bHeijA" useBlank="false" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldjK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Null_0.1.definition#_-_UFUJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykQt60HEfCdr4B5bHeijA" body="SELECT MAX(LEN(CASE WHEN &quot;PostalCode&quot; IS NULL  THEN '' ELSE &quot;PostalCode&quot; END)) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (LTRIM(RTRIM(CASE WHEN &quot;PostalCode&quot; IS NULL  THEN 'NULL TALEND' ELSE &quot;PostalCode&quot; END)) &lt;> '' ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykQuK0HEfCdr4B5bHeijA" name="Maximal Length With Null" label="Maximal Length With Null">
            <taggedValue xmi:id="_UykQua0HEfCdr4B5bHeijA" tag="Description" value="computes the maximal length of a text field. Does not take into account the blank values when computing the maximal length."/>
            <taggedValue xmi:id="_UykQuq0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the length of the longest textual record of non-blank values"/>
            <sqlGenericExpression xmi:id="_UykQu60HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykQvK0HEfCdr4B5bHeijA" body="SELECT MAX(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykQva0HEfCdr4B5bHeijA" body="SELECT MAX(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykQvq0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykQv60HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykQwK0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive" version=""/>
            <sqlGenericExpression xmi:id="_UykQwa0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykQwq0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykQw60HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykQxK0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykQxa0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_UykQxq0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykQx60HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </maxLengthWithNullIndicator>
        <maxLengthWithBlankNullIndicator xmi:id="_UykQyK0HEfCdr4B5bHeijA" nullCount="1" computed="true" length="9">
          <parameters xmi:id="_UykQya0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykQyq0HEfCdr4B5bHeijA" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldjK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Blank_and_Null_0.1.definition#_-hzp8JSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykQy60HEfCdr4B5bHeijA" body="SELECT MAX(LEN(CASE WHEN &quot;PostalCode&quot; IS NULL  THEN '' ELSE &quot;PostalCode&quot; END)) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykQzK0HEfCdr4B5bHeijA" name="Maximal Length With Blank and Null" label="Maximal Length With Blank and Null">
            <taggedValue xmi:id="_UykQza0HEfCdr4B5bHeijA" tag="Description" value="computes the maximal length of a text field."/>
            <taggedValue xmi:id="_UykQzq0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the length of the longest textual record"/>
            <sqlGenericExpression xmi:id="_UykQz60HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykQ0K0HEfCdr4B5bHeijA" body="SELECT MAX(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykQ0a0HEfCdr4B5bHeijA" body="SELECT MAX(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykQ0q0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykQ060HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykQ1K0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_UykQ1a0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykQ1q0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykQ160HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykQ2K0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykQ2a0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_UykQ2q0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykQ260HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </maxLengthWithBlankNullIndicator>
        <avgLengthWithBlankIndicator xmi:id="_UykQ3K0HEfCdr4B5bHeijA" count="90" nullCount="1" computed="true" sumLength="501.0">
          <parameters xmi:id="_UykQ3a0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykQ3q0HEfCdr4B5bHeijA"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldjK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Blank_0.1.definition#__gPoIJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykQ360HEfCdr4B5bHeijA" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM(&quot;PostalCode&quot;)) )=0  THEN '' ELSE  &quot;PostalCode&quot; END)), COUNT(*) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (&quot;PostalCode&quot; IS NOT NULL ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykQ4K0HEfCdr4B5bHeijA" name="Average Length With Blank" label="Average Length With Blank">
            <taggedValue xmi:id="_UykQ4a0HEfCdr4B5bHeijA" tag="Description" value="computes the average length of the field. Does not take into account the null values when computing the average length."/>
            <taggedValue xmi:id="_UykQ4q0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the average length of the textual record of non-null values"/>
            <sqlGenericExpression xmi:id="_UykQ460HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykQ5K0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykQ5a0HEfCdr4B5bHeijA" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) )=0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykQ5q0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykQ560HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykQ6K0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_UykQ6a0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykQ6q0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykQ660HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykQ7K0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykQ7a0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykQ7q0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </avgLengthWithBlankIndicator>
        <avgLengthWithNullIndicator xmi:id="_UykQ760HEfCdr4B5bHeijA" count="91" nullCount="1" computed="true" sumLength="501.0">
          <parameters xmi:id="_UykQ8K0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykQ8a0HEfCdr4B5bHeijA" useBlank="false" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldjK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Null_0.1.definition#__vI_wJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykQ8q0HEfCdr4B5bHeijA" body="SELECT SUM(LEN(CASE WHEN &quot;PostalCode&quot; IS NULL  THEN '' ELSE &quot;PostalCode&quot; END)), COUNT(*) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (LTRIM(RTRIM(CASE WHEN &quot;PostalCode&quot; IS NULL  THEN 'NULL TALEND' ELSE &quot;PostalCode&quot; END)) &lt;> '' ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykQ860HEfCdr4B5bHeijA" name="Average Length With Null" label="Average Length With Null">
            <taggedValue xmi:id="_UykQ9K0HEfCdr4B5bHeijA" tag="Description" value="computes the average length of the field. Does not take into account the blank values when computing the average length."/>
            <taggedValue xmi:id="_UykQ9a0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the average length of the textual record of non-blank values"/>
            <sqlGenericExpression xmi:id="_UykQ9q0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykQ960HEfCdr4B5bHeijA" body="SELECT SUM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykQ-K0HEfCdr4B5bHeijA" body="SELECT SUM(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykQ-a0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykQ-q0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykQ-60HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_UykQ_K0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykQ_a0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykQ_q0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykQ_60HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykRAK0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_UykRAa0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykRAq0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </avgLengthWithNullIndicator>
        <avgLengthWithBlankNullIndicator xmi:id="_UykRA60HEfCdr4B5bHeijA" count="91" nullCount="1" computed="true" sumLength="501.0">
          <parameters xmi:id="_UykRBK0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykRBa0HEfCdr4B5bHeijA" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldjK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Blank_and_Null_0.1.definition#__TbUIJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykRBq0HEfCdr4B5bHeijA" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM( CASE WHEN &quot;PostalCode&quot; IS NULL  THEN '' ELSE &quot;PostalCode&quot; END )) )=0  THEN '' ELSE   CASE WHEN &quot;PostalCode&quot; IS NULL  THEN '' ELSE &quot;PostalCode&quot; END  END)), COUNT(*) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykRB60HEfCdr4B5bHeijA" name="Average Length With Blank and Null" label="Average Length With Blank and Null">
            <taggedValue xmi:id="_UykRCK0HEfCdr4B5bHeijA" tag="Description" value="computes the average length of the field."/>
            <taggedValue xmi:id="_UykRCa0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the average length of the textual record"/>
            <sqlGenericExpression xmi:id="_UykRCq0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykRC60HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykRDK0HEfCdr4B5bHeijA" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) )=0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykRDa0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykRDq0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykRD60HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_UykREK0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykREa0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykREq0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykRE60HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykRFK0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_UykRFa0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykRFq0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </avgLengthWithBlankNullIndicator>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RowCountIndicator" xmi:id="_UykRF60HEfCdr4B5bHeijA" count="91" computed="true">
        <parameters xmi:id="_UykRGK0HEfCdr4B5bHeijA"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldkK0DEfCdr4B5bHeijA"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Row_Count_0.1.definition#_ccFOkBF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykRGa0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; " language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_UykRGq0HEfCdr4B5bHeijA" name="Row Count" label="Row Count">
          <taggedValue xmi:id="_UykRG60HEfCdr4B5bHeijA" tag="Description" value="counts the number of rows"/>
          <taggedValue xmi:id="_UykRHK0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the number of records"/>
          <sqlGenericExpression xmi:id="_UykRHa0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:NullCountIndicator" xmi:id="_UykRHq0HEfCdr4B5bHeijA" count="91" computed="true">
        <parameters xmi:id="_UykRH60HEfCdr4B5bHeijA"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldkK0DEfCdr4B5bHeijA"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Null_Count_0.1.definition#_GrAeADh9Ed2XmO7pl5Yuyg"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykRIK0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE &quot;Country&quot; IS NULL " language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_UykRIa0HEfCdr4B5bHeijA" name="Null Count" label="Null Count">
          <taggedValue xmi:id="_UykRIq0HEfCdr4B5bHeijA" tag="Purpose" value="evaluate the number of missing data (null records)"/>
          <taggedValue xmi:id="_UykRI60HEfCdr4B5bHeijA" tag="Description" value="counts the number of null rows"/>
          <sqlGenericExpression xmi:id="_UykRJK0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE &lt;%=__COLUMN_NAMES__%> IS NULL &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:DistinctCountIndicator" xmi:id="_UykRJa0HEfCdr4B5bHeijA" count="91" computed="true" distinctValueCount="21">
        <parameters xmi:id="_UykRJq0HEfCdr4B5bHeijA"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldkK0DEfCdr4B5bHeijA"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Distinct_Count_0.1.definition#_ccHq0BF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykRJ60HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT DISTINCT &quot;Country&quot; FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; ) A" language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_UykRKK0HEfCdr4B5bHeijA" name="Distinct Count" label="Distinct Count">
          <taggedValue xmi:id="_UykRKa0HEfCdr4B5bHeijA" tag="Description" value="counts the number of distinct rows (like a &quot;SELECT DISTINCT&quot; SQL statement)"/>
          <taggedValue xmi:id="_UykRKq0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the number of distinct records"/>
          <sqlGenericExpression xmi:id="_UykRK60HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT DISTINCT &lt;%=__COLUMN_NAMES__%> FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>) A" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:UniqueCountIndicator" xmi:id="_UykRLK0HEfCdr4B5bHeijA" count="91" computed="true" uniqueValueCount="3">
        <parameters xmi:id="_UykRLa0HEfCdr4B5bHeijA"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldkK0DEfCdr4B5bHeijA"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Unique_Count_0.1.definition#_ccHq0RF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykRLq0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &quot;Country&quot;, COUNT(*) mycount FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot;  GROUP BY &quot;Country&quot; HAVING COUNT(*) = 1) AS myquery" language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_UykRL60HEfCdr4B5bHeijA" name="Unique Count" label="Unique Count">
          <taggedValue xmi:id="_UykRMK0HEfCdr4B5bHeijA" tag="Description" value="counts the number of unique rows (i.e. distinct rows with only one instance: rows that are not duplicated)"/>
          <taggedValue xmi:id="_UykRMa0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the number of unique records"/>
          <sqlGenericExpression xmi:id="_UykRMq0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="SQL"/>
          <sqlGenericExpression xmi:id="_UykRM60HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount = 1) AS myquery" language="MySQL"/>
          <sqlGenericExpression xmi:id="_UykRNK0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) myquery" language="Oracle"/>
          <sqlGenericExpression xmi:id="_UykRNa0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount = 1) AS myquery" language="Teradata"/>
          <sqlGenericExpression xmi:id="_UykRNq0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_UykRN60HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_UykROK0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1)  myquery" language="Hive" version=""/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:DuplicateCountIndicator" xmi:id="_UykROa0HEfCdr4B5bHeijA" count="91" computed="true" duplicateValueCount="18">
        <parameters xmi:id="_UykROq0HEfCdr4B5bHeijA"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldkK0DEfCdr4B5bHeijA"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Duplicate_Count_0.1.definition#_ccHq0hF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykRO60HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &quot;Country&quot;, COUNT(*) mycount FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot;  m  GROUP BY &quot;Country&quot; HAVING COUNT(*) > 1) myquery" language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_UykRPK0HEfCdr4B5bHeijA" name="Duplicate Count" label="Duplicate Count">
          <taggedValue xmi:id="_UykRPa0HEfCdr4B5bHeijA" tag="Description" value="counts the number of duplicate rows. This number and the number of unique data equals the number of distinct rows"/>
          <taggedValue xmi:id="_UykRPq0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the number of duplicated records"/>
          <sqlGenericExpression xmi:id="_UykRP60HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) AS myquery" language="SQL"/>
          <sqlGenericExpression xmi:id="_UykRQK0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount > 1) AS myquery" language="MySQL"/>
          <sqlGenericExpression xmi:id="_UykRQa0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Oracle"/>
          <sqlGenericExpression xmi:id="_UykRQq0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount > 1) AS myquery" language="Teradata"/>
          <sqlGenericExpression xmi:id="_UykRQ60HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_UykRRK0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) AS myquery" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_UykRRa0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Hive"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:BlankCountIndicator" xmi:id="_UykRRq0HEfCdr4B5bHeijA" count="91" computed="true">
        <parameters xmi:id="_UykRR60HEfCdr4B5bHeijA"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldkK0DEfCdr4B5bHeijA"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Blank_Count_0.1.definition#_ccHq0xF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykRSK0HEfCdr4B5bHeijA" body="SELECT COUNT(&quot;Country&quot;) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot;  WHERE LTRIM(RTRIM(&quot;Country&quot;)) = '' " language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_UykRSa0HEfCdr4B5bHeijA" name="Blank Count" label="Blank Count">
          <taggedValue xmi:id="_UykRSq0HEfCdr4B5bHeijA" tag="Description" value="counts the number of blank rows. A blank is a non null textual data that contains only white spaces (or nothing). Note that Oracle does not distinguish between the empty string and the null value"/>
          <taggedValue xmi:id="_UykRS60HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the number of blank records"/>
          <sqlGenericExpression xmi:id="_UykRTK0HEfCdr4B5bHeijA" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE TRIM(&lt;%=__COLUMN_NAMES__%>) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_UykRTa0HEfCdr4B5bHeijA" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE TRIM(&lt;%=__COLUMN_NAMES__%>) IS NULL &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_UykRTq0HEfCdr4B5bHeijA" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_UykRT60HEfCdr4B5bHeijA" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_UykRUK0HEfCdr4B5bHeijA" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> = '' or RTRIM(LTRIM(&lt;%=__COLUMN_NAMES__%>)) = '') &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:TextIndicator" xmi:id="_UykRUa0HEfCdr4B5bHeijA">
        <parameters xmi:id="_UykRUq0HEfCdr4B5bHeijA"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldkK0DEfCdr4B5bHeijA"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Text_Statistics_0.1.definition#_yb9x0zh8Ed2XmO7pl5Yuyg"/>
        <averageLengthIndicator xmi:id="_UykwcK0HEfCdr4B5bHeijA" count="91" computed="true" sumLength="526.0">
          <parameters xmi:id="_Uykwca0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_Uykwcq0HEfCdr4B5bHeijA" useBlank="false"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldkK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_0.1.definition#_ccIR4BF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_Uykwc60HEfCdr4B5bHeijA" body="SELECT SUM(LEN(&quot;Country&quot;)), COUNT(&quot;Country&quot;) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (&quot;Country&quot; IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &quot;Country&quot; IS NULL  THEN 'NULL TALEND' ELSE &quot;Country&quot; END)) &lt;> '' ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykwdK0HEfCdr4B5bHeijA" name="Average Length" label="Average Length">
            <taggedValue xmi:id="_Uykwda0HEfCdr4B5bHeijA" tag="Description" value="computes the average length of the field. Does not take into account the null and blank values when computing the average length."/>
            <taggedValue xmi:id="_Uykwdq0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the average length of the textual record of non-null and non-blank values"/>
            <sqlGenericExpression xmi:id="_Uykwd60HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykweK0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_Uykwea0HEfCdr4B5bHeijA" body="SELECT SUM(LEN(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_Uykweq0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_Uykwe60HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykwfK0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_Uykwfa0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_Uykwfq0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_Uykwf60HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )), COUNT( &lt;%=__COLUMN_NAMES__%> ) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykwgK0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_Uykwga0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_Uykwgq0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_Uykwg60HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </averageLengthIndicator>
        <maxLengthIndicator xmi:id="_UykwhK0HEfCdr4B5bHeijA" computed="true" length="11">
          <parameters xmi:id="_Uykwha0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_Uykwhq0HEfCdr4B5bHeijA" useBlank="false"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldkK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_0.1.definition#_ccHq1RF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_Uykwh60HEfCdr4B5bHeijA" body="SELECT MAX(LEN(&quot;Country&quot;)) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (&quot;Country&quot; IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &quot;Country&quot; IS NULL  THEN 'NULL TALEND' ELSE &quot;Country&quot; END)) &lt;> '' ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykwiK0HEfCdr4B5bHeijA" name="Maximal Length" label="Maximal Length">
            <taggedValue xmi:id="_Uykwia0HEfCdr4B5bHeijA" tag="Description" value="computes the maximal length of a text field. Does not take into account the null and blank values when computing the maximal length."/>
            <taggedValue xmi:id="_Uykwiq0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the length of the longest textual record of non-null and non-blank values"/>
            <sqlGenericExpression xmi:id="_Uykwi60HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykwjK0HEfCdr4B5bHeijA" body="SELECT MAX( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle" modificationDate=""/>
            <sqlGenericExpression xmi:id="_Uykwja0HEfCdr4B5bHeijA" body="SELECT MAX(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_Uykwjq0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_Uykwj60HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykwkK0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive" modificationDate=""/>
            <sqlGenericExpression xmi:id="_Uykwka0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_Uykwkq0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' )  &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_Uykwk60HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykwlK0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_Uykwla0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_Uykwlq0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_Uykwl60HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </maxLengthIndicator>
        <minLengthIndicator xmi:id="_UykwmK0HEfCdr4B5bHeijA" computed="true" length="2">
          <parameters xmi:id="_Uykwma0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_Uykwmq0HEfCdr4B5bHeijA" useBlank="false"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldkK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_0.1.definition#_ccHq1BF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_Uykwm60HEfCdr4B5bHeijA" body="SELECT MIN(LEN(&quot;Country&quot;)) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (&quot;Country&quot; IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &quot;Country&quot; IS NULL  THEN 'NULL TALEND' ELSE &quot;Country&quot; END)) &lt;> '' ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykwnK0HEfCdr4B5bHeijA" name="Minimal Length" label="Minimal Length">
            <taggedValue xmi:id="_Uykwna0HEfCdr4B5bHeijA" tag="Description" value="computes the minimal length of a text field. Does not take into account the null and blank values when computing the minimal length."/>
            <taggedValue xmi:id="_Uykwnq0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the length of the smallest textual record of non-null and non-blank values"/>
            <sqlGenericExpression xmi:id="_Uykwn60HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykwoK0HEfCdr4B5bHeijA" body="SELECT MIN( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_Uykwoa0HEfCdr4B5bHeijA" body="SELECT MIN(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_Uykwoq0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_Uykwo60HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykwpK0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_Uykwpa0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_Uykwpq0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_Uykwp60HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykwqK0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (1=1) AND (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_Uykwqa0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_Uykwqq0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_Uykwq60HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </minLengthIndicator>
        <minLengthWithBlankIndicator xmi:id="_UykwrK0HEfCdr4B5bHeijA" computed="true" length="2">
          <parameters xmi:id="_Uykwra0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_Uykwrq0HEfCdr4B5bHeijA"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldkK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Blank_0.1.definition#_G4EzQZU9Ed-Y15ulK_jijQ"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_Uykwr60HEfCdr4B5bHeijA" body="SELECT MIN(LEN(&quot;Country&quot;)) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (&quot;Country&quot; IS NOT NULL ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykwsK0HEfCdr4B5bHeijA" name="Minimal Length With Blank" label="Minimal Length With Blank">
            <taggedValue xmi:id="_Uykwsa0HEfCdr4B5bHeijA" tag="Description" value="computes the minimal length of a text field. Does not take into account the null values when computing the minimal length."/>
            <taggedValue xmi:id="_Uykwsq0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the length of the smallest textual record of non-null values"/>
            <sqlGenericExpression xmi:id="_Uykws60HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykwtK0HEfCdr4B5bHeijA" body="SELECT MIN( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_Uykwta0HEfCdr4B5bHeijA" body="SELECT MIN(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_Uykwtq0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_Uykwt60HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykwuK0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_Uykwua0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_Uykwuq0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_Uykwu60HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykwvK0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_Uykwva0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_Uykwvq0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </minLengthWithBlankIndicator>
        <minLengthWithNullIndicator xmi:id="_Uykwv60HEfCdr4B5bHeijA" computed="true" length="2">
          <parameters xmi:id="_UykwwK0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_Uykwwa0HEfCdr4B5bHeijA" useBlank="false" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldkK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Null_0.1.definition#_a4KsoI1qEd-xwI2imLgHRA"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_Uykwwq0HEfCdr4B5bHeijA" body="SELECT MIN(LEN(CASE WHEN &quot;Country&quot; IS NULL  THEN '' ELSE &quot;Country&quot; END)) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (LTRIM(RTRIM(CASE WHEN &quot;Country&quot; IS NULL  THEN 'NULL TALEND' ELSE &quot;Country&quot; END)) &lt;> '' ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_Uykww60HEfCdr4B5bHeijA" name="Minimal Length With Null" label="Minimal Length With Null">
            <taggedValue xmi:id="_UykwxK0HEfCdr4B5bHeijA" tag="Description" value="computes the minimal length of a text field. Does not take into account the blank values when computing the minimal length."/>
            <taggedValue xmi:id="_Uykwxa0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the length of the smallest textual record of non-blank values"/>
            <sqlGenericExpression xmi:id="_Uykwxq0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_Uykwx60HEfCdr4B5bHeijA" body="SELECT MIN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykwyK0HEfCdr4B5bHeijA" body="SELECT MIN(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_Uykwya0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_Uykwyq0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_Uykwy60HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_UykwzK0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_Uykwza0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_Uykwzq0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_Uykwz60HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_Uykw0K0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_Uykw0a0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_Uykw0q0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </minLengthWithNullIndicator>
        <minLengthWithBlankNullIndicator xmi:id="_Uykw060HEfCdr4B5bHeijA" computed="true" length="2">
          <parameters xmi:id="_Uykw1K0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_Uykw1a0HEfCdr4B5bHeijA" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldkK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Blank_and_Null_0.1.definition#_9HDjMJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_Uykw1q0HEfCdr4B5bHeijA" body="SELECT MIN(LEN(CASE WHEN &quot;Country&quot; IS NULL  THEN '' ELSE &quot;Country&quot; END)) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_Uykw160HEfCdr4B5bHeijA" name="Minimal Length With Blank and Null" label="Minimal Length With Blank and Null">
            <taggedValue xmi:id="_Uykw2K0HEfCdr4B5bHeijA" tag="Description" value="computes the minimal length of a text field."/>
            <taggedValue xmi:id="_Uykw2a0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the length of the smallest textual record"/>
            <sqlGenericExpression xmi:id="_Uykw2q0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_Uykw260HEfCdr4B5bHeijA" body="SELECT MIN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_Uykw3K0HEfCdr4B5bHeijA" body="SELECT MIN(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_Uykw3a0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_Uykw3q0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_Uykw360HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_Uykw4K0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_Uykw4a0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_Uykw4q0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_Uykw460HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_Uykw5K0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_Uykw5a0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_Uykw5q0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </minLengthWithBlankNullIndicator>
        <maxLengthWithBlankIndicator xmi:id="_Uykw560HEfCdr4B5bHeijA" computed="true" length="11">
          <parameters xmi:id="_Uykw6K0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_Uykw6a0HEfCdr4B5bHeijA"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldkK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Blank_0.1.definition#_-xmZcJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_Uykw6q0HEfCdr4B5bHeijA" body="SELECT MAX(LEN(&quot;Country&quot;)) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (&quot;Country&quot; IS NOT NULL ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_Uykw660HEfCdr4B5bHeijA" name="Maximal Length With Blank" label="Maximal Length With Blank">
            <taggedValue xmi:id="_Uykw7K0HEfCdr4B5bHeijA" tag="Description" value="computes the maximal length of a text field. Does not take into account the null values when computing the maximal length."/>
            <taggedValue xmi:id="_Uykw7a0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the length of the longest textual record of non-null values"/>
            <sqlGenericExpression xmi:id="_Uykw7q0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_Uykw760HEfCdr4B5bHeijA" body="SELECT MAX( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_Uykw8K0HEfCdr4B5bHeijA" body="SELECT MAX(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_Uykw8a0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_Uykw8q0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_Uykw860HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_Uykw9K0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_Uykw9a0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_Uykw9q0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_Uykw960HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_Uykw-K0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_Uykw-a0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </maxLengthWithBlankIndicator>
        <maxLengthWithNullIndicator xmi:id="_Uykw-q0HEfCdr4B5bHeijA" computed="true" length="11">
          <parameters xmi:id="_Uykw-60HEfCdr4B5bHeijA">
            <textParameter xmi:id="_Uykw_K0HEfCdr4B5bHeijA" useBlank="false" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldkK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Null_0.1.definition#_-_UFUJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_Uykw_a0HEfCdr4B5bHeijA" body="SELECT MAX(LEN(CASE WHEN &quot;Country&quot; IS NULL  THEN '' ELSE &quot;Country&quot; END)) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (LTRIM(RTRIM(CASE WHEN &quot;Country&quot; IS NULL  THEN 'NULL TALEND' ELSE &quot;Country&quot; END)) &lt;> '' ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_Uykw_q0HEfCdr4B5bHeijA" name="Maximal Length With Null" label="Maximal Length With Null">
            <taggedValue xmi:id="_Uykw_60HEfCdr4B5bHeijA" tag="Description" value="computes the maximal length of a text field. Does not take into account the blank values when computing the maximal length."/>
            <taggedValue xmi:id="_UykxAK0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the length of the longest textual record of non-blank values"/>
            <sqlGenericExpression xmi:id="_UykxAa0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykxAq0HEfCdr4B5bHeijA" body="SELECT MAX(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykxA60HEfCdr4B5bHeijA" body="SELECT MAX(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykxBK0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykxBa0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykxBq0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive" version=""/>
            <sqlGenericExpression xmi:id="_UykxB60HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykxCK0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykxCa0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykxCq0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykxC60HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_UykxDK0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykxDa0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </maxLengthWithNullIndicator>
        <maxLengthWithBlankNullIndicator xmi:id="_UykxDq0HEfCdr4B5bHeijA" computed="true" length="11">
          <parameters xmi:id="_UykxD60HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykxEK0HEfCdr4B5bHeijA" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldkK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Blank_and_Null_0.1.definition#_-hzp8JSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykxEa0HEfCdr4B5bHeijA" body="SELECT MAX(LEN(CASE WHEN &quot;Country&quot; IS NULL  THEN '' ELSE &quot;Country&quot; END)) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykxEq0HEfCdr4B5bHeijA" name="Maximal Length With Blank and Null" label="Maximal Length With Blank and Null">
            <taggedValue xmi:id="_UykxE60HEfCdr4B5bHeijA" tag="Description" value="computes the maximal length of a text field."/>
            <taggedValue xmi:id="_UykxFK0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the length of the longest textual record"/>
            <sqlGenericExpression xmi:id="_UykxFa0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykxFq0HEfCdr4B5bHeijA" body="SELECT MAX(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykxF60HEfCdr4B5bHeijA" body="SELECT MAX(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykxGK0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykxGa0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykxGq0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_UykxG60HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykxHK0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykxHa0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykxHq0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykxH60HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_UykxIK0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykxIa0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </maxLengthWithBlankNullIndicator>
        <avgLengthWithBlankIndicator xmi:id="_UykxIq0HEfCdr4B5bHeijA" count="91" computed="true" sumLength="526.0">
          <parameters xmi:id="_UykxI60HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykxJK0HEfCdr4B5bHeijA"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldkK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Blank_0.1.definition#__gPoIJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykxJa0HEfCdr4B5bHeijA" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM(&quot;Country&quot;)) )=0  THEN '' ELSE  &quot;Country&quot; END)), COUNT(*) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (&quot;Country&quot; IS NOT NULL ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykxJq0HEfCdr4B5bHeijA" name="Average Length With Blank" label="Average Length With Blank">
            <taggedValue xmi:id="_UykxJ60HEfCdr4B5bHeijA" tag="Description" value="computes the average length of the field. Does not take into account the null values when computing the average length."/>
            <taggedValue xmi:id="_UykxKK0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the average length of the textual record of non-null values"/>
            <sqlGenericExpression xmi:id="_UykxKa0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykxKq0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykxK60HEfCdr4B5bHeijA" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) )=0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykxLK0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykxLa0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykxLq0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_UykxL60HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykxMK0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykxMa0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykxMq0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykxM60HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykxNK0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </avgLengthWithBlankIndicator>
        <avgLengthWithNullIndicator xmi:id="_UykxNa0HEfCdr4B5bHeijA" count="91" computed="true" sumLength="526.0">
          <parameters xmi:id="_UykxNq0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykxN60HEfCdr4B5bHeijA" useBlank="false" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldkK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Null_0.1.definition#__vI_wJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykxOK0HEfCdr4B5bHeijA" body="SELECT SUM(LEN(CASE WHEN &quot;Country&quot; IS NULL  THEN '' ELSE &quot;Country&quot; END)), COUNT(*) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (LTRIM(RTRIM(CASE WHEN &quot;Country&quot; IS NULL  THEN 'NULL TALEND' ELSE &quot;Country&quot; END)) &lt;> '' ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykxOa0HEfCdr4B5bHeijA" name="Average Length With Null" label="Average Length With Null">
            <taggedValue xmi:id="_UykxOq0HEfCdr4B5bHeijA" tag="Description" value="computes the average length of the field. Does not take into account the blank values when computing the average length."/>
            <taggedValue xmi:id="_UykxO60HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the average length of the textual record of non-blank values"/>
            <sqlGenericExpression xmi:id="_UykxPK0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykxPa0HEfCdr4B5bHeijA" body="SELECT SUM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykxPq0HEfCdr4B5bHeijA" body="SELECT SUM(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykxP60HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykxQK0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykxQa0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_UykxQq0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykxQ60HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykxRK0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykxRa0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykxRq0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_UykxR60HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykxSK0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </avgLengthWithNullIndicator>
        <avgLengthWithBlankNullIndicator xmi:id="_UykxSa0HEfCdr4B5bHeijA" count="91" computed="true" sumLength="526.0">
          <parameters xmi:id="_UykxSq0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykxS60HEfCdr4B5bHeijA" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldkK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Blank_and_Null_0.1.definition#__TbUIJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykxTK0HEfCdr4B5bHeijA" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM( CASE WHEN &quot;Country&quot; IS NULL  THEN '' ELSE &quot;Country&quot; END )) )=0  THEN '' ELSE   CASE WHEN &quot;Country&quot; IS NULL  THEN '' ELSE &quot;Country&quot; END  END)), COUNT(*) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykxTa0HEfCdr4B5bHeijA" name="Average Length With Blank and Null" label="Average Length With Blank and Null">
            <taggedValue xmi:id="_UykxTq0HEfCdr4B5bHeijA" tag="Description" value="computes the average length of the field."/>
            <taggedValue xmi:id="_UykxT60HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the average length of the textual record"/>
            <sqlGenericExpression xmi:id="_UykxUK0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykxUa0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykxUq0HEfCdr4B5bHeijA" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) )=0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykxU60HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykxVK0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykxVa0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_UykxVq0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykxV60HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykxWK0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykxWa0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykxWq0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_UykxW60HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykxXK0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </avgLengthWithBlankNullIndicator>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RowCountIndicator" xmi:id="_UykxXa0HEfCdr4B5bHeijA" count="91" computed="true">
        <parameters xmi:id="_UykxXq0HEfCdr4B5bHeijA"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldlK0DEfCdr4B5bHeijA"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Row_Count_0.1.definition#_ccFOkBF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykxX60HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; " language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_UykxYK0HEfCdr4B5bHeijA" name="Row Count" label="Row Count">
          <taggedValue xmi:id="_UykxYa0HEfCdr4B5bHeijA" tag="Description" value="counts the number of rows"/>
          <taggedValue xmi:id="_UykxYq0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the number of records"/>
          <sqlGenericExpression xmi:id="_UykxY60HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:NullCountIndicator" xmi:id="_UykxZK0HEfCdr4B5bHeijA" count="91" computed="true">
        <parameters xmi:id="_UykxZa0HEfCdr4B5bHeijA"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldlK0DEfCdr4B5bHeijA"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Null_Count_0.1.definition#_GrAeADh9Ed2XmO7pl5Yuyg"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykxZq0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE &quot;Phone&quot; IS NULL " language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_UykxZ60HEfCdr4B5bHeijA" name="Null Count" label="Null Count">
          <taggedValue xmi:id="_UykxaK0HEfCdr4B5bHeijA" tag="Purpose" value="evaluate the number of missing data (null records)"/>
          <taggedValue xmi:id="_Uykxaa0HEfCdr4B5bHeijA" tag="Description" value="counts the number of null rows"/>
          <sqlGenericExpression xmi:id="_Uykxaq0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE &lt;%=__COLUMN_NAMES__%> IS NULL &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:DistinctCountIndicator" xmi:id="_Uykxa60HEfCdr4B5bHeijA" count="91" computed="true" distinctValueCount="91">
        <parameters xmi:id="_UykxbK0HEfCdr4B5bHeijA"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldlK0DEfCdr4B5bHeijA"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Distinct_Count_0.1.definition#_ccHq0BF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_Uykxba0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT DISTINCT &quot;Phone&quot; FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; ) A" language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_Uykxbq0HEfCdr4B5bHeijA" name="Distinct Count" label="Distinct Count">
          <taggedValue xmi:id="_Uykxb60HEfCdr4B5bHeijA" tag="Description" value="counts the number of distinct rows (like a &quot;SELECT DISTINCT&quot; SQL statement)"/>
          <taggedValue xmi:id="_UykxcK0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the number of distinct records"/>
          <sqlGenericExpression xmi:id="_Uykxca0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT DISTINCT &lt;%=__COLUMN_NAMES__%> FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>) A" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:UniqueCountIndicator" xmi:id="_Uykxcq0HEfCdr4B5bHeijA" count="91" computed="true" uniqueValueCount="91">
        <parameters xmi:id="_Uykxc60HEfCdr4B5bHeijA"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldlK0DEfCdr4B5bHeijA"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Unique_Count_0.1.definition#_ccHq0RF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykxdK0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &quot;Phone&quot;, COUNT(*) mycount FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot;  GROUP BY &quot;Phone&quot; HAVING COUNT(*) = 1) AS myquery" language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_Uykxda0HEfCdr4B5bHeijA" name="Unique Count" label="Unique Count">
          <taggedValue xmi:id="_Uykxdq0HEfCdr4B5bHeijA" tag="Description" value="counts the number of unique rows (i.e. distinct rows with only one instance: rows that are not duplicated)"/>
          <taggedValue xmi:id="_Uykxd60HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the number of unique records"/>
          <sqlGenericExpression xmi:id="_UykxeK0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="SQL"/>
          <sqlGenericExpression xmi:id="_Uykxea0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount = 1) AS myquery" language="MySQL"/>
          <sqlGenericExpression xmi:id="_Uykxeq0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) myquery" language="Oracle"/>
          <sqlGenericExpression xmi:id="_Uykxe60HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount = 1) AS myquery" language="Teradata"/>
          <sqlGenericExpression xmi:id="_UykxfK0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_Uykxfa0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_Uykxfq0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1)  myquery" language="Hive" version=""/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:DuplicateCountIndicator" xmi:id="_Uykxf60HEfCdr4B5bHeijA" count="91" computed="true" duplicateValueCount="0">
        <parameters xmi:id="_UykxgK0HEfCdr4B5bHeijA"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldlK0DEfCdr4B5bHeijA"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Duplicate_Count_0.1.definition#_ccHq0hF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_Uykxga0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &quot;Phone&quot;, COUNT(*) mycount FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot;  m  GROUP BY &quot;Phone&quot; HAVING COUNT(*) > 1) myquery" language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_Uykxgq0HEfCdr4B5bHeijA" name="Duplicate Count" label="Duplicate Count">
          <taggedValue xmi:id="_Uykxg60HEfCdr4B5bHeijA" tag="Description" value="counts the number of duplicate rows. This number and the number of unique data equals the number of distinct rows"/>
          <taggedValue xmi:id="_UykxhK0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the number of duplicated records"/>
          <sqlGenericExpression xmi:id="_Uykxha0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) AS myquery" language="SQL"/>
          <sqlGenericExpression xmi:id="_Uykxhq0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount > 1) AS myquery" language="MySQL"/>
          <sqlGenericExpression xmi:id="_Uykxh60HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Oracle"/>
          <sqlGenericExpression xmi:id="_UykxiK0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount > 1) AS myquery" language="Teradata"/>
          <sqlGenericExpression xmi:id="_Uykxia0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_Uykxiq0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) AS myquery" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_Uykxi60HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Hive"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:BlankCountIndicator" xmi:id="_UykxjK0HEfCdr4B5bHeijA" count="91" computed="true">
        <parameters xmi:id="_Uykxja0HEfCdr4B5bHeijA"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldlK0DEfCdr4B5bHeijA"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Blank_Count_0.1.definition#_ccHq0xF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_Uykxjq0HEfCdr4B5bHeijA" body="SELECT COUNT(&quot;Phone&quot;) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot;  WHERE LTRIM(RTRIM(&quot;Phone&quot;)) = '' " language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_Uykxj60HEfCdr4B5bHeijA" name="Blank Count" label="Blank Count">
          <taggedValue xmi:id="_UykxkK0HEfCdr4B5bHeijA" tag="Description" value="counts the number of blank rows. A blank is a non null textual data that contains only white spaces (or nothing). Note that Oracle does not distinguish between the empty string and the null value"/>
          <taggedValue xmi:id="_Uykxka0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the number of blank records"/>
          <sqlGenericExpression xmi:id="_Uykxkq0HEfCdr4B5bHeijA" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE TRIM(&lt;%=__COLUMN_NAMES__%>) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_Uykxk60HEfCdr4B5bHeijA" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE TRIM(&lt;%=__COLUMN_NAMES__%>) IS NULL &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_UykxlK0HEfCdr4B5bHeijA" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_Uykxla0HEfCdr4B5bHeijA" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_Uykxlq0HEfCdr4B5bHeijA" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> = '' or RTRIM(LTRIM(&lt;%=__COLUMN_NAMES__%>)) = '') &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:TextIndicator" xmi:id="_Uykxl60HEfCdr4B5bHeijA">
        <parameters xmi:id="_UykxmK0HEfCdr4B5bHeijA"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldlK0DEfCdr4B5bHeijA"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Text_Statistics_0.1.definition#_yb9x0zh8Ed2XmO7pl5Yuyg"/>
        <averageLengthIndicator xmi:id="_Uykxma0HEfCdr4B5bHeijA" count="91" computed="true" sumLength="1128.0">
          <parameters xmi:id="_Uykxmq0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_Uykxm60HEfCdr4B5bHeijA" useBlank="false"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldlK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_0.1.definition#_ccIR4BF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykxnK0HEfCdr4B5bHeijA" body="SELECT SUM(LEN(&quot;Phone&quot;)), COUNT(&quot;Phone&quot;) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (&quot;Phone&quot; IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &quot;Phone&quot; IS NULL  THEN 'NULL TALEND' ELSE &quot;Phone&quot; END)) &lt;> '' ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_Uykxna0HEfCdr4B5bHeijA" name="Average Length" label="Average Length">
            <taggedValue xmi:id="_Uykxnq0HEfCdr4B5bHeijA" tag="Description" value="computes the average length of the field. Does not take into account the null and blank values when computing the average length."/>
            <taggedValue xmi:id="_Uykxn60HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the average length of the textual record of non-null and non-blank values"/>
            <sqlGenericExpression xmi:id="_UykxoK0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_Uykxoa0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_Uykxoq0HEfCdr4B5bHeijA" body="SELECT SUM(LEN(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_Uykxo60HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykxpK0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_Uykxpa0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_Uykxpq0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_Uykxp60HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykxqK0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )), COUNT( &lt;%=__COLUMN_NAMES__%> ) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_Uykxqa0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_Uykxqq0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_Uykxq60HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykxrK0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </averageLengthIndicator>
        <maxLengthIndicator xmi:id="_Uykxra0HEfCdr4B5bHeijA" computed="true" length="17">
          <parameters xmi:id="_Uykxrq0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_Uykxr60HEfCdr4B5bHeijA" useBlank="false"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldlK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_0.1.definition#_ccHq1RF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykxsK0HEfCdr4B5bHeijA" body="SELECT MAX(LEN(&quot;Phone&quot;)) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (&quot;Phone&quot; IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &quot;Phone&quot; IS NULL  THEN 'NULL TALEND' ELSE &quot;Phone&quot; END)) &lt;> '' ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_Uykxsa0HEfCdr4B5bHeijA" name="Maximal Length" label="Maximal Length">
            <taggedValue xmi:id="_Uykxsq0HEfCdr4B5bHeijA" tag="Description" value="computes the maximal length of a text field. Does not take into account the null and blank values when computing the maximal length."/>
            <taggedValue xmi:id="_Uykxs60HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the length of the longest textual record of non-null and non-blank values"/>
            <sqlGenericExpression xmi:id="_UykxtK0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_Uykxta0HEfCdr4B5bHeijA" body="SELECT MAX( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle" modificationDate=""/>
            <sqlGenericExpression xmi:id="_Uykxtq0HEfCdr4B5bHeijA" body="SELECT MAX(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_Uykxt60HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykxuK0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_Uykxua0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive" modificationDate=""/>
            <sqlGenericExpression xmi:id="_Uykxuq0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_Uykxu60HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' )  &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykxvK0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_Uykxva0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_Uykxvq0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_Uykxv60HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykxwK0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </maxLengthIndicator>
        <minLengthIndicator xmi:id="_Uykxwa0HEfCdr4B5bHeijA" computed="true" length="8">
          <parameters xmi:id="_Uykxwq0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_Uykxw60HEfCdr4B5bHeijA" useBlank="false"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldlK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_0.1.definition#_ccHq1BF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykxxK0HEfCdr4B5bHeijA" body="SELECT MIN(LEN(&quot;Phone&quot;)) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (&quot;Phone&quot; IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &quot;Phone&quot; IS NULL  THEN 'NULL TALEND' ELSE &quot;Phone&quot; END)) &lt;> '' ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_Uykxxa0HEfCdr4B5bHeijA" name="Minimal Length" label="Minimal Length">
            <taggedValue xmi:id="_Uykxxq0HEfCdr4B5bHeijA" tag="Description" value="computes the minimal length of a text field. Does not take into account the null and blank values when computing the minimal length."/>
            <taggedValue xmi:id="_Uykxx60HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the length of the smallest textual record of non-null and non-blank values"/>
            <sqlGenericExpression xmi:id="_UykxyK0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_Uykxya0HEfCdr4B5bHeijA" body="SELECT MIN( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_Uykxyq0HEfCdr4B5bHeijA" body="SELECT MIN(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_Uykxy60HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykxzK0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_Uykxza0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_Uykxzq0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_Uykxz60HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_Uykx0K0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_Uykx0a0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (1=1) AND (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_Uykx0q0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_Uykx060HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_Uykx1K0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </minLengthIndicator>
        <minLengthWithBlankIndicator xmi:id="_Uykx1a0HEfCdr4B5bHeijA" computed="true" length="8">
          <parameters xmi:id="_Uykx1q0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_Uykx160HEfCdr4B5bHeijA"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldlK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Blank_0.1.definition#_G4EzQZU9Ed-Y15ulK_jijQ"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_Uykx2K0HEfCdr4B5bHeijA" body="SELECT MIN(LEN(&quot;Phone&quot;)) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (&quot;Phone&quot; IS NOT NULL ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_Uykx2a0HEfCdr4B5bHeijA" name="Minimal Length With Blank" label="Minimal Length With Blank">
            <taggedValue xmi:id="_Uykx2q0HEfCdr4B5bHeijA" tag="Description" value="computes the minimal length of a text field. Does not take into account the null values when computing the minimal length."/>
            <taggedValue xmi:id="_Uykx260HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the length of the smallest textual record of non-null values"/>
            <sqlGenericExpression xmi:id="_Uykx3K0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_Uykx3a0HEfCdr4B5bHeijA" body="SELECT MIN( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_Uykx3q0HEfCdr4B5bHeijA" body="SELECT MIN(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_Uykx360HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_Uykx4K0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_Uykx4a0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_Uykx4q0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_Uykx460HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_Uykx5K0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_Uykx5a0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_Uykx5q0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_Uykx560HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </minLengthWithBlankIndicator>
        <minLengthWithNullIndicator xmi:id="_Uykx6K0HEfCdr4B5bHeijA" computed="true" length="8">
          <parameters xmi:id="_Uykx6a0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_Uykx6q0HEfCdr4B5bHeijA" useBlank="false" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldlK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Null_0.1.definition#_a4KsoI1qEd-xwI2imLgHRA"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_Uykx660HEfCdr4B5bHeijA" body="SELECT MIN(LEN(CASE WHEN &quot;Phone&quot; IS NULL  THEN '' ELSE &quot;Phone&quot; END)) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (LTRIM(RTRIM(CASE WHEN &quot;Phone&quot; IS NULL  THEN 'NULL TALEND' ELSE &quot;Phone&quot; END)) &lt;> '' ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_Uykx7K0HEfCdr4B5bHeijA" name="Minimal Length With Null" label="Minimal Length With Null">
            <taggedValue xmi:id="_Uykx7a0HEfCdr4B5bHeijA" tag="Description" value="computes the minimal length of a text field. Does not take into account the blank values when computing the minimal length."/>
            <taggedValue xmi:id="_Uykx7q0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the length of the smallest textual record of non-blank values"/>
            <sqlGenericExpression xmi:id="_Uykx760HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_Uykx8K0HEfCdr4B5bHeijA" body="SELECT MIN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_Uykx8a0HEfCdr4B5bHeijA" body="SELECT MIN(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_Uykx8q0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_Uykx860HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_Uykx9K0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_Uykx9a0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_Uykx9q0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_Uykx960HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_Uykx-K0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_Uykx-a0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_Uykx-q0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_Uykx-60HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </minLengthWithNullIndicator>
        <minLengthWithBlankNullIndicator xmi:id="_Uykx_K0HEfCdr4B5bHeijA" computed="true" length="8">
          <parameters xmi:id="_Uykx_a0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_Uykx_q0HEfCdr4B5bHeijA" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldlK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Blank_and_Null_0.1.definition#_9HDjMJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_Uykx_60HEfCdr4B5bHeijA" body="SELECT MIN(LEN(CASE WHEN &quot;Phone&quot; IS NULL  THEN '' ELSE &quot;Phone&quot; END)) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykyAK0HEfCdr4B5bHeijA" name="Minimal Length With Blank and Null" label="Minimal Length With Blank and Null">
            <taggedValue xmi:id="_UykyAa0HEfCdr4B5bHeijA" tag="Description" value="computes the minimal length of a text field."/>
            <taggedValue xmi:id="_UykyAq0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the length of the smallest textual record"/>
            <sqlGenericExpression xmi:id="_UykyA60HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykyBK0HEfCdr4B5bHeijA" body="SELECT MIN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykyBa0HEfCdr4B5bHeijA" body="SELECT MIN(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykyBq0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykyB60HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykyCK0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_UykyCa0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykyCq0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykyC60HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykyDK0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykyDa0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_UykyDq0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykyD60HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </minLengthWithBlankNullIndicator>
        <maxLengthWithBlankIndicator xmi:id="_UykyEK0HEfCdr4B5bHeijA" computed="true" length="17">
          <parameters xmi:id="_UykyEa0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykyEq0HEfCdr4B5bHeijA"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldlK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Blank_0.1.definition#_-xmZcJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykyE60HEfCdr4B5bHeijA" body="SELECT MAX(LEN(&quot;Phone&quot;)) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (&quot;Phone&quot; IS NOT NULL ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykyFK0HEfCdr4B5bHeijA" name="Maximal Length With Blank" label="Maximal Length With Blank">
            <taggedValue xmi:id="_UykyFa0HEfCdr4B5bHeijA" tag="Description" value="computes the maximal length of a text field. Does not take into account the null values when computing the maximal length."/>
            <taggedValue xmi:id="_UykyFq0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the length of the longest textual record of non-null values"/>
            <sqlGenericExpression xmi:id="_UykyF60HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykyGK0HEfCdr4B5bHeijA" body="SELECT MAX( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykyGa0HEfCdr4B5bHeijA" body="SELECT MAX(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykyGq0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykyG60HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykyHK0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_UykyHa0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykyHq0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykyH60HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykyIK0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykyIa0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykyIq0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </maxLengthWithBlankIndicator>
        <maxLengthWithNullIndicator xmi:id="_UykyI60HEfCdr4B5bHeijA" computed="true" length="17">
          <parameters xmi:id="_UykyJK0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykyJa0HEfCdr4B5bHeijA" useBlank="false" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldlK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Null_0.1.definition#_-_UFUJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykyJq0HEfCdr4B5bHeijA" body="SELECT MAX(LEN(CASE WHEN &quot;Phone&quot; IS NULL  THEN '' ELSE &quot;Phone&quot; END)) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (LTRIM(RTRIM(CASE WHEN &quot;Phone&quot; IS NULL  THEN 'NULL TALEND' ELSE &quot;Phone&quot; END)) &lt;> '' ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykyJ60HEfCdr4B5bHeijA" name="Maximal Length With Null" label="Maximal Length With Null">
            <taggedValue xmi:id="_UykyKK0HEfCdr4B5bHeijA" tag="Description" value="computes the maximal length of a text field. Does not take into account the blank values when computing the maximal length."/>
            <taggedValue xmi:id="_UykyKa0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the length of the longest textual record of non-blank values"/>
            <sqlGenericExpression xmi:id="_UykyKq0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykyK60HEfCdr4B5bHeijA" body="SELECT MAX(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykyLK0HEfCdr4B5bHeijA" body="SELECT MAX(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykyLa0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykyLq0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykyL60HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive" version=""/>
            <sqlGenericExpression xmi:id="_UykyMK0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykyMa0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykyMq0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykyM60HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykyNK0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_UykyNa0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykyNq0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </maxLengthWithNullIndicator>
        <maxLengthWithBlankNullIndicator xmi:id="_UykyN60HEfCdr4B5bHeijA" computed="true" length="17">
          <parameters xmi:id="_UykyOK0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykyOa0HEfCdr4B5bHeijA" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldlK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Blank_and_Null_0.1.definition#_-hzp8JSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykyOq0HEfCdr4B5bHeijA" body="SELECT MAX(LEN(CASE WHEN &quot;Phone&quot; IS NULL  THEN '' ELSE &quot;Phone&quot; END)) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykyO60HEfCdr4B5bHeijA" name="Maximal Length With Blank and Null" label="Maximal Length With Blank and Null">
            <taggedValue xmi:id="_UykyPK0HEfCdr4B5bHeijA" tag="Description" value="computes the maximal length of a text field."/>
            <taggedValue xmi:id="_UykyPa0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the length of the longest textual record"/>
            <sqlGenericExpression xmi:id="_UykyPq0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykyP60HEfCdr4B5bHeijA" body="SELECT MAX(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykyQK0HEfCdr4B5bHeijA" body="SELECT MAX(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykyQa0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykyQq0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykyQ60HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_UykyRK0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykyRa0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykyRq0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykyR60HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykySK0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_UykySa0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykySq0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </maxLengthWithBlankNullIndicator>
        <avgLengthWithBlankIndicator xmi:id="_UykyS60HEfCdr4B5bHeijA" count="91" computed="true" sumLength="1128.0">
          <parameters xmi:id="_UykyTK0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykyTa0HEfCdr4B5bHeijA"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldlK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Blank_0.1.definition#__gPoIJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykyTq0HEfCdr4B5bHeijA" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM(&quot;Phone&quot;)) )=0  THEN '' ELSE  &quot;Phone&quot; END)), COUNT(*) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (&quot;Phone&quot; IS NOT NULL ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykyT60HEfCdr4B5bHeijA" name="Average Length With Blank" label="Average Length With Blank">
            <taggedValue xmi:id="_UykyUK0HEfCdr4B5bHeijA" tag="Description" value="computes the average length of the field. Does not take into account the null values when computing the average length."/>
            <taggedValue xmi:id="_UykyUa0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the average length of the textual record of non-null values"/>
            <sqlGenericExpression xmi:id="_UykyUq0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykyU60HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykyVK0HEfCdr4B5bHeijA" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) )=0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykyVa0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykyVq0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykyV60HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_UykyWK0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykyWa0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykyWq0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykyW60HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykyXK0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykyXa0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </avgLengthWithBlankIndicator>
        <avgLengthWithNullIndicator xmi:id="_UykyXq0HEfCdr4B5bHeijA" count="91" computed="true" sumLength="1128.0">
          <parameters xmi:id="_UykyX60HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykyYK0HEfCdr4B5bHeijA" useBlank="false" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldlK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Null_0.1.definition#__vI_wJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykyYa0HEfCdr4B5bHeijA" body="SELECT SUM(LEN(CASE WHEN &quot;Phone&quot; IS NULL  THEN '' ELSE &quot;Phone&quot; END)), COUNT(*) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (LTRIM(RTRIM(CASE WHEN &quot;Phone&quot; IS NULL  THEN 'NULL TALEND' ELSE &quot;Phone&quot; END)) &lt;> '' ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykyYq0HEfCdr4B5bHeijA" name="Average Length With Null" label="Average Length With Null">
            <taggedValue xmi:id="_UykyY60HEfCdr4B5bHeijA" tag="Description" value="computes the average length of the field. Does not take into account the blank values when computing the average length."/>
            <taggedValue xmi:id="_UykyZK0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the average length of the textual record of non-blank values"/>
            <sqlGenericExpression xmi:id="_UykyZa0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykyZq0HEfCdr4B5bHeijA" body="SELECT SUM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykyZ60HEfCdr4B5bHeijA" body="SELECT SUM(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykyaK0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_Uykyaa0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_Uykyaq0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_Uykya60HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykybK0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_Uykyba0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_Uykybq0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_Uykyb60HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_UykycK0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_Uykyca0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </avgLengthWithNullIndicator>
        <avgLengthWithBlankNullIndicator xmi:id="_Uykycq0HEfCdr4B5bHeijA" count="91" computed="true" sumLength="1128.0">
          <parameters xmi:id="_Uykyc60HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykydK0HEfCdr4B5bHeijA" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldlK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Blank_and_Null_0.1.definition#__TbUIJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_Uykyda0HEfCdr4B5bHeijA" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM( CASE WHEN &quot;Phone&quot; IS NULL  THEN '' ELSE &quot;Phone&quot; END )) )=0  THEN '' ELSE   CASE WHEN &quot;Phone&quot; IS NULL  THEN '' ELSE &quot;Phone&quot; END  END)), COUNT(*) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_Uykydq0HEfCdr4B5bHeijA" name="Average Length With Blank and Null" label="Average Length With Blank and Null">
            <taggedValue xmi:id="_Uykyd60HEfCdr4B5bHeijA" tag="Description" value="computes the average length of the field."/>
            <taggedValue xmi:id="_UykyeK0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the average length of the textual record"/>
            <sqlGenericExpression xmi:id="_Uykyea0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_Uykyeq0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_Uykye60HEfCdr4B5bHeijA" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) )=0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykyfK0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_Uykyfa0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_Uykyfq0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_Uykyf60HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykygK0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_Uykyga0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_Uykygq0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_Uykyg60HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_UykyhK0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_Uykyha0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </avgLengthWithBlankNullIndicator>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RowCountIndicator" xmi:id="_Uykyhq0HEfCdr4B5bHeijA" count="91" computed="true">
        <parameters xmi:id="_Uykyh60HEfCdr4B5bHeijA"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldmK0DEfCdr4B5bHeijA"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Row_Count_0.1.definition#_ccFOkBF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykyiK0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; " language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_Uykyia0HEfCdr4B5bHeijA" name="Row Count" label="Row Count">
          <taggedValue xmi:id="_Uykyiq0HEfCdr4B5bHeijA" tag="Description" value="counts the number of rows"/>
          <taggedValue xmi:id="_Uykyi60HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the number of records"/>
          <sqlGenericExpression xmi:id="_UykyjK0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:NullCountIndicator" xmi:id="_Uykyja0HEfCdr4B5bHeijA" count="91" nullCount="22" computed="true">
        <parameters xmi:id="_Uykyjq0HEfCdr4B5bHeijA"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldmK0DEfCdr4B5bHeijA"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Null_Count_0.1.definition#_GrAeADh9Ed2XmO7pl5Yuyg"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_Uykyj60HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE &quot;Fax&quot; IS NULL " language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_UykykK0HEfCdr4B5bHeijA" name="Null Count" label="Null Count">
          <taggedValue xmi:id="_Uykyka0HEfCdr4B5bHeijA" tag="Purpose" value="evaluate the number of missing data (null records)"/>
          <taggedValue xmi:id="_Uykykq0HEfCdr4B5bHeijA" tag="Description" value="counts the number of null rows"/>
          <sqlGenericExpression xmi:id="_Uykyk60HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE &lt;%=__COLUMN_NAMES__%> IS NULL &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:DistinctCountIndicator" xmi:id="_UykylK0HEfCdr4B5bHeijA" count="91" nullCount="22" computed="true" distinctValueCount="70">
        <parameters xmi:id="_Uykyla0HEfCdr4B5bHeijA"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldmK0DEfCdr4B5bHeijA"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Distinct_Count_0.1.definition#_ccHq0BF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_Uykylq0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT DISTINCT &quot;Fax&quot; FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; ) A" language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_Uykyl60HEfCdr4B5bHeijA" name="Distinct Count" label="Distinct Count">
          <taggedValue xmi:id="_UykymK0HEfCdr4B5bHeijA" tag="Description" value="counts the number of distinct rows (like a &quot;SELECT DISTINCT&quot; SQL statement)"/>
          <taggedValue xmi:id="_Uykyma0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the number of distinct records"/>
          <sqlGenericExpression xmi:id="_Uykymq0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT DISTINCT &lt;%=__COLUMN_NAMES__%> FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>) A" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:UniqueCountIndicator" xmi:id="_Uykym60HEfCdr4B5bHeijA" count="91" nullCount="22" computed="true" uniqueValueCount="69">
        <parameters xmi:id="_UykynK0HEfCdr4B5bHeijA"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldmK0DEfCdr4B5bHeijA"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Unique_Count_0.1.definition#_ccHq0RF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_Uykyna0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &quot;Fax&quot;, COUNT(*) mycount FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot;  GROUP BY &quot;Fax&quot; HAVING COUNT(*) = 1) AS myquery" language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_Uykynq0HEfCdr4B5bHeijA" name="Unique Count" label="Unique Count">
          <taggedValue xmi:id="_Uykyn60HEfCdr4B5bHeijA" tag="Description" value="counts the number of unique rows (i.e. distinct rows with only one instance: rows that are not duplicated)"/>
          <taggedValue xmi:id="_UykyoK0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the number of unique records"/>
          <sqlGenericExpression xmi:id="_Uykyoa0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="SQL"/>
          <sqlGenericExpression xmi:id="_Uykyoq0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount = 1) AS myquery" language="MySQL"/>
          <sqlGenericExpression xmi:id="_Uykyo60HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) myquery" language="Oracle"/>
          <sqlGenericExpression xmi:id="_UykypK0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount = 1) AS myquery" language="Teradata"/>
          <sqlGenericExpression xmi:id="_Uykypa0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_Uykypq0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_Uykyp60HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1)  myquery" language="Hive" version=""/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:DuplicateCountIndicator" xmi:id="_UykyqK0HEfCdr4B5bHeijA" count="91" nullCount="22" computed="true" duplicateValueCount="1">
        <parameters xmi:id="_Uykyqa0HEfCdr4B5bHeijA"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldmK0DEfCdr4B5bHeijA"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Duplicate_Count_0.1.definition#_ccHq0hF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_Uykyqq0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &quot;Fax&quot;, COUNT(*) mycount FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot;  m  GROUP BY &quot;Fax&quot; HAVING COUNT(*) > 1) myquery" language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_Uykyq60HEfCdr4B5bHeijA" name="Duplicate Count" label="Duplicate Count">
          <taggedValue xmi:id="_UykyrK0HEfCdr4B5bHeijA" tag="Description" value="counts the number of duplicate rows. This number and the number of unique data equals the number of distinct rows"/>
          <taggedValue xmi:id="_Uykyra0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the number of duplicated records"/>
          <sqlGenericExpression xmi:id="_Uykyrq0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) AS myquery" language="SQL"/>
          <sqlGenericExpression xmi:id="_Uykyr60HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount > 1) AS myquery" language="MySQL"/>
          <sqlGenericExpression xmi:id="_UykysK0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Oracle"/>
          <sqlGenericExpression xmi:id="_Uykysa0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount > 1) AS myquery" language="Teradata"/>
          <sqlGenericExpression xmi:id="_Uykysq0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_Uykys60HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) AS myquery" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_UykytK0HEfCdr4B5bHeijA" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Hive"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:BlankCountIndicator" xmi:id="_Uykyta0HEfCdr4B5bHeijA" count="91" nullCount="22" computed="true">
        <parameters xmi:id="_Uykytq0HEfCdr4B5bHeijA"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldmK0DEfCdr4B5bHeijA"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Blank_Count_0.1.definition#_ccHq0xF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_Uykyt60HEfCdr4B5bHeijA" body="SELECT COUNT(&quot;Fax&quot;) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot;  WHERE LTRIM(RTRIM(&quot;Fax&quot;)) = '' " language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_UykyuK0HEfCdr4B5bHeijA" name="Blank Count" label="Blank Count">
          <taggedValue xmi:id="_Uykyua0HEfCdr4B5bHeijA" tag="Description" value="counts the number of blank rows. A blank is a non null textual data that contains only white spaces (or nothing). Note that Oracle does not distinguish between the empty string and the null value"/>
          <taggedValue xmi:id="_Uykyuq0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the number of blank records"/>
          <sqlGenericExpression xmi:id="_Uykyu60HEfCdr4B5bHeijA" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE TRIM(&lt;%=__COLUMN_NAMES__%>) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_UykyvK0HEfCdr4B5bHeijA" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE TRIM(&lt;%=__COLUMN_NAMES__%>) IS NULL &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_Uykyva0HEfCdr4B5bHeijA" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_Uykyvq0HEfCdr4B5bHeijA" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_Uykyv60HEfCdr4B5bHeijA" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> = '' or RTRIM(LTRIM(&lt;%=__COLUMN_NAMES__%>)) = '') &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:TextIndicator" xmi:id="_UykywK0HEfCdr4B5bHeijA">
        <parameters xmi:id="_Uykywa0HEfCdr4B5bHeijA"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldmK0DEfCdr4B5bHeijA"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Text_Statistics_0.1.definition#_yb9x0zh8Ed2XmO7pl5Yuyg"/>
        <averageLengthIndicator xmi:id="_Uykywq0HEfCdr4B5bHeijA" count="69" nullCount="22" computed="true" sumLength="850.0">
          <parameters xmi:id="_Uykyw60HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykyxK0HEfCdr4B5bHeijA" useBlank="false"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldmK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_0.1.definition#_ccIR4BF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_Uykyxa0HEfCdr4B5bHeijA" body="SELECT SUM(LEN(&quot;Fax&quot;)), COUNT(&quot;Fax&quot;) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (&quot;Fax&quot; IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &quot;Fax&quot; IS NULL  THEN 'NULL TALEND' ELSE &quot;Fax&quot; END)) &lt;> '' ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_Uykyxq0HEfCdr4B5bHeijA" name="Average Length" label="Average Length">
            <taggedValue xmi:id="_Uykyx60HEfCdr4B5bHeijA" tag="Description" value="computes the average length of the field. Does not take into account the null and blank values when computing the average length."/>
            <taggedValue xmi:id="_UykyyK0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the average length of the textual record of non-null and non-blank values"/>
            <sqlGenericExpression xmi:id="_Uykyya0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_Uykyyq0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_Uykyy60HEfCdr4B5bHeijA" body="SELECT SUM(LEN(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykyzK0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_Uykyza0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_Uykyzq0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_Uykyz60HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_Uyky0K0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_Uyky0a0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )), COUNT( &lt;%=__COLUMN_NAMES__%> ) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_Uyky0q0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_Uyky060HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_Uyky1K0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_Uyky1a0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </averageLengthIndicator>
        <maxLengthIndicator xmi:id="_Uyky1q0HEfCdr4B5bHeijA" nullCount="22" computed="true" length="17">
          <parameters xmi:id="_Uyky160HEfCdr4B5bHeijA">
            <textParameter xmi:id="_Uyky2K0HEfCdr4B5bHeijA" useBlank="false"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldmK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_0.1.definition#_ccHq1RF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_Uyky2a0HEfCdr4B5bHeijA" body="SELECT MAX(LEN(&quot;Fax&quot;)) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (&quot;Fax&quot; IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &quot;Fax&quot; IS NULL  THEN 'NULL TALEND' ELSE &quot;Fax&quot; END)) &lt;> '' ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_Uyky2q0HEfCdr4B5bHeijA" name="Maximal Length" label="Maximal Length">
            <taggedValue xmi:id="_Uyky260HEfCdr4B5bHeijA" tag="Description" value="computes the maximal length of a text field. Does not take into account the null and blank values when computing the maximal length."/>
            <taggedValue xmi:id="_Uyky3K0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the length of the longest textual record of non-null and non-blank values"/>
            <sqlGenericExpression xmi:id="_Uyky3a0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_Uyky3q0HEfCdr4B5bHeijA" body="SELECT MAX( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle" modificationDate=""/>
            <sqlGenericExpression xmi:id="_Uyky360HEfCdr4B5bHeijA" body="SELECT MAX(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_Uyky4K0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_Uyky4a0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_Uyky4q0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive" modificationDate=""/>
            <sqlGenericExpression xmi:id="_Uyky460HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_Uyky5K0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' )  &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_Uyky5a0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_Uyky5q0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_Uyky560HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_Uyky6K0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_Uyky6a0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </maxLengthIndicator>
        <minLengthIndicator xmi:id="_Uyky6q0HEfCdr4B5bHeijA" nullCount="22" computed="true" length="9">
          <parameters xmi:id="_Uyky660HEfCdr4B5bHeijA">
            <textParameter xmi:id="_Uyky7K0HEfCdr4B5bHeijA" useBlank="false"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldmK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_0.1.definition#_ccHq1BF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_Uyky7a0HEfCdr4B5bHeijA" body="SELECT MIN(LEN(&quot;Fax&quot;)) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (&quot;Fax&quot; IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &quot;Fax&quot; IS NULL  THEN 'NULL TALEND' ELSE &quot;Fax&quot; END)) &lt;> '' ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_Uyky7q0HEfCdr4B5bHeijA" name="Minimal Length" label="Minimal Length">
            <taggedValue xmi:id="_Uyky760HEfCdr4B5bHeijA" tag="Description" value="computes the minimal length of a text field. Does not take into account the null and blank values when computing the minimal length."/>
            <taggedValue xmi:id="_Uyky8K0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the length of the smallest textual record of non-null and non-blank values"/>
            <sqlGenericExpression xmi:id="_Uyky8a0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_Uyky8q0HEfCdr4B5bHeijA" body="SELECT MIN( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_Uyky860HEfCdr4B5bHeijA" body="SELECT MIN(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_Uyky9K0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_Uyky9a0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_Uyky9q0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_Uyky960HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_Uyky-K0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_Uyky-a0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_Uyky-q0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (1=1) AND (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_Uyky-60HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_Uyky_K0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_Uyky_a0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </minLengthIndicator>
        <minLengthWithBlankIndicator xmi:id="_Uyky_q0HEfCdr4B5bHeijA" nullCount="22" computed="true" length="9">
          <parameters xmi:id="_Uyky_60HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykzAK0HEfCdr4B5bHeijA"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldmK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Blank_0.1.definition#_G4EzQZU9Ed-Y15ulK_jijQ"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykzAa0HEfCdr4B5bHeijA" body="SELECT MIN(LEN(&quot;Fax&quot;)) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (&quot;Fax&quot; IS NOT NULL ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykzAq0HEfCdr4B5bHeijA" name="Minimal Length With Blank" label="Minimal Length With Blank">
            <taggedValue xmi:id="_UykzA60HEfCdr4B5bHeijA" tag="Description" value="computes the minimal length of a text field. Does not take into account the null values when computing the minimal length."/>
            <taggedValue xmi:id="_UykzBK0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the length of the smallest textual record of non-null values"/>
            <sqlGenericExpression xmi:id="_UykzBa0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykzBq0HEfCdr4B5bHeijA" body="SELECT MIN( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykzB60HEfCdr4B5bHeijA" body="SELECT MIN(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykzCK0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykzCa0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykzCq0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_UykzC60HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykzDK0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykzDa0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykzDq0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykzD60HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykzEK0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </minLengthWithBlankIndicator>
        <minLengthWithNullIndicator xmi:id="_UykzEa0HEfCdr4B5bHeijA" nullCount="22" computed="true" length="0">
          <parameters xmi:id="_UykzEq0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykzE60HEfCdr4B5bHeijA" useBlank="false" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldmK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Null_0.1.definition#_a4KsoI1qEd-xwI2imLgHRA"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykzFK0HEfCdr4B5bHeijA" body="SELECT MIN(LEN(CASE WHEN &quot;Fax&quot; IS NULL  THEN '' ELSE &quot;Fax&quot; END)) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (LTRIM(RTRIM(CASE WHEN &quot;Fax&quot; IS NULL  THEN 'NULL TALEND' ELSE &quot;Fax&quot; END)) &lt;> '' ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykzFa0HEfCdr4B5bHeijA" name="Minimal Length With Null" label="Minimal Length With Null">
            <taggedValue xmi:id="_UykzFq0HEfCdr4B5bHeijA" tag="Description" value="computes the minimal length of a text field. Does not take into account the blank values when computing the minimal length."/>
            <taggedValue xmi:id="_UykzF60HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the length of the smallest textual record of non-blank values"/>
            <sqlGenericExpression xmi:id="_UykzGK0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykzGa0HEfCdr4B5bHeijA" body="SELECT MIN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykzGq0HEfCdr4B5bHeijA" body="SELECT MIN(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykzG60HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykzHK0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykzHa0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_UykzHq0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykzH60HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykzIK0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykzIa0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykzIq0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_UykzI60HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykzJK0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </minLengthWithNullIndicator>
        <minLengthWithBlankNullIndicator xmi:id="_UykzJa0HEfCdr4B5bHeijA" nullCount="22" computed="true" length="0">
          <parameters xmi:id="_UykzJq0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykzJ60HEfCdr4B5bHeijA" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldmK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Blank_and_Null_0.1.definition#_9HDjMJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykzKK0HEfCdr4B5bHeijA" body="SELECT MIN(LEN(CASE WHEN &quot;Fax&quot; IS NULL  THEN '' ELSE &quot;Fax&quot; END)) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykzKa0HEfCdr4B5bHeijA" name="Minimal Length With Blank and Null" label="Minimal Length With Blank and Null">
            <taggedValue xmi:id="_UykzKq0HEfCdr4B5bHeijA" tag="Description" value="computes the minimal length of a text field."/>
            <taggedValue xmi:id="_UykzK60HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the length of the smallest textual record"/>
            <sqlGenericExpression xmi:id="_UykzLK0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykzLa0HEfCdr4B5bHeijA" body="SELECT MIN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykzLq0HEfCdr4B5bHeijA" body="SELECT MIN(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykzL60HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykzMK0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykzMa0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_UykzMq0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykzM60HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykzNK0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykzNa0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykzNq0HEfCdr4B5bHeijA" body="SELECT MIN(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_UykzN60HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykzOK0HEfCdr4B5bHeijA" body="SELECT MIN(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </minLengthWithBlankNullIndicator>
        <maxLengthWithBlankIndicator xmi:id="_UykzOa0HEfCdr4B5bHeijA" nullCount="22" computed="true" length="17">
          <parameters xmi:id="_UykzOq0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykzO60HEfCdr4B5bHeijA"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldmK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Blank_0.1.definition#_-xmZcJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykzPK0HEfCdr4B5bHeijA" body="SELECT MAX(LEN(&quot;Fax&quot;)) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (&quot;Fax&quot; IS NOT NULL ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykzPa0HEfCdr4B5bHeijA" name="Maximal Length With Blank" label="Maximal Length With Blank">
            <taggedValue xmi:id="_UykzPq0HEfCdr4B5bHeijA" tag="Description" value="computes the maximal length of a text field. Does not take into account the null values when computing the maximal length."/>
            <taggedValue xmi:id="_UykzP60HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the length of the longest textual record of non-null values"/>
            <sqlGenericExpression xmi:id="_UykzQK0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykzQa0HEfCdr4B5bHeijA" body="SELECT MAX( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykzQq0HEfCdr4B5bHeijA" body="SELECT MAX(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykzQ60HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykzRK0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykzRa0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_UykzRq0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykzR60HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykzSK0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykzSa0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykzSq0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykzS60HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </maxLengthWithBlankIndicator>
        <maxLengthWithNullIndicator xmi:id="_UykzTK0HEfCdr4B5bHeijA" nullCount="22" computed="true" length="17">
          <parameters xmi:id="_UykzTa0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykzTq0HEfCdr4B5bHeijA" useBlank="false" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldmK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Null_0.1.definition#_-_UFUJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykzT60HEfCdr4B5bHeijA" body="SELECT MAX(LEN(CASE WHEN &quot;Fax&quot; IS NULL  THEN '' ELSE &quot;Fax&quot; END)) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (LTRIM(RTRIM(CASE WHEN &quot;Fax&quot; IS NULL  THEN 'NULL TALEND' ELSE &quot;Fax&quot; END)) &lt;> '' ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykzUK0HEfCdr4B5bHeijA" name="Maximal Length With Null" label="Maximal Length With Null">
            <taggedValue xmi:id="_UykzUa0HEfCdr4B5bHeijA" tag="Description" value="computes the maximal length of a text field. Does not take into account the blank values when computing the maximal length."/>
            <taggedValue xmi:id="_UykzUq0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the length of the longest textual record of non-blank values"/>
            <sqlGenericExpression xmi:id="_UykzU60HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykzVK0HEfCdr4B5bHeijA" body="SELECT MAX(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykzVa0HEfCdr4B5bHeijA" body="SELECT MAX(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_UykzVq0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_UykzV60HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykzWK0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive" version=""/>
            <sqlGenericExpression xmi:id="_UykzWa0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_UykzWq0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_UykzW60HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykzXK0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykzXa0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_UykzXq0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_UykzX60HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </maxLengthWithNullIndicator>
        <maxLengthWithBlankNullIndicator xmi:id="_UykzYK0HEfCdr4B5bHeijA" nullCount="22" computed="true" length="17">
          <parameters xmi:id="_UykzYa0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_UykzYq0HEfCdr4B5bHeijA" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldmK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Blank_and_Null_0.1.definition#_-hzp8JSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_UykzY60HEfCdr4B5bHeijA" body="SELECT MAX(LEN(CASE WHEN &quot;Fax&quot; IS NULL  THEN '' ELSE &quot;Fax&quot; END)) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykzZK0HEfCdr4B5bHeijA" name="Maximal Length With Blank and Null" label="Maximal Length With Blank and Null">
            <taggedValue xmi:id="_UykzZa0HEfCdr4B5bHeijA" tag="Description" value="computes the maximal length of a text field."/>
            <taggedValue xmi:id="_UykzZq0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the length of the longest textual record"/>
            <sqlGenericExpression xmi:id="_UykzZ60HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykzaK0HEfCdr4B5bHeijA" body="SELECT MAX(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_Uykzaa0HEfCdr4B5bHeijA" body="SELECT MAX(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_Uykzaq0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_Uykza60HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykzbK0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_Uykzba0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_Uykzbq0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_Uykzb60HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykzcK0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_Uykzca0HEfCdr4B5bHeijA" body="SELECT MAX(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_Uykzcq0HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_Uykzc60HEfCdr4B5bHeijA" body="SELECT MAX(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </maxLengthWithBlankNullIndicator>
        <avgLengthWithBlankIndicator xmi:id="_UykzdK0HEfCdr4B5bHeijA" count="69" nullCount="22" computed="true" sumLength="850.0">
          <parameters xmi:id="_Uykzda0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_Uykzdq0HEfCdr4B5bHeijA"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldmK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Blank_0.1.definition#__gPoIJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_Uykzd60HEfCdr4B5bHeijA" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM(&quot;Fax&quot;)) )=0  THEN '' ELSE  &quot;Fax&quot; END)), COUNT(*) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (&quot;Fax&quot; IS NOT NULL ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_UykzeK0HEfCdr4B5bHeijA" name="Average Length With Blank" label="Average Length With Blank">
            <taggedValue xmi:id="_Uykzea0HEfCdr4B5bHeijA" tag="Description" value="computes the average length of the field. Does not take into account the null values when computing the average length."/>
            <taggedValue xmi:id="_Uykzeq0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the average length of the textual record of non-null values"/>
            <sqlGenericExpression xmi:id="_Uykze60HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_UykzfK0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_Uykzfa0HEfCdr4B5bHeijA" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) )=0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_Uykzfq0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_Uykzf60HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_UykzgK0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_Uykzga0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_Uykzgq0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_Uykzg60HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_UykzhK0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_Uykzha0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_Uykzhq0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </avgLengthWithBlankIndicator>
        <avgLengthWithNullIndicator xmi:id="_Uykzh60HEfCdr4B5bHeijA" count="91" nullCount="22" computed="true" sumLength="850.0">
          <parameters xmi:id="_UykziK0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_Uykzia0HEfCdr4B5bHeijA" useBlank="false" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldmK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Null_0.1.definition#__vI_wJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_Uykziq0HEfCdr4B5bHeijA" body="SELECT SUM(LEN(CASE WHEN &quot;Fax&quot; IS NULL  THEN '' ELSE &quot;Fax&quot; END)), COUNT(*) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; WHERE (LTRIM(RTRIM(CASE WHEN &quot;Fax&quot; IS NULL  THEN 'NULL TALEND' ELSE &quot;Fax&quot; END)) &lt;> '' ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_Uykzi60HEfCdr4B5bHeijA" name="Average Length With Null" label="Average Length With Null">
            <taggedValue xmi:id="_UykzjK0HEfCdr4B5bHeijA" tag="Description" value="computes the average length of the field. Does not take into account the blank values when computing the average length."/>
            <taggedValue xmi:id="_Uykzja0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the average length of the textual record of non-blank values"/>
            <sqlGenericExpression xmi:id="_Uykzjq0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_Uykzj60HEfCdr4B5bHeijA" body="SELECT SUM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykzkK0HEfCdr4B5bHeijA" body="SELECT SUM(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_Uykzka0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_Uykzkq0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_Uykzk60HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_UykzlK0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_Uykzla0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_Uykzlq0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_Uykzl60HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykzmK0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_Uykzma0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_Uykzmq0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </avgLengthWithNullIndicator>
        <avgLengthWithBlankNullIndicator xmi:id="_Uykzm60HEfCdr4B5bHeijA" count="91" nullCount="22" computed="true" sumLength="850.0">
          <parameters xmi:id="_UykznK0HEfCdr4B5bHeijA">
            <textParameter xmi:id="_Uykzna0HEfCdr4B5bHeijA" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/SQLServer-on-Prem-Source_0.1.item#_WkldmK0DEfCdr4B5bHeijA"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Blank_and_Null_0.1.definition#__TbUIJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_Uykznq0HEfCdr4B5bHeijA" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM( CASE WHEN &quot;Fax&quot; IS NULL  THEN '' ELSE &quot;Fax&quot; END )) )=0  THEN '' ELSE   CASE WHEN &quot;Fax&quot; IS NULL  THEN '' ELSE &quot;Fax&quot; END  END)), COUNT(*) FROM &quot;Northwind&quot;.&quot;dbo&quot;.&quot;Customers&quot; " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_Uykzn60HEfCdr4B5bHeijA" name="Average Length With Blank and Null" label="Average Length With Blank and Null">
            <taggedValue xmi:id="_UykzoK0HEfCdr4B5bHeijA" tag="Description" value="computes the average length of the field."/>
            <taggedValue xmi:id="_Uykzoa0HEfCdr4B5bHeijA" tag="Purpose" value="evaluates the average length of the textual record"/>
            <sqlGenericExpression xmi:id="_Uykzoq0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_Uykzo60HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_UykzpK0HEfCdr4B5bHeijA" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) )=0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_Uykzpa0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_Uykzpq0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_Uykzp60HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_UykzqK0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_Uykzqa0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_Uykzqq0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_Uykzq60HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_UykzrK0HEfCdr4B5bHeijA" body="SELECT SUM(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
            <sqlGenericExpression xmi:id="_Uykzra0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Snowflake"/>
            <sqlGenericExpression xmi:id="_Uykzrq0HEfCdr4B5bHeijA" body="SELECT SUM(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="HDB"/>
          </builtInIndicatorDefinition>
        </avgLengthWithBlankNullIndicator>
      </indicators>
    </results>
    <parameters xmi:id="_Uykzr60HEfCdr4B5bHeijA" dataFilter="_Uykzsa0HEfCdr4B5bHeijA" analysisType="Multiple Column Analysis"/>
    <contextType xmi:id="_UykzsK0HEfCdr4B5bHeijA" confirmationNeeded="false" hide="false" name="Default"/>
  </dataquality.analysis:Analysis>
  <orgomg.cwm.objectmodel.core:Dependency xmi:id="_d7fcwK0HEfCdr4B5bHeijA" kind="Usage" supplier="_UyjiUa0HEfCdr4B5bHeijA">
    <client xsi:type="dataquality.reports:TdReport" href="../../Reports/eost_dq/Northwind_Customers_column_analysis_evo_report_0.1.rep#_dkThQa0GEfCdr4B5bHeijA"/>
  </orgomg.cwm.objectmodel.core:Dependency>
  <dataquality.domain:Domain xmi:id="_Uykzsa0HEfCdr4B5bHeijA" name="Analysis Data Filter">
    <ranges xmi:id="_Uykzsq0HEfCdr4B5bHeijA">
      <expressions xmi:id="_Uykzs60HEfCdr4B5bHeijA">
        <expression xsi:type="relational:TdExpression" xmi:id="_UykztK0HEfCdr4B5bHeijA" body="" language="SQL"/>
      </expressions>
    </ranges>
  </dataquality.domain:Domain>
</xmi:XMI>
