<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dataquality.analysis="http://dataquality.analysis" xmlns:dataquality.domain="http://dataquality.domain" xmlns:dataquality.indicators="http://dataquality.indicators" xmlns:dataquality.reports="http://dataquality.reports" xmlns:orgomg.cwm.objectmodel.core="http:///orgomg/cwm/objectmodel/core.ecore" xmlns:relational="http://www.talend.org/cwm/resource/relational/2010">
  <dataquality.analysis:Analysis xmi:id="_1a1GQak8EfCpp_nJYIoYFQ" name="Deletes" supplierDependency="_RmtKEKnVEfCPYfrxWxsLvw" creationDate="2025-10-14T16:31:59.652-0400" defaultContext="Default">
    <clientDependency href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_mTttEKkDEfCilM20c3cV9g"/>
    <taggedValue xmi:id="_1a1GQqk8EfCpp_nJYIoYFQ" tag="Status" value="development"/>
    <taggedValue xmi:id="_1a1GQ6k8EfCpp_nJYIoYFQ" tag="Author" value="eof@qlik.com"/>
    <taggedValue xmi:id="_1a1GRKk8EfCpp_nJYIoYFQ" tag="Purpose" value=""/>
    <taggedValue xmi:id="_1a1GRak8EfCpp_nJYIoYFQ" tag="Description" value=""/>
    <taggedValue xmi:id="_1a1GRqk8EfCpp_nJYIoYFQ" tag="Version" value="0.1"/>
    <taggedValue xmi:id="_GcNjoak9EfCpp_nJYIoYFQ" tag="ANA_LAST_RUN_CONTEXT" value="Default"/>
    <taggedValue xmi:id="_GcNjoqk9EfCpp_nJYIoYFQ" tag="PREVIEW_ROW_NUMBER" value="50"/>
    <taggedValue xmi:id="_GcNjo6k9EfCpp_nJYIoYFQ" tag="NUMBER_OF_CONNECTIONS_PER_ANALYSIS" value="5"/>
    <taggedValue xmi:id="_GcOK7ak9EfCpp_nJYIoYFQ" tag="Is Use Sample Data" value="false"/>
    <context xmi:id="_1a1GR6k8EfCpp_nJYIoYFQ">
      <connection href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_8YWMsKhlEfCuJ6j3L7ShEQ"/>
      <analysedElements xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llMKk9EfCpp_nJYIoYFQ"/>
      <analysedElements xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llNKk9EfCpp_nJYIoYFQ"/>
      <analysedElements xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llOKk9EfCpp_nJYIoYFQ"/>
      <analysedElements xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llPKk9EfCpp_nJYIoYFQ"/>
      <analysedElements xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llQKk9EfCpp_nJYIoYFQ"/>
      <analysedElements xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llRKk9EfCpp_nJYIoYFQ"/>
      <analysedElements xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llSKk9EfCpp_nJYIoYFQ"/>
      <analysedElements xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llTKk9EfCpp_nJYIoYFQ"/>
      <analysedElements xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llUKk9EfCpp_nJYIoYFQ"/>
      <analysedElements xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llVKk9EfCpp_nJYIoYFQ"/>
    </context>
    <results xmi:id="_1a1GSKk8EfCpp_nJYIoYFQ">
      <resultMetadata xmi:id="_1a1GSak8EfCpp_nJYIoYFQ" executionDate="2025-10-15T10:43:19.694-0400" executionDuration="686" message="" executionNumber="2" lastRunOk="true" lastExecutionNumberOk="2"/>
      <indicators xsi:type="dataquality.indicators:RowCountIndicator" xmi:id="_GcNjpKk9EfCpp_nJYIoYFQ" count="30" computed="true">
        <parameters xmi:id="_GcNjpak9EfCpp_nJYIoYFQ"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llMKk9EfCpp_nJYIoYFQ"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Row_Count_0.1.definition#_ccFOkBF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTLn6Kk9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM `target`.`D_CUSTOMER` " language="MySQL"/>
        <builtInIndicatorDefinition xmi:id="_HBaicKk9EfCpp_nJYIoYFQ" name="Row Count" label="Row Count">
          <taggedValue xmi:id="_HBaicak9EfCpp_nJYIoYFQ" tag="Description" value="counts the number of rows"/>
          <taggedValue xmi:id="_HBaicqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the number of records"/>
          <sqlGenericExpression xmi:id="_HBaic6k9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:NullCountIndicator" xmi:id="_GcNjpqk9EfCpp_nJYIoYFQ" count="30" computed="true">
        <parameters xmi:id="_GcNjp6k9EfCpp_nJYIoYFQ"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llMKk9EfCpp_nJYIoYFQ"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Null_Count_0.1.definition#_GrAeADh9Ed2XmO7pl5Yuyg"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTLn6qk9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM `target`.`D_CUSTOMER` WHERE `customer_id` IS NULL " language="MySQL"/>
        <builtInIndicatorDefinition xmi:id="_HBieQKk9EfCpp_nJYIoYFQ" name="Null Count" label="Null Count">
          <taggedValue xmi:id="_HBieQak9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluate the number of missing data (null records)"/>
          <taggedValue xmi:id="_HBieQqk9EfCpp_nJYIoYFQ" tag="Description" value="counts the number of null rows"/>
          <sqlGenericExpression xmi:id="_HBieQ6k9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE &lt;%=__COLUMN_NAMES__%> IS NULL &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:DistinctCountIndicator" xmi:id="_GcNjqKk9EfCpp_nJYIoYFQ" count="30" computed="true" distinctValueCount="30">
        <parameters xmi:id="_GcNjqak9EfCpp_nJYIoYFQ"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llMKk9EfCpp_nJYIoYFQ"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Distinct_Count_0.1.definition#_ccHq0BF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTLn66k9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT DISTINCT `customer_id` FROM `target`.`D_CUSTOMER` ) A" language="MySQL"/>
        <builtInIndicatorDefinition xmi:id="_HBok4Kk9EfCpp_nJYIoYFQ" name="Distinct Count" label="Distinct Count">
          <taggedValue xmi:id="_HBok4ak9EfCpp_nJYIoYFQ" tag="Description" value="counts the number of distinct rows (like a &quot;SELECT DISTINCT&quot; SQL statement)"/>
          <taggedValue xmi:id="_HBok4qk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the number of distinct records"/>
          <sqlGenericExpression xmi:id="_HBok46k9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT DISTINCT &lt;%=__COLUMN_NAMES__%> FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>) A" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:UniqueCountIndicator" xmi:id="_GcNjqqk9EfCpp_nJYIoYFQ" count="30" computed="true" uniqueValueCount="30">
        <parameters xmi:id="_GcNjq6k9EfCpp_nJYIoYFQ"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llMKk9EfCpp_nJYIoYFQ"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Unique_Count_0.1.definition#_ccHq0RF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTLn7Kk9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT `customer_id`, COUNT(*) mycount FROM `target`.`D_CUSTOMER`  GROUP BY `customer_id` HAVING mycount = 1) AS myquery" language="MySQL"/>
        <builtInIndicatorDefinition xmi:id="_HBvSkKk9EfCpp_nJYIoYFQ" name="Unique Count" label="Unique Count">
          <taggedValue xmi:id="_HBvSkak9EfCpp_nJYIoYFQ" tag="Description" value="counts the number of unique rows (i.e. distinct rows with only one instance: rows that are not duplicated)"/>
          <taggedValue xmi:id="_HBvSkqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the number of unique records"/>
          <sqlGenericExpression xmi:id="_HBvSk6k9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="SQL"/>
          <sqlGenericExpression xmi:id="_HBvSlKk9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount = 1) AS myquery" language="MySQL"/>
          <sqlGenericExpression xmi:id="_HBvSlak9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) myquery" language="Oracle"/>
          <sqlGenericExpression xmi:id="_HBvSlqk9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount = 1) AS myquery" language="Teradata"/>
          <sqlGenericExpression xmi:id="_HBvSl6k9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_HBvSmKk9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_HBvSmak9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1)  myquery" language="Hive" version=""/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:DuplicateCountIndicator" xmi:id="_GcNjrKk9EfCpp_nJYIoYFQ" count="30" computed="true" duplicateValueCount="0">
        <parameters xmi:id="_GcNjrak9EfCpp_nJYIoYFQ"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llMKk9EfCpp_nJYIoYFQ"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Duplicate_Count_0.1.definition#_ccHq0hF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTLn7ak9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT `customer_id`, COUNT(*) mycount FROM `target`.`D_CUSTOMER`  m  GROUP BY `customer_id` HAVING mycount > 1) AS myquery" language="MySQL"/>
        <builtInIndicatorDefinition xmi:id="_HB1ZMKk9EfCpp_nJYIoYFQ" name="Duplicate Count" label="Duplicate Count">
          <taggedValue xmi:id="_HB1ZMak9EfCpp_nJYIoYFQ" tag="Description" value="counts the number of duplicate rows. This number and the number of unique data equals the number of distinct rows"/>
          <taggedValue xmi:id="_HB1ZMqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the number of duplicated records"/>
          <sqlGenericExpression xmi:id="_HB1ZM6k9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) AS myquery" language="SQL"/>
          <sqlGenericExpression xmi:id="_HB1ZNKk9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount > 1) AS myquery" language="MySQL"/>
          <sqlGenericExpression xmi:id="_HB1ZNak9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Oracle"/>
          <sqlGenericExpression xmi:id="_HB1ZNqk9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount > 1) AS myquery" language="Teradata"/>
          <sqlGenericExpression xmi:id="_HB1ZN6k9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_HB1ZOKk9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) AS myquery" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_HB1ZOak9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Hive"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RowCountIndicator" xmi:id="_GcNjr6k9EfCpp_nJYIoYFQ" count="30" computed="true">
        <parameters xmi:id="_GcNjsKk9EfCpp_nJYIoYFQ"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llNKk9EfCpp_nJYIoYFQ"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Row_Count_0.1.definition#_ccFOkBF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTLn4qk9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM `target`.`D_CUSTOMER` " language="MySQL"/>
        <builtInIndicatorDefinition xmi:id="_HB9VAKk9EfCpp_nJYIoYFQ" name="Row Count" label="Row Count">
          <taggedValue xmi:id="_HB9VAak9EfCpp_nJYIoYFQ" tag="Description" value="counts the number of rows"/>
          <taggedValue xmi:id="_HB9VAqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the number of records"/>
          <sqlGenericExpression xmi:id="_HB9VA6k9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:NullCountIndicator" xmi:id="_GcNjsak9EfCpp_nJYIoYFQ" count="30" computed="true">
        <parameters xmi:id="_GcNjsqk9EfCpp_nJYIoYFQ"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llNKk9EfCpp_nJYIoYFQ"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Null_Count_0.1.definition#_GrAeADh9Ed2XmO7pl5Yuyg"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTLn7qk9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM `target`.`D_CUSTOMER` WHERE `firstname` IS NULL " language="MySQL"/>
        <builtInIndicatorDefinition xmi:id="_HCECsKk9EfCpp_nJYIoYFQ" name="Null Count" label="Null Count">
          <taggedValue xmi:id="_HCECsak9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluate the number of missing data (null records)"/>
          <taggedValue xmi:id="_HCECsqk9EfCpp_nJYIoYFQ" tag="Description" value="counts the number of null rows"/>
          <sqlGenericExpression xmi:id="_HCECs6k9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE &lt;%=__COLUMN_NAMES__%> IS NULL &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:DistinctCountIndicator" xmi:id="_GcNjs6k9EfCpp_nJYIoYFQ" count="30" computed="true" distinctValueCount="10">
        <parameters xmi:id="_GcNjtKk9EfCpp_nJYIoYFQ"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llNKk9EfCpp_nJYIoYFQ"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Distinct_Count_0.1.definition#_ccHq0BF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTLn76k9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT DISTINCT `firstname` FROM `target`.`D_CUSTOMER` ) A" language="MySQL"/>
        <builtInIndicatorDefinition xmi:id="_HCKwYKk9EfCpp_nJYIoYFQ" name="Distinct Count" label="Distinct Count">
          <taggedValue xmi:id="_HCKwYak9EfCpp_nJYIoYFQ" tag="Description" value="counts the number of distinct rows (like a &quot;SELECT DISTINCT&quot; SQL statement)"/>
          <taggedValue xmi:id="_HCKwYqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the number of distinct records"/>
          <sqlGenericExpression xmi:id="_HCKwY6k9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT DISTINCT &lt;%=__COLUMN_NAMES__%> FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>) A" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:UniqueCountIndicator" xmi:id="_GcNjtak9EfCpp_nJYIoYFQ" count="30" computed="true" uniqueValueCount="0">
        <parameters xmi:id="_GcNjtqk9EfCpp_nJYIoYFQ"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llNKk9EfCpp_nJYIoYFQ"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Unique_Count_0.1.definition#_ccHq0RF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTLn8Kk9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT `firstname`, COUNT(*) mycount FROM `target`.`D_CUSTOMER`  GROUP BY `firstname` HAVING mycount = 1) AS myquery" language="MySQL"/>
        <builtInIndicatorDefinition xmi:id="_HCQ3AKk9EfCpp_nJYIoYFQ" name="Unique Count" label="Unique Count">
          <taggedValue xmi:id="_HCQ3Aak9EfCpp_nJYIoYFQ" tag="Description" value="counts the number of unique rows (i.e. distinct rows with only one instance: rows that are not duplicated)"/>
          <taggedValue xmi:id="_HCQ3Aqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the number of unique records"/>
          <sqlGenericExpression xmi:id="_HCQ3A6k9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="SQL"/>
          <sqlGenericExpression xmi:id="_HCQ3BKk9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount = 1) AS myquery" language="MySQL"/>
          <sqlGenericExpression xmi:id="_HCQ3Bak9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) myquery" language="Oracle"/>
          <sqlGenericExpression xmi:id="_HCQ3Bqk9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount = 1) AS myquery" language="Teradata"/>
          <sqlGenericExpression xmi:id="_HCQ3B6k9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_HCQ3CKk9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_HCQ3Cak9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1)  myquery" language="Hive" version=""/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:DuplicateCountIndicator" xmi:id="_GcNjt6k9EfCpp_nJYIoYFQ" count="30" computed="true" duplicateValueCount="10">
        <parameters xmi:id="_GcNjuKk9EfCpp_nJYIoYFQ"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llNKk9EfCpp_nJYIoYFQ"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Duplicate_Count_0.1.definition#_ccHq0hF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTLn8ak9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT `firstname`, COUNT(*) mycount FROM `target`.`D_CUSTOMER`  m  GROUP BY `firstname` HAVING mycount > 1) AS myquery" language="MySQL"/>
        <builtInIndicatorDefinition xmi:id="_HCYy0Kk9EfCpp_nJYIoYFQ" name="Duplicate Count" label="Duplicate Count">
          <taggedValue xmi:id="_HCYy0ak9EfCpp_nJYIoYFQ" tag="Description" value="counts the number of duplicate rows. This number and the number of unique data equals the number of distinct rows"/>
          <taggedValue xmi:id="_HCYy0qk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the number of duplicated records"/>
          <sqlGenericExpression xmi:id="_HCYy06k9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) AS myquery" language="SQL"/>
          <sqlGenericExpression xmi:id="_HCYy1Kk9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount > 1) AS myquery" language="MySQL"/>
          <sqlGenericExpression xmi:id="_HCYy1ak9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Oracle"/>
          <sqlGenericExpression xmi:id="_HCYy1qk9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount > 1) AS myquery" language="Teradata"/>
          <sqlGenericExpression xmi:id="_HCYy16k9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_HCYy2Kk9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) AS myquery" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_HCYy2ak9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Hive"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:BlankCountIndicator" xmi:id="_GcNjuak9EfCpp_nJYIoYFQ" count="30" computed="true">
        <parameters xmi:id="_GcNjuqk9EfCpp_nJYIoYFQ"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llNKk9EfCpp_nJYIoYFQ"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Blank_Count_0.1.definition#_ccHq0xF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTLn8qk9EfCpp_nJYIoYFQ" body="SELECT COUNT(`firstname`) FROM `target`.`D_CUSTOMER` WHERE TRIM(`firstname`) = '' " language="MySQL"/>
        <builtInIndicatorDefinition xmi:id="_HCguoKk9EfCpp_nJYIoYFQ" name="Blank Count" label="Blank Count">
          <taggedValue xmi:id="_HCguoak9EfCpp_nJYIoYFQ" tag="Description" value="counts the number of blank rows. A blank is a non null textual data that contains only white spaces (or nothing). Note that Oracle does not distinguish between the empty string and the null value"/>
          <taggedValue xmi:id="_HCguoqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the number of blank records"/>
          <sqlGenericExpression xmi:id="_HCguo6k9EfCpp_nJYIoYFQ" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE TRIM(&lt;%=__COLUMN_NAMES__%>) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_HCgupKk9EfCpp_nJYIoYFQ" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE TRIM(&lt;%=__COLUMN_NAMES__%>) IS NULL &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_HCgupak9EfCpp_nJYIoYFQ" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_HCgupqk9EfCpp_nJYIoYFQ" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_HCgup6k9EfCpp_nJYIoYFQ" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> = '' or RTRIM(LTRIM(&lt;%=__COLUMN_NAMES__%>)) = '') &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:TextIndicator" xmi:id="_GcNju6k9EfCpp_nJYIoYFQ">
        <parameters xmi:id="_GcNjvKk9EfCpp_nJYIoYFQ"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llNKk9EfCpp_nJYIoYFQ"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Text_Statistics_0.1.definition#_yb9x0zh8Ed2XmO7pl5Yuyg"/>
        <averageLengthIndicator xmi:id="_GcNjvak9EfCpp_nJYIoYFQ" count="30" computed="true" sumLength="135.0">
          <parameters xmi:id="_GcNjvqk9EfCpp_nJYIoYFQ">
            <textParameter xmi:id="_GcNjv6k9EfCpp_nJYIoYFQ" useBlank="false"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llNKk9EfCpp_nJYIoYFQ"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_0.1.definition#_ccIR4BF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTLn86k9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH(`firstname`)), COUNT(`firstname`) FROM `target`.`D_CUSTOMER` WHERE (`firstname` IS NOT NULL ) AND (TRIM(IFNULL(`firstname`,'NULL TALEND')) &lt;> '' ) " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_HCncUKk9EfCpp_nJYIoYFQ" name="Average Length" label="Average Length">
            <taggedValue xmi:id="_HCncUak9EfCpp_nJYIoYFQ" tag="Description" value="computes the average length of the field. Does not take into account the null values when computing the average."/>
            <taggedValue xmi:id="_HCncUqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the average length of the textual record"/>
            <sqlGenericExpression xmi:id="_HCncU6k9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_HCncVKk9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_HCncVak9EfCpp_nJYIoYFQ" body="SELECT SUM(LEN(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_HCncVqk9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_HCncV6k9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_HCncWKk9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_HCncWak9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_HCncWqk9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_HCncW6k9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_HCncXKk9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )), COUNT( &lt;%=__COLUMN_NAMES__%> ) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_HCncXak9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_HCncXqk9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </averageLengthIndicator>
        <maxLengthIndicator xmi:id="_GcNjwKk9EfCpp_nJYIoYFQ" computed="true" length="7">
          <parameters xmi:id="_GcNjwak9EfCpp_nJYIoYFQ">
            <textParameter xmi:id="_GcNjwqk9EfCpp_nJYIoYFQ" useBlank="false"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llNKk9EfCpp_nJYIoYFQ"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_0.1.definition#_ccHq1RF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTLn9Kk9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(`firstname`)) FROM `target`.`D_CUSTOMER` WHERE (`firstname` IS NOT NULL ) AND (TRIM(IFNULL(`firstname`,'NULL TALEND')) &lt;> '' ) " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_HCuKAKk9EfCpp_nJYIoYFQ" name="Maximal Length" label="Maximal Length">
            <taggedValue xmi:id="_HCuKAak9EfCpp_nJYIoYFQ" tag="Description" value="computes the maximal length of a text field."/>
            <taggedValue xmi:id="_HCuKAqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the length of the longest textual record"/>
            <sqlGenericExpression xmi:id="_HCuKA6k9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_HCuKBKk9EfCpp_nJYIoYFQ" body="SELECT MAX( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle" modificationDate=""/>
            <sqlGenericExpression xmi:id="_HCuKBak9EfCpp_nJYIoYFQ" body="SELECT MAX(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_HCuKBqk9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_HCuKB6k9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_HCuKCKk9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_HCuKCak9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive" modificationDate=""/>
            <sqlGenericExpression xmi:id="_HCuKCqk9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_HCuKC6k9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' )  &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_HCuKDKk9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_HCuKDak9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_HCuKDqk9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </maxLengthIndicator>
        <minLengthIndicator xmi:id="_GcNjw6k9EfCpp_nJYIoYFQ" computed="true" length="3">
          <parameters xmi:id="_GcNjxKk9EfCpp_nJYIoYFQ">
            <textParameter xmi:id="_GcNjxak9EfCpp_nJYIoYFQ" useBlank="false"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llNKk9EfCpp_nJYIoYFQ"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_0.1.definition#_ccHq1BF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTLn9ak9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(`firstname`)) FROM `target`.`D_CUSTOMER` WHERE (`firstname` IS NOT NULL ) AND (TRIM(IFNULL(`firstname`,'NULL TALEND')) &lt;> '' ) " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_HC03sKk9EfCpp_nJYIoYFQ" name="Minimal Length" label="Minimal Length">
            <taggedValue xmi:id="_HC03sak9EfCpp_nJYIoYFQ" tag="Description" value="computes the minimal length of a text field. Does not take into account the null values when computing the minimal length."/>
            <taggedValue xmi:id="_HC03sqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the length of the smallest textual record"/>
            <sqlGenericExpression xmi:id="_HC03s6k9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_HC03tKk9EfCpp_nJYIoYFQ" body="SELECT MIN( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_HC03tak9EfCpp_nJYIoYFQ" body="SELECT MIN(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_HC03tqk9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_HC03t6k9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_HC03uKk9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_HC03uak9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_HC03uqk9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_HC03u6k9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_HC03vKk9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_HC03vak9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (1=1) AND (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_HC03vqk9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </minLengthIndicator>
        <minLengthWithBlankIndicator xmi:id="_GcNjxqk9EfCpp_nJYIoYFQ" computed="true" length="3">
          <parameters xmi:id="_GcNjx6k9EfCpp_nJYIoYFQ">
            <textParameter xmi:id="_GcNjyKk9EfCpp_nJYIoYFQ"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llNKk9EfCpp_nJYIoYFQ"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Blank_0.1.definition#_G4EzQZU9Ed-Y15ulK_jijQ"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTLn_Kk9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(`firstname`)) FROM `target`.`D_CUSTOMER` WHERE (`firstname` IS NOT NULL ) " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_HDmTwKk9EfCpp_nJYIoYFQ" name="Minimal Length With Blank" label="Minimal Length With Blank">
            <taggedValue xmi:id="_HDmTwak9EfCpp_nJYIoYFQ" tag="Description" value="computes the minimal length of a text field, counting blank as zero length values."/>
            <taggedValue xmi:id="_HDmTwqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the length of the smallest textual record"/>
            <sqlGenericExpression xmi:id="_HDmTw6k9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_HDmTxKk9EfCpp_nJYIoYFQ" body="SELECT MIN( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_HDmTxak9EfCpp_nJYIoYFQ" body="SELECT MIN(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_HDmTxqk9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_HDmTx6k9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_HDmTyKk9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_HDmTyak9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_HDmTyqk9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_HDmTy6k9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_HDmTzKk9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_HDmTzak9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          </builtInIndicatorDefinition>
        </minLengthWithBlankIndicator>
        <minLengthWithNullIndicator xmi:id="_GcNjyak9EfCpp_nJYIoYFQ" computed="true" length="3">
          <parameters xmi:id="_GcNjyqk9EfCpp_nJYIoYFQ">
            <textParameter xmi:id="_GcNjy6k9EfCpp_nJYIoYFQ" useBlank="false" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llNKk9EfCpp_nJYIoYFQ"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Null_0.1.definition#_a4KsoI1qEd-xwI2imLgHRA"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTLn_ak9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(IFNULL(`firstname`,''))) FROM `target`.`D_CUSTOMER` WHERE (TRIM(IFNULL(`firstname`,'NULL TALEND')) &lt;> '' ) " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_HDuPkKk9EfCpp_nJYIoYFQ" name="Minimal Length With Null" label="Minimal Length With Null">
            <taggedValue xmi:id="_HDuPkak9EfCpp_nJYIoYFQ" tag="Description" value="computes the minimal length of a text field, counting null as zero length values."/>
            <taggedValue xmi:id="_HDuPkqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the length of the smallest textual record"/>
            <sqlGenericExpression xmi:id="_HDuPk6k9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_HDuPlKk9EfCpp_nJYIoYFQ" body="SELECT MIN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_HDuPlak9EfCpp_nJYIoYFQ" body="SELECT MIN(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_HDuPlqk9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_HDuPl6k9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_HDuPmKk9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_HDuPmak9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_HDuPmqk9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_HDuPm6k9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_HDu2oKk9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_HDu2oak9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_HDu2oqk9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </minLengthWithNullIndicator>
        <minLengthWithBlankNullIndicator xmi:id="_GcNjzKk9EfCpp_nJYIoYFQ" computed="true" length="3">
          <parameters xmi:id="_GcNjzak9EfCpp_nJYIoYFQ">
            <textParameter xmi:id="_GcNjzqk9EfCpp_nJYIoYFQ" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llNKk9EfCpp_nJYIoYFQ"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Blank_and_Null_0.1.definition#_9HDjMJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTLn_qk9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(IFNULL(`firstname`,''))) FROM `target`.`D_CUSTOMER` " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_HD09QKk9EfCpp_nJYIoYFQ" name="Minimal Length With Blank and Null" label="Minimal Length With Blank and Null">
            <taggedValue xmi:id="_HD09Qak9EfCpp_nJYIoYFQ" tag="Description" value="computes the minimal length of a text field, counting blank and null as zero length values."/>
            <taggedValue xmi:id="_HD09Qqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the length of the smallest textual record"/>
            <sqlGenericExpression xmi:id="_HD09Q6k9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_HD09RKk9EfCpp_nJYIoYFQ" body="SELECT MIN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_HD09Rak9EfCpp_nJYIoYFQ" body="SELECT MIN(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_HD09Rqk9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_HD09R6k9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_HD09SKk9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_HD09Sak9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_HD09Sqk9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_HD09S6k9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_HD09TKk9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_HD09Tak9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_HD09Tqk9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </minLengthWithBlankNullIndicator>
        <maxLengthWithBlankIndicator xmi:id="_GcNjz6k9EfCpp_nJYIoYFQ" computed="true" length="7">
          <parameters xmi:id="_GcNj0Kk9EfCpp_nJYIoYFQ">
            <textParameter xmi:id="_GcNj0ak9EfCpp_nJYIoYFQ"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llNKk9EfCpp_nJYIoYFQ"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Blank_0.1.definition#_-xmZcJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTLn-ak9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(`firstname`)) FROM `target`.`D_CUSTOMER` WHERE (`firstname` IS NOT NULL ) " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_HDQ8kKk9EfCpp_nJYIoYFQ" name="Maximal Length With Blank" label="Maximal Length With Blank">
            <taggedValue xmi:id="_HDQ8kak9EfCpp_nJYIoYFQ" tag="Description" value="computes the maximal length of a text field, counting blank data  as zero length values."/>
            <taggedValue xmi:id="_HDQ8kqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the length of the longest textual record"/>
            <sqlGenericExpression xmi:id="_HDQ8k6k9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_HDQ8lKk9EfCpp_nJYIoYFQ" body="SELECT MAX( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_HDQ8lak9EfCpp_nJYIoYFQ" body="SELECT MAX(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_HDQ8lqk9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_HDQ8l6k9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_HDQ8mKk9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_HDQ8mak9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_HDQ8mqk9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_HDQ8m6k9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_HDQ8nKk9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_HDQ8nak9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          </builtInIndicatorDefinition>
        </maxLengthWithBlankIndicator>
        <maxLengthWithNullIndicator xmi:id="_GcNj0qk9EfCpp_nJYIoYFQ" computed="true" length="7">
          <parameters xmi:id="_GcNj06k9EfCpp_nJYIoYFQ">
            <textParameter xmi:id="_GcNj1Kk9EfCpp_nJYIoYFQ" useBlank="false" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llNKk9EfCpp_nJYIoYFQ"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Null_0.1.definition#_-_UFUJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTLn-qk9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(IFNULL(`firstname`,''))) FROM `target`.`D_CUSTOMER` WHERE (TRIM(IFNULL(`firstname`,'NULL TALEND')) &lt;> '' ) " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_HDY4YKk9EfCpp_nJYIoYFQ" name="Maximal Length With Null" label="Maximal Length With Null">
            <taggedValue xmi:id="_HDY4Yak9EfCpp_nJYIoYFQ" tag="Description" value="computes the maximal length of a text field, counting null data as zero length values."/>
            <taggedValue xmi:id="_HDY4Yqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the length of the longest textual record"/>
            <sqlGenericExpression xmi:id="_HDY4Y6k9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_HDY4ZKk9EfCpp_nJYIoYFQ" body="SELECT MAX(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_HDY4Zak9EfCpp_nJYIoYFQ" body="SELECT MAX(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_HDY4Zqk9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_HDY4Z6k9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_HDY4aKk9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_HDY4aak9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive" version=""/>
            <sqlGenericExpression xmi:id="_HDY4aqk9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_HDY4a6k9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_HDY4bKk9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_HDY4bak9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_HDY4bqk9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </maxLengthWithNullIndicator>
        <maxLengthWithBlankNullIndicator xmi:id="_GcNj1ak9EfCpp_nJYIoYFQ" computed="true" length="7">
          <parameters xmi:id="_GcNj1qk9EfCpp_nJYIoYFQ">
            <textParameter xmi:id="_GcNj16k9EfCpp_nJYIoYFQ" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llNKk9EfCpp_nJYIoYFQ"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Blank_and_Null_0.1.definition#_-hzp8JSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTLn-6k9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(IFNULL(`firstname`,''))) FROM `target`.`D_CUSTOMER` " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_HDfmEKk9EfCpp_nJYIoYFQ" name="Maximal Length With Blank and Null" label="Maximal Length With Blank and Null">
            <taggedValue xmi:id="_HDfmEak9EfCpp_nJYIoYFQ" tag="Description" value="computes the maximal length of a text field, counting null and blank data as zero length values."/>
            <taggedValue xmi:id="_HDfmEqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the length of the longest textual record"/>
            <sqlGenericExpression xmi:id="_HDfmE6k9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_HDfmFKk9EfCpp_nJYIoYFQ" body="SELECT MAX(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_HDfmFak9EfCpp_nJYIoYFQ" body="SELECT MAX(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_HDfmFqk9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_HDfmF6k9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_HDfmGKk9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_HDfmGak9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_HDfmGqk9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_HDfmG6k9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_HDfmHKk9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_HDfmHak9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_HDfmHqk9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </maxLengthWithBlankNullIndicator>
        <avgLengthWithBlankIndicator xmi:id="_GcNj2Kk9EfCpp_nJYIoYFQ" count="30" computed="true" sumLength="135.0">
          <parameters xmi:id="_GcNj2ak9EfCpp_nJYIoYFQ">
            <textParameter xmi:id="_GcNj2qk9EfCpp_nJYIoYFQ"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llNKk9EfCpp_nJYIoYFQ"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Blank_0.1.definition#__gPoIJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTLn9qk9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH(CASE WHEN   CHAR_LENGTH( TRIM(`firstname`) ) =0  THEN '' ELSE  `firstname` END)), COUNT(*) FROM `target`.`D_CUSTOMER` WHERE (`firstname` IS NOT NULL ) " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_HC8zgKk9EfCpp_nJYIoYFQ" name="Average Length With Blank" label="Average Length With Blank">
            <taggedValue xmi:id="_HC8zgak9EfCpp_nJYIoYFQ" tag="Description" value="computes the average length of the field, counting blank data as zero length values."/>
            <taggedValue xmi:id="_HC8zgqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the average length of the textual record"/>
            <sqlGenericExpression xmi:id="_HC8zg6k9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH(CASE WHEN   CHAR_LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_HC8zhKk9EfCpp_nJYIoYFQ" body="SELECT SUM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NOT NULL AND  TRIM(&lt;%=__COLUMN_NAMES__%>) IS NULL THEN 0 ELSE  LENGTH(&lt;%=__COLUMN_NAMES__%>)END), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_HC8zhak9EfCpp_nJYIoYFQ" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) )=0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_HC8zhqk9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_HC8zh6k9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_HC8ziKk9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_HC8ziak9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_HC8ziqk9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_HC8zi6k9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_HC8zjKk9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM( &lt;%=__COLUMN_NAMES__%> ) ) =0  THEN '' ELSE   &lt;%=__COLUMN_NAMES__%>  END)), COUNT(*) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_HC8zjak9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          </builtInIndicatorDefinition>
        </avgLengthWithBlankIndicator>
        <avgLengthWithNullIndicator xmi:id="_GcNj26k9EfCpp_nJYIoYFQ" count="30" computed="true" sumLength="135.0">
          <parameters xmi:id="_GcNj3Kk9EfCpp_nJYIoYFQ">
            <textParameter xmi:id="_GcNj3ak9EfCpp_nJYIoYFQ" useBlank="false" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llNKk9EfCpp_nJYIoYFQ"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Null_0.1.definition#__vI_wJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTLn96k9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH(IFNULL(`firstname`,''))), COUNT(*) FROM `target`.`D_CUSTOMER` WHERE (TRIM(IFNULL(`firstname`,'NULL TALEND')) &lt;> '' ) " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_HDDhMKk9EfCpp_nJYIoYFQ" name="Average Length With Null" label="Average Length With Null">
            <taggedValue xmi:id="_HDDhMak9EfCpp_nJYIoYFQ" tag="Description" value="computes the average length of the field, counting null data as zero length values."/>
            <taggedValue xmi:id="_HDDhMqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the average length of the textual record"/>
            <sqlGenericExpression xmi:id="_HDDhM6k9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_HDDhNKk9EfCpp_nJYIoYFQ" body="SELECT SUM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_HDDhNak9EfCpp_nJYIoYFQ" body="SELECT SUM(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_HDDhNqk9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_HDDhN6k9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_HDDhOKk9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_HDDhOak9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_HDDhOqk9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_HDDhO6k9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_HDDhPKk9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_HDDhPak9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_HDDhPqk9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </avgLengthWithNullIndicator>
        <avgLengthWithBlankNullIndicator xmi:id="_GcNj3qk9EfCpp_nJYIoYFQ" count="30" computed="true" sumLength="135.0">
          <parameters xmi:id="_GcNj36k9EfCpp_nJYIoYFQ">
            <textParameter xmi:id="_GcNj4Kk9EfCpp_nJYIoYFQ" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llNKk9EfCpp_nJYIoYFQ"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Blank_and_Null_0.1.definition#__TbUIJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTLn-Kk9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH(CASE WHEN   CHAR_LENGTH( TRIM(IFNULL(`firstname`,'')) ) =0  THEN '' ELSE  IFNULL(`firstname`,'') END)), COUNT(*) FROM `target`.`D_CUSTOMER` " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_HDJn0Kk9EfCpp_nJYIoYFQ" name="Average Length With Blank and Null" label="Average Length With Blank and Null">
            <taggedValue xmi:id="_HDJn0ak9EfCpp_nJYIoYFQ" tag="Description" value="computes the average length of the field, counting blank and null data as zero lenght values."/>
            <taggedValue xmi:id="_HDJn0qk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the average length of the textual record"/>
            <sqlGenericExpression xmi:id="_HDJn06k9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH(CASE WHEN   CHAR_LENGTH( TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'')) ) =0  THEN '' ELSE  IFNULL(&lt;%=__COLUMN_NAMES__%>,'') END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_HDJn1Kk9EfCpp_nJYIoYFQ" body="SELECT SUM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NOT NULL AND  TRIM(&lt;%=__COLUMN_NAMES__%>) IS NULL THEN 0 ELSE CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END  END), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_HDJn1ak9EfCpp_nJYIoYFQ" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) )=0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_HDJn1qk9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_HDJn16k9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_HDJn2Kk9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_HDJn2ak9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_HDJn2qk9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_HDJn26k9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_HDJn3Kk9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END ) ) =0  THEN '' ELSE   CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END  END)), COUNT(*) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_HDJn3ak9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_HDJn3qk9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH(CASE WHEN   CHAR_LENGTH( TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'')) ) =0  THEN '' ELSE  ISNULL(&lt;%=__COLUMN_NAMES__%>,'') END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </avgLengthWithBlankNullIndicator>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RowCountIndicator" xmi:id="_GcNj4qk9EfCpp_nJYIoYFQ" count="30" computed="true">
        <parameters xmi:id="_GcNj46k9EfCpp_nJYIoYFQ"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llOKk9EfCpp_nJYIoYFQ"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Row_Count_0.1.definition#_ccFOkBF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTLn4Kk9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM `target`.`D_CUSTOMER` " language="MySQL"/>
        <builtInIndicatorDefinition xmi:id="_HD7q8Kk9EfCpp_nJYIoYFQ" name="Row Count" label="Row Count">
          <taggedValue xmi:id="_HD7q8ak9EfCpp_nJYIoYFQ" tag="Description" value="counts the number of rows"/>
          <taggedValue xmi:id="_HD7q8qk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the number of records"/>
          <sqlGenericExpression xmi:id="_HD7q86k9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:NullCountIndicator" xmi:id="_GcNj5Kk9EfCpp_nJYIoYFQ" count="30" computed="true">
        <parameters xmi:id="_GcNj5ak9EfCpp_nJYIoYFQ"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llOKk9EfCpp_nJYIoYFQ"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Null_Count_0.1.definition#_GrAeADh9Ed2XmO7pl5Yuyg"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTLn_6k9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM `target`.`D_CUSTOMER` WHERE `lastname` IS NULL " language="MySQL"/>
        <builtInIndicatorDefinition xmi:id="_HEC_sKk9EfCpp_nJYIoYFQ" name="Null Count" label="Null Count">
          <taggedValue xmi:id="_HEC_sak9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluate the number of missing data (null records)"/>
          <taggedValue xmi:id="_HEC_sqk9EfCpp_nJYIoYFQ" tag="Description" value="counts the number of null rows"/>
          <sqlGenericExpression xmi:id="_HEC_s6k9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE &lt;%=__COLUMN_NAMES__%> IS NULL &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:DistinctCountIndicator" xmi:id="_GcNj5qk9EfCpp_nJYIoYFQ" count="30" computed="true" distinctValueCount="10">
        <parameters xmi:id="_GcNj56k9EfCpp_nJYIoYFQ"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llOKk9EfCpp_nJYIoYFQ"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Distinct_Count_0.1.definition#_ccHq0BF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTLoAKk9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT DISTINCT `lastname` FROM `target`.`D_CUSTOMER` ) A" language="MySQL"/>
        <builtInIndicatorDefinition xmi:id="_HEJGUKk9EfCpp_nJYIoYFQ" name="Distinct Count" label="Distinct Count">
          <taggedValue xmi:id="_HEJGUak9EfCpp_nJYIoYFQ" tag="Description" value="counts the number of distinct rows (like a &quot;SELECT DISTINCT&quot; SQL statement)"/>
          <taggedValue xmi:id="_HEJGUqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the number of distinct records"/>
          <sqlGenericExpression xmi:id="_HEJGU6k9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT DISTINCT &lt;%=__COLUMN_NAMES__%> FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>) A" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:UniqueCountIndicator" xmi:id="_GcNj6Kk9EfCpp_nJYIoYFQ" count="30" computed="true" uniqueValueCount="0">
        <parameters xmi:id="_GcNj6ak9EfCpp_nJYIoYFQ"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llOKk9EfCpp_nJYIoYFQ"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Unique_Count_0.1.definition#_ccHq0RF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTLoAak9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT `lastname`, COUNT(*) mycount FROM `target`.`D_CUSTOMER`  GROUP BY `lastname` HAVING mycount = 1) AS myquery" language="MySQL"/>
        <builtInIndicatorDefinition xmi:id="_HEP0AKk9EfCpp_nJYIoYFQ" name="Unique Count" label="Unique Count">
          <taggedValue xmi:id="_HEP0Aak9EfCpp_nJYIoYFQ" tag="Description" value="counts the number of unique rows (i.e. distinct rows with only one instance: rows that are not duplicated)"/>
          <taggedValue xmi:id="_HEP0Aqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the number of unique records"/>
          <sqlGenericExpression xmi:id="_HEP0A6k9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="SQL"/>
          <sqlGenericExpression xmi:id="_HEP0BKk9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount = 1) AS myquery" language="MySQL"/>
          <sqlGenericExpression xmi:id="_HEP0Bak9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) myquery" language="Oracle"/>
          <sqlGenericExpression xmi:id="_HEP0Bqk9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount = 1) AS myquery" language="Teradata"/>
          <sqlGenericExpression xmi:id="_HEP0B6k9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_HEP0CKk9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_HEP0Cak9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1)  myquery" language="Hive" version=""/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:DuplicateCountIndicator" xmi:id="_GcNj6qk9EfCpp_nJYIoYFQ" count="30" computed="true" duplicateValueCount="10">
        <parameters xmi:id="_GcNj66k9EfCpp_nJYIoYFQ"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llOKk9EfCpp_nJYIoYFQ"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Duplicate_Count_0.1.definition#_ccHq0hF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTLoAqk9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT `lastname`, COUNT(*) mycount FROM `target`.`D_CUSTOMER`  m  GROUP BY `lastname` HAVING mycount > 1) AS myquery" language="MySQL"/>
        <builtInIndicatorDefinition xmi:id="_HEWhsKk9EfCpp_nJYIoYFQ" name="Duplicate Count" label="Duplicate Count">
          <taggedValue xmi:id="_HEWhsak9EfCpp_nJYIoYFQ" tag="Description" value="counts the number of duplicate rows. This number and the number of unique data equals the number of distinct rows"/>
          <taggedValue xmi:id="_HEWhsqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the number of duplicated records"/>
          <sqlGenericExpression xmi:id="_HEWhs6k9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) AS myquery" language="SQL"/>
          <sqlGenericExpression xmi:id="_HEWhtKk9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount > 1) AS myquery" language="MySQL"/>
          <sqlGenericExpression xmi:id="_HEWhtak9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Oracle"/>
          <sqlGenericExpression xmi:id="_HEWhtqk9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount > 1) AS myquery" language="Teradata"/>
          <sqlGenericExpression xmi:id="_HEWht6k9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_HEWhuKk9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) AS myquery" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_HEWhuak9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Hive"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:BlankCountIndicator" xmi:id="_GcNj7Kk9EfCpp_nJYIoYFQ" count="30" computed="true">
        <parameters xmi:id="_GcNj7ak9EfCpp_nJYIoYFQ"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llOKk9EfCpp_nJYIoYFQ"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Blank_Count_0.1.definition#_ccHq0xF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTLoA6k9EfCpp_nJYIoYFQ" body="SELECT COUNT(`lastname`) FROM `target`.`D_CUSTOMER` WHERE TRIM(`lastname`) = '' " language="MySQL"/>
        <builtInIndicatorDefinition xmi:id="_HEfEkKk9EfCpp_nJYIoYFQ" name="Blank Count" label="Blank Count">
          <taggedValue xmi:id="_HEfEkak9EfCpp_nJYIoYFQ" tag="Description" value="counts the number of blank rows. A blank is a non null textual data that contains only white spaces (or nothing). Note that Oracle does not distinguish between the empty string and the null value"/>
          <taggedValue xmi:id="_HEfEkqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the number of blank records"/>
          <sqlGenericExpression xmi:id="_HEfEk6k9EfCpp_nJYIoYFQ" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE TRIM(&lt;%=__COLUMN_NAMES__%>) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_HEfElKk9EfCpp_nJYIoYFQ" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE TRIM(&lt;%=__COLUMN_NAMES__%>) IS NULL &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_HEfElak9EfCpp_nJYIoYFQ" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_HEfElqk9EfCpp_nJYIoYFQ" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_HEfEl6k9EfCpp_nJYIoYFQ" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> = '' or RTRIM(LTRIM(&lt;%=__COLUMN_NAMES__%>)) = '') &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:TextIndicator" xmi:id="_GcNj7qk9EfCpp_nJYIoYFQ">
        <parameters xmi:id="_GcNj76k9EfCpp_nJYIoYFQ"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llOKk9EfCpp_nJYIoYFQ"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Text_Statistics_0.1.definition#_yb9x0zh8Ed2XmO7pl5Yuyg"/>
        <averageLengthIndicator xmi:id="_GcNj8Kk9EfCpp_nJYIoYFQ" count="30" computed="true" sumLength="192.0">
          <parameters xmi:id="_GcNj8ak9EfCpp_nJYIoYFQ">
            <textParameter xmi:id="_GcNj8qk9EfCpp_nJYIoYFQ" useBlank="false"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llOKk9EfCpp_nJYIoYFQ"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_0.1.definition#_ccIR4BF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTLoBKk9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH(`lastname`)), COUNT(`lastname`) FROM `target`.`D_CUSTOMER` WHERE (`lastname` IS NOT NULL ) AND (TRIM(IFNULL(`lastname`,'NULL TALEND')) &lt;> '' ) " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_HElyQKk9EfCpp_nJYIoYFQ" name="Average Length" label="Average Length">
            <taggedValue xmi:id="_HElyQak9EfCpp_nJYIoYFQ" tag="Description" value="computes the average length of the field. Does not take into account the null values when computing the average."/>
            <taggedValue xmi:id="_HElyQqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the average length of the textual record"/>
            <sqlGenericExpression xmi:id="_HElyQ6k9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_HElyRKk9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_HElyRak9EfCpp_nJYIoYFQ" body="SELECT SUM(LEN(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_HElyRqk9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_HElyR6k9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_HElySKk9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_HElySak9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_HElySqk9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_HElyS6k9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_HElyTKk9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )), COUNT( &lt;%=__COLUMN_NAMES__%> ) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_HElyTak9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_HElyTqk9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </averageLengthIndicator>
        <maxLengthIndicator xmi:id="_GcNj86k9EfCpp_nJYIoYFQ" computed="true" length="8">
          <parameters xmi:id="_GcNj9Kk9EfCpp_nJYIoYFQ">
            <textParameter xmi:id="_GcNj9ak9EfCpp_nJYIoYFQ" useBlank="false"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llOKk9EfCpp_nJYIoYFQ"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_0.1.definition#_ccHq1RF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTLoBak9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(`lastname`)) FROM `target`.`D_CUSTOMER` WHERE (`lastname` IS NOT NULL ) AND (TRIM(IFNULL(`lastname`,'NULL TALEND')) &lt;> '' ) " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_HEuVIKk9EfCpp_nJYIoYFQ" name="Maximal Length" label="Maximal Length">
            <taggedValue xmi:id="_HEuVIak9EfCpp_nJYIoYFQ" tag="Description" value="computes the maximal length of a text field."/>
            <taggedValue xmi:id="_HEuVIqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the length of the longest textual record"/>
            <sqlGenericExpression xmi:id="_HEuVI6k9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_HEuVJKk9EfCpp_nJYIoYFQ" body="SELECT MAX( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle" modificationDate=""/>
            <sqlGenericExpression xmi:id="_HEuVJak9EfCpp_nJYIoYFQ" body="SELECT MAX(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_HEuVJqk9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_HEuVJ6k9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_HEuVKKk9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_HEuVKak9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive" modificationDate=""/>
            <sqlGenericExpression xmi:id="_HEuVKqk9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_HEuVK6k9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' )  &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_HEuVLKk9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_HEuVLak9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_HEuVLqk9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </maxLengthIndicator>
        <minLengthIndicator xmi:id="_GcNj9qk9EfCpp_nJYIoYFQ" computed="true" length="5">
          <parameters xmi:id="_GcNj96k9EfCpp_nJYIoYFQ">
            <textParameter xmi:id="_GcNj-Kk9EfCpp_nJYIoYFQ" useBlank="false"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llOKk9EfCpp_nJYIoYFQ"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_0.1.definition#_ccHq1BF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTLoBqk9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(`lastname`)) FROM `target`.`D_CUSTOMER` WHERE (`lastname` IS NOT NULL ) AND (TRIM(IFNULL(`lastname`,'NULL TALEND')) &lt;> '' ) " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_HE1C0Kk9EfCpp_nJYIoYFQ" name="Minimal Length" label="Minimal Length">
            <taggedValue xmi:id="_HE1C0ak9EfCpp_nJYIoYFQ" tag="Description" value="computes the minimal length of a text field. Does not take into account the null values when computing the minimal length."/>
            <taggedValue xmi:id="_HE1C0qk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the length of the smallest textual record"/>
            <sqlGenericExpression xmi:id="_HE1C06k9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_HE1C1Kk9EfCpp_nJYIoYFQ" body="SELECT MIN( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_HE1C1ak9EfCpp_nJYIoYFQ" body="SELECT MIN(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_HE1C1qk9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_HE1C16k9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_HE1C2Kk9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_HE1C2ak9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_HE1C2qk9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_HE1C26k9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_HE1C3Kk9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_HE1C3ak9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (1=1) AND (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_HE1C3qk9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </minLengthIndicator>
        <minLengthWithBlankIndicator xmi:id="_GcNj-ak9EfCpp_nJYIoYFQ" computed="true" length="5">
          <parameters xmi:id="_GcNj-qk9EfCpp_nJYIoYFQ">
            <textParameter xmi:id="_GcNj-6k9EfCpp_nJYIoYFQ"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llOKk9EfCpp_nJYIoYFQ"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Blank_0.1.definition#_G4EzQZU9Ed-Y15ulK_jijQ"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTMO8Kk9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(`lastname`)) FROM `target`.`D_CUSTOMER` WHERE (`lastname` IS NOT NULL ) " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_HFpiMKk9EfCpp_nJYIoYFQ" name="Minimal Length With Blank" label="Minimal Length With Blank">
            <taggedValue xmi:id="_HFpiMak9EfCpp_nJYIoYFQ" tag="Description" value="computes the minimal length of a text field, counting blank as zero length values."/>
            <taggedValue xmi:id="_HFpiMqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the length of the smallest textual record"/>
            <sqlGenericExpression xmi:id="_HFpiM6k9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_HFpiNKk9EfCpp_nJYIoYFQ" body="SELECT MIN( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_HFpiNak9EfCpp_nJYIoYFQ" body="SELECT MIN(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_HFpiNqk9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_HFpiN6k9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_HFpiOKk9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_HFpiOak9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_HFpiOqk9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_HFpiO6k9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_HFpiPKk9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_HFpiPak9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          </builtInIndicatorDefinition>
        </minLengthWithBlankIndicator>
        <minLengthWithNullIndicator xmi:id="_GcNj_Kk9EfCpp_nJYIoYFQ" computed="true" length="5">
          <parameters xmi:id="_GcNj_ak9EfCpp_nJYIoYFQ">
            <textParameter xmi:id="_GcNj_qk9EfCpp_nJYIoYFQ" useBlank="false" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llOKk9EfCpp_nJYIoYFQ"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Null_0.1.definition#_a4KsoI1qEd-xwI2imLgHRA"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTMO8ak9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(IFNULL(`lastname`,''))) FROM `target`.`D_CUSTOMER` WHERE (TRIM(IFNULL(`lastname`,'NULL TALEND')) &lt;> '' ) " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_HFw28Kk9EfCpp_nJYIoYFQ" name="Minimal Length With Null" label="Minimal Length With Null">
            <taggedValue xmi:id="_HFw28ak9EfCpp_nJYIoYFQ" tag="Description" value="computes the minimal length of a text field, counting null as zero length values."/>
            <taggedValue xmi:id="_HFw28qk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the length of the smallest textual record"/>
            <sqlGenericExpression xmi:id="_HFw286k9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_HFw29Kk9EfCpp_nJYIoYFQ" body="SELECT MIN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_HFw29ak9EfCpp_nJYIoYFQ" body="SELECT MIN(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_HFw29qk9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_HFw296k9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_HFw2-Kk9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_HFw2-ak9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_HFw2-qk9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_HFw2-6k9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_HFw2_Kk9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_HFw2_ak9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_HFw2_qk9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </minLengthWithNullIndicator>
        <minLengthWithBlankNullIndicator xmi:id="_GcNj_6k9EfCpp_nJYIoYFQ" computed="true" length="5">
          <parameters xmi:id="_GcNkAKk9EfCpp_nJYIoYFQ">
            <textParameter xmi:id="_GcNkAak9EfCpp_nJYIoYFQ" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llOKk9EfCpp_nJYIoYFQ"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Blank_and_Null_0.1.definition#_9HDjMJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTMO8qk9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(IFNULL(`lastname`,''))) FROM `target`.`D_CUSTOMER` " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_HF3koKk9EfCpp_nJYIoYFQ" name="Minimal Length With Blank and Null" label="Minimal Length With Blank and Null">
            <taggedValue xmi:id="_HF3koak9EfCpp_nJYIoYFQ" tag="Description" value="computes the minimal length of a text field, counting blank and null as zero length values."/>
            <taggedValue xmi:id="_HF3koqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the length of the smallest textual record"/>
            <sqlGenericExpression xmi:id="_HF3ko6k9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_HF3kpKk9EfCpp_nJYIoYFQ" body="SELECT MIN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_HF3kpak9EfCpp_nJYIoYFQ" body="SELECT MIN(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_HF3kpqk9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_HF3kp6k9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_HF3kqKk9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_HF3kqak9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_HF3kqqk9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_HF3kq6k9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_HF3krKk9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_HF3krak9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_HF3krqk9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </minLengthWithBlankNullIndicator>
        <maxLengthWithBlankIndicator xmi:id="_GcNkAqk9EfCpp_nJYIoYFQ" computed="true" length="8">
          <parameters xmi:id="_GcNkA6k9EfCpp_nJYIoYFQ">
            <textParameter xmi:id="_GcNkBKk9EfCpp_nJYIoYFQ"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llOKk9EfCpp_nJYIoYFQ"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Blank_0.1.definition#_-xmZcJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTLoCqk9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(`lastname`)) FROM `target`.`D_CUSTOMER` WHERE (`lastname` IS NOT NULL ) " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_HFUyEKk9EfCpp_nJYIoYFQ" name="Maximal Length With Blank" label="Maximal Length With Blank">
            <taggedValue xmi:id="_HFUyEak9EfCpp_nJYIoYFQ" tag="Description" value="computes the maximal length of a text field, counting blank data  as zero length values."/>
            <taggedValue xmi:id="_HFUyEqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the length of the longest textual record"/>
            <sqlGenericExpression xmi:id="_HFUyE6k9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_HFUyFKk9EfCpp_nJYIoYFQ" body="SELECT MAX( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_HFUyFak9EfCpp_nJYIoYFQ" body="SELECT MAX(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_HFUyFqk9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_HFUyF6k9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_HFUyGKk9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_HFUyGak9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_HFUyGqk9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_HFUyG6k9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_HFUyHKk9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_HFUyHak9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          </builtInIndicatorDefinition>
        </maxLengthWithBlankIndicator>
        <maxLengthWithNullIndicator xmi:id="_GcNkBak9EfCpp_nJYIoYFQ" computed="true" length="8">
          <parameters xmi:id="_GcNkBqk9EfCpp_nJYIoYFQ">
            <textParameter xmi:id="_GcNkB6k9EfCpp_nJYIoYFQ" useBlank="false" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llOKk9EfCpp_nJYIoYFQ"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Null_0.1.definition#_-_UFUJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTLoC6k9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(IFNULL(`lastname`,''))) FROM `target`.`D_CUSTOMER` WHERE (TRIM(IFNULL(`lastname`,'NULL TALEND')) &lt;> '' ) " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_HFbfwKk9EfCpp_nJYIoYFQ" name="Maximal Length With Null" label="Maximal Length With Null">
            <taggedValue xmi:id="_HFbfwak9EfCpp_nJYIoYFQ" tag="Description" value="computes the maximal length of a text field, counting null data as zero length values."/>
            <taggedValue xmi:id="_HFbfwqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the length of the longest textual record"/>
            <sqlGenericExpression xmi:id="_HFbfw6k9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_HFbfxKk9EfCpp_nJYIoYFQ" body="SELECT MAX(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_HFbfxak9EfCpp_nJYIoYFQ" body="SELECT MAX(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_HFbfxqk9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_HFbfx6k9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_HFbfyKk9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_HFbfyak9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive" version=""/>
            <sqlGenericExpression xmi:id="_HFbfyqk9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_HFbfy6k9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_HFbfzKk9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_HFbfzak9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_HFbfzqk9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </maxLengthWithNullIndicator>
        <maxLengthWithBlankNullIndicator xmi:id="_GcNkCKk9EfCpp_nJYIoYFQ" computed="true" length="8">
          <parameters xmi:id="_GcNkCak9EfCpp_nJYIoYFQ">
            <textParameter xmi:id="_GcNkCqk9EfCpp_nJYIoYFQ" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llOKk9EfCpp_nJYIoYFQ"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Blank_and_Null_0.1.definition#_-hzp8JSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTLoDKk9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(IFNULL(`lastname`,''))) FROM `target`.`D_CUSTOMER` " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_HFi0gKk9EfCpp_nJYIoYFQ" name="Maximal Length With Blank and Null" label="Maximal Length With Blank and Null">
            <taggedValue xmi:id="_HFi0gak9EfCpp_nJYIoYFQ" tag="Description" value="computes the maximal length of a text field, counting null and blank data as zero length values."/>
            <taggedValue xmi:id="_HFi0gqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the length of the longest textual record"/>
            <sqlGenericExpression xmi:id="_HFi0g6k9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_HFi0hKk9EfCpp_nJYIoYFQ" body="SELECT MAX(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_HFi0hak9EfCpp_nJYIoYFQ" body="SELECT MAX(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_HFi0hqk9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_HFi0h6k9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_HFi0iKk9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_HFi0iak9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_HFi0iqk9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_HFi0i6k9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_HFi0jKk9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_HFi0jak9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_HFi0jqk9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </maxLengthWithBlankNullIndicator>
        <avgLengthWithBlankIndicator xmi:id="_GcNkC6k9EfCpp_nJYIoYFQ" count="30" computed="true" sumLength="192.0">
          <parameters xmi:id="_GcNkDKk9EfCpp_nJYIoYFQ">
            <textParameter xmi:id="_GcNkDak9EfCpp_nJYIoYFQ"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llOKk9EfCpp_nJYIoYFQ"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Blank_0.1.definition#__gPoIJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTLoB6k9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH(CASE WHEN   CHAR_LENGTH( TRIM(`lastname`) ) =0  THEN '' ELSE  `lastname` END)), COUNT(*) FROM `target`.`D_CUSTOMER` WHERE (`lastname` IS NOT NULL ) " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_HE8-oKk9EfCpp_nJYIoYFQ" name="Average Length With Blank" label="Average Length With Blank">
            <taggedValue xmi:id="_HE8-oak9EfCpp_nJYIoYFQ" tag="Description" value="computes the average length of the field, counting blank data as zero length values."/>
            <taggedValue xmi:id="_HE8-oqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the average length of the textual record"/>
            <sqlGenericExpression xmi:id="_HE8-o6k9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH(CASE WHEN   CHAR_LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_HE8-pKk9EfCpp_nJYIoYFQ" body="SELECT SUM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NOT NULL AND  TRIM(&lt;%=__COLUMN_NAMES__%>) IS NULL THEN 0 ELSE  LENGTH(&lt;%=__COLUMN_NAMES__%>)END), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_HE8-pak9EfCpp_nJYIoYFQ" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) )=0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_HE8-pqk9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_HE8-p6k9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_HE8-qKk9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_HE8-qak9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_HE8-qqk9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_HE8-q6k9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_HE8-rKk9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM( &lt;%=__COLUMN_NAMES__%> ) ) =0  THEN '' ELSE   &lt;%=__COLUMN_NAMES__%>  END)), COUNT(*) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_HE8-rak9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          </builtInIndicatorDefinition>
        </avgLengthWithBlankIndicator>
        <avgLengthWithNullIndicator xmi:id="_GcNkDqk9EfCpp_nJYIoYFQ" count="30" computed="true" sumLength="192.0">
          <parameters xmi:id="_GcNkD6k9EfCpp_nJYIoYFQ">
            <textParameter xmi:id="_GcNkEKk9EfCpp_nJYIoYFQ" useBlank="false" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llOKk9EfCpp_nJYIoYFQ"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Null_0.1.definition#__vI_wJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTLoCKk9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH(IFNULL(`lastname`,''))), COUNT(*) FROM `target`.`D_CUSTOMER` WHERE (TRIM(IFNULL(`lastname`,'NULL TALEND')) &lt;> '' ) " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_HFFhgKk9EfCpp_nJYIoYFQ" name="Average Length With Null" label="Average Length With Null">
            <taggedValue xmi:id="_HFFhgak9EfCpp_nJYIoYFQ" tag="Description" value="computes the average length of the field, counting null data as zero length values."/>
            <taggedValue xmi:id="_HFFhgqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the average length of the textual record"/>
            <sqlGenericExpression xmi:id="_HFFhg6k9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_HFFhhKk9EfCpp_nJYIoYFQ" body="SELECT SUM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_HFFhhak9EfCpp_nJYIoYFQ" body="SELECT SUM(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_HFFhhqk9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_HFFhh6k9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_HFFhiKk9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_HFFhiak9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_HFFhiqk9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_HFFhi6k9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_HFFhjKk9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_HFFhjak9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_HFFhjqk9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </avgLengthWithNullIndicator>
        <avgLengthWithBlankNullIndicator xmi:id="_GcNkEak9EfCpp_nJYIoYFQ" count="30" computed="true" sumLength="192.0">
          <parameters xmi:id="_GcNkEqk9EfCpp_nJYIoYFQ">
            <textParameter xmi:id="_GcNkE6k9EfCpp_nJYIoYFQ" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llOKk9EfCpp_nJYIoYFQ"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Blank_and_Null_0.1.definition#__TbUIJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTLoCak9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH(CASE WHEN   CHAR_LENGTH( TRIM(IFNULL(`lastname`,'')) ) =0  THEN '' ELSE  IFNULL(`lastname`,'') END)), COUNT(*) FROM `target`.`D_CUSTOMER` " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_HFMPMKk9EfCpp_nJYIoYFQ" name="Average Length With Blank and Null" label="Average Length With Blank and Null">
            <taggedValue xmi:id="_HFMPMak9EfCpp_nJYIoYFQ" tag="Description" value="computes the average length of the field, counting blank and null data as zero lenght values."/>
            <taggedValue xmi:id="_HFMPMqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the average length of the textual record"/>
            <sqlGenericExpression xmi:id="_HFMPM6k9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH(CASE WHEN   CHAR_LENGTH( TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'')) ) =0  THEN '' ELSE  IFNULL(&lt;%=__COLUMN_NAMES__%>,'') END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_HFMPNKk9EfCpp_nJYIoYFQ" body="SELECT SUM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NOT NULL AND  TRIM(&lt;%=__COLUMN_NAMES__%>) IS NULL THEN 0 ELSE CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END  END), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_HFMPNak9EfCpp_nJYIoYFQ" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) )=0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_HFMPNqk9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_HFMPN6k9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_HFMPOKk9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_HFMPOak9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_HFMPOqk9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_HFMPO6k9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_HFMPPKk9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END ) ) =0  THEN '' ELSE   CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END  END)), COUNT(*) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_HFMPPak9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_HFMPPqk9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH(CASE WHEN   CHAR_LENGTH( TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'')) ) =0  THEN '' ELSE  ISNULL(&lt;%=__COLUMN_NAMES__%>,'') END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </avgLengthWithBlankNullIndicator>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RowCountIndicator" xmi:id="_GcNkFak9EfCpp_nJYIoYFQ" count="30" computed="true">
        <parameters xmi:id="_GcNkFqk9EfCpp_nJYIoYFQ"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llPKk9EfCpp_nJYIoYFQ"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Row_Count_0.1.definition#_ccFOkBF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTLn5qk9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM `target`.`D_CUSTOMER` " language="MySQL"/>
        <builtInIndicatorDefinition xmi:id="_HF-5YKk9EfCpp_nJYIoYFQ" name="Row Count" label="Row Count">
          <taggedValue xmi:id="_HF-5Yak9EfCpp_nJYIoYFQ" tag="Description" value="counts the number of rows"/>
          <taggedValue xmi:id="_HF-5Yqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the number of records"/>
          <sqlGenericExpression xmi:id="_HF-5Y6k9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:NullCountIndicator" xmi:id="_GcNkF6k9EfCpp_nJYIoYFQ" count="30" computed="true">
        <parameters xmi:id="_GcNkGKk9EfCpp_nJYIoYFQ"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llPKk9EfCpp_nJYIoYFQ"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Null_Count_0.1.definition#_GrAeADh9Ed2XmO7pl5Yuyg"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTMO86k9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM `target`.`D_CUSTOMER` WHERE `email` IS NULL " language="MySQL"/>
        <builtInIndicatorDefinition xmi:id="_HGFnEKk9EfCpp_nJYIoYFQ" name="Null Count" label="Null Count">
          <taggedValue xmi:id="_HGFnEak9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluate the number of missing data (null records)"/>
          <taggedValue xmi:id="_HGFnEqk9EfCpp_nJYIoYFQ" tag="Description" value="counts the number of null rows"/>
          <sqlGenericExpression xmi:id="_HGFnE6k9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE &lt;%=__COLUMN_NAMES__%> IS NULL &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:DistinctCountIndicator" xmi:id="_GcNkGak9EfCpp_nJYIoYFQ" count="30" computed="true" distinctValueCount="10">
        <parameters xmi:id="_GcNkGqk9EfCpp_nJYIoYFQ"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llPKk9EfCpp_nJYIoYFQ"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Distinct_Count_0.1.definition#_ccHq0BF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTMO9Kk9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT DISTINCT `email` FROM `target`.`D_CUSTOMER` ) A" language="MySQL"/>
        <builtInIndicatorDefinition xmi:id="_HGOxAKk9EfCpp_nJYIoYFQ" name="Distinct Count" label="Distinct Count">
          <taggedValue xmi:id="_HGOxAak9EfCpp_nJYIoYFQ" tag="Description" value="counts the number of distinct rows (like a &quot;SELECT DISTINCT&quot; SQL statement)"/>
          <taggedValue xmi:id="_HGOxAqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the number of distinct records"/>
          <sqlGenericExpression xmi:id="_HGOxA6k9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT DISTINCT &lt;%=__COLUMN_NAMES__%> FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>) A" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:UniqueCountIndicator" xmi:id="_GcNkG6k9EfCpp_nJYIoYFQ" count="30" computed="true" uniqueValueCount="0">
        <parameters xmi:id="_GcNkHKk9EfCpp_nJYIoYFQ"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llPKk9EfCpp_nJYIoYFQ"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Unique_Count_0.1.definition#_ccHq0RF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTMO9ak9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT `email`, COUNT(*) mycount FROM `target`.`D_CUSTOMER`  GROUP BY `email` HAVING mycount = 1) AS myquery" language="MySQL"/>
        <builtInIndicatorDefinition xmi:id="_HGVesKk9EfCpp_nJYIoYFQ" name="Unique Count" label="Unique Count">
          <taggedValue xmi:id="_HGVesak9EfCpp_nJYIoYFQ" tag="Description" value="counts the number of unique rows (i.e. distinct rows with only one instance: rows that are not duplicated)"/>
          <taggedValue xmi:id="_HGVesqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the number of unique records"/>
          <sqlGenericExpression xmi:id="_HGVes6k9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="SQL"/>
          <sqlGenericExpression xmi:id="_HGVetKk9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount = 1) AS myquery" language="MySQL"/>
          <sqlGenericExpression xmi:id="_HGVetak9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) myquery" language="Oracle"/>
          <sqlGenericExpression xmi:id="_HGVetqk9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount = 1) AS myquery" language="Teradata"/>
          <sqlGenericExpression xmi:id="_HGVet6k9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_HGVeuKk9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_HGVeuak9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1)  myquery" language="Hive" version=""/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:DuplicateCountIndicator" xmi:id="_GcNkHak9EfCpp_nJYIoYFQ" count="30" computed="true" duplicateValueCount="10">
        <parameters xmi:id="_GcNkHqk9EfCpp_nJYIoYFQ"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llPKk9EfCpp_nJYIoYFQ"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Duplicate_Count_0.1.definition#_ccHq0hF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTMO9qk9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT `email`, COUNT(*) mycount FROM `target`.`D_CUSTOMER`  m  GROUP BY `email` HAVING mycount > 1) AS myquery" language="MySQL"/>
        <builtInIndicatorDefinition xmi:id="_HGdagKk9EfCpp_nJYIoYFQ" name="Duplicate Count" label="Duplicate Count">
          <taggedValue xmi:id="_HGdagak9EfCpp_nJYIoYFQ" tag="Description" value="counts the number of duplicate rows. This number and the number of unique data equals the number of distinct rows"/>
          <taggedValue xmi:id="_HGdagqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the number of duplicated records"/>
          <sqlGenericExpression xmi:id="_HGdag6k9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) AS myquery" language="SQL"/>
          <sqlGenericExpression xmi:id="_HGdahKk9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount > 1) AS myquery" language="MySQL"/>
          <sqlGenericExpression xmi:id="_HGdahak9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Oracle"/>
          <sqlGenericExpression xmi:id="_HGdahqk9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount > 1) AS myquery" language="Teradata"/>
          <sqlGenericExpression xmi:id="_HGdah6k9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_HGdaiKk9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) AS myquery" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_HGdaiak9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Hive"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:BlankCountIndicator" xmi:id="_GcNkH6k9EfCpp_nJYIoYFQ" count="30" computed="true">
        <parameters xmi:id="_GcNkIKk9EfCpp_nJYIoYFQ"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llPKk9EfCpp_nJYIoYFQ"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Blank_Count_0.1.definition#_ccHq0xF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTMO96k9EfCpp_nJYIoYFQ" body="SELECT COUNT(`email`) FROM `target`.`D_CUSTOMER` WHERE TRIM(`email`) = '' " language="MySQL"/>
        <builtInIndicatorDefinition xmi:id="_HGkvQKk9EfCpp_nJYIoYFQ" name="Blank Count" label="Blank Count">
          <taggedValue xmi:id="_HGkvQak9EfCpp_nJYIoYFQ" tag="Description" value="counts the number of blank rows. A blank is a non null textual data that contains only white spaces (or nothing). Note that Oracle does not distinguish between the empty string and the null value"/>
          <taggedValue xmi:id="_HGkvQqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the number of blank records"/>
          <sqlGenericExpression xmi:id="_HGkvQ6k9EfCpp_nJYIoYFQ" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE TRIM(&lt;%=__COLUMN_NAMES__%>) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_HGkvRKk9EfCpp_nJYIoYFQ" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE TRIM(&lt;%=__COLUMN_NAMES__%>) IS NULL &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_HGkvRak9EfCpp_nJYIoYFQ" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_HGkvRqk9EfCpp_nJYIoYFQ" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_HGkvR6k9EfCpp_nJYIoYFQ" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> = '' or RTRIM(LTRIM(&lt;%=__COLUMN_NAMES__%>)) = '') &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:TextIndicator" xmi:id="_GcNkIak9EfCpp_nJYIoYFQ">
        <parameters xmi:id="_GcNkIqk9EfCpp_nJYIoYFQ"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llPKk9EfCpp_nJYIoYFQ"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Text_Statistics_0.1.definition#_yb9x0zh8Ed2XmO7pl5Yuyg"/>
        <averageLengthIndicator xmi:id="_GcNkI6k9EfCpp_nJYIoYFQ" count="30" computed="true" sumLength="828.0">
          <parameters xmi:id="_GcNkJKk9EfCpp_nJYIoYFQ">
            <textParameter xmi:id="_GcNkJak9EfCpp_nJYIoYFQ" useBlank="false"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llPKk9EfCpp_nJYIoYFQ"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_0.1.definition#_ccIR4BF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTMO-Kk9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH(`email`)), COUNT(`email`) FROM `target`.`D_CUSTOMER` WHERE (`email` IS NOT NULL ) AND (TRIM(IFNULL(`email`,'NULL TALEND')) &lt;> '' ) " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_HGnLgKk9EfCpp_nJYIoYFQ" name="Average Length" label="Average Length">
            <taggedValue xmi:id="_HGnLgak9EfCpp_nJYIoYFQ" tag="Description" value="computes the average length of the field. Does not take into account the null values when computing the average."/>
            <taggedValue xmi:id="_HGnLgqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the average length of the textual record"/>
            <sqlGenericExpression xmi:id="_HGnLg6k9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_HGnLhKk9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_HGnLhak9EfCpp_nJYIoYFQ" body="SELECT SUM(LEN(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_HGnLhqk9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_HGnLh6k9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_HGnLiKk9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_HGnLiak9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_HGnLiqk9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_HGnLi6k9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_HGnLjKk9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )), COUNT( &lt;%=__COLUMN_NAMES__%> ) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_HGnLjak9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_HGnLjqk9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </averageLengthIndicator>
        <maxLengthIndicator xmi:id="_GcNkJqk9EfCpp_nJYIoYFQ" computed="true" length="38">
          <parameters xmi:id="_GcNkJ6k9EfCpp_nJYIoYFQ">
            <textParameter xmi:id="_GcNkKKk9EfCpp_nJYIoYFQ" useBlank="false"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llPKk9EfCpp_nJYIoYFQ"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_0.1.definition#_ccHq1RF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTMO-ak9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(`email`)) FROM `target`.`D_CUSTOMER` WHERE (`email` IS NOT NULL ) AND (TRIM(IFNULL(`email`,'NULL TALEND')) &lt;> '' ) " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_HGugQKk9EfCpp_nJYIoYFQ" name="Maximal Length" label="Maximal Length">
            <taggedValue xmi:id="_HGugQak9EfCpp_nJYIoYFQ" tag="Description" value="computes the maximal length of a text field."/>
            <taggedValue xmi:id="_HGugQqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the length of the longest textual record"/>
            <sqlGenericExpression xmi:id="_HGugQ6k9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_HGugRKk9EfCpp_nJYIoYFQ" body="SELECT MAX( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle" modificationDate=""/>
            <sqlGenericExpression xmi:id="_HGugRak9EfCpp_nJYIoYFQ" body="SELECT MAX(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_HGugRqk9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_HGugR6k9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_HGugSKk9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_HGugSak9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive" modificationDate=""/>
            <sqlGenericExpression xmi:id="_HGugSqk9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_HGugS6k9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' )  &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_HGugTKk9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_HGugTak9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_HGugTqk9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </maxLengthIndicator>
        <minLengthIndicator xmi:id="_GcNkKak9EfCpp_nJYIoYFQ" computed="true" length="21">
          <parameters xmi:id="_GcNkKqk9EfCpp_nJYIoYFQ">
            <textParameter xmi:id="_GcNkK6k9EfCpp_nJYIoYFQ" useBlank="false"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llPKk9EfCpp_nJYIoYFQ"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_0.1.definition#_ccHq1BF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTMO-qk9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(`email`)) FROM `target`.`D_CUSTOMER` WHERE (`email` IS NOT NULL ) AND (TRIM(IFNULL(`email`,'NULL TALEND')) &lt;> '' ) " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_HG77oKk9EfCpp_nJYIoYFQ" name="Minimal Length" label="Minimal Length">
            <taggedValue xmi:id="_HG77oak9EfCpp_nJYIoYFQ" tag="Description" value="computes the minimal length of a text field. Does not take into account the null values when computing the minimal length."/>
            <taggedValue xmi:id="_HG77oqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the length of the smallest textual record"/>
            <sqlGenericExpression xmi:id="_HG77o6k9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_HG77pKk9EfCpp_nJYIoYFQ" body="SELECT MIN( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_HG77pak9EfCpp_nJYIoYFQ" body="SELECT MIN(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_HG77pqk9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_HG77p6k9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_HG77qKk9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_HG77qak9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_HG77qqk9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_HG77q6k9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_HG77rKk9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_HG77rak9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (1=1) AND (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_HG77rqk9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </minLengthIndicator>
        <minLengthWithBlankIndicator xmi:id="_GcNkLKk9EfCpp_nJYIoYFQ" computed="true" length="21">
          <parameters xmi:id="_GcNkLak9EfCpp_nJYIoYFQ">
            <textParameter xmi:id="_GcNkLqk9EfCpp_nJYIoYFQ"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llPKk9EfCpp_nJYIoYFQ"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Blank_0.1.definition#_G4EzQZU9Ed-Y15ulK_jijQ"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTMPAak9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(`email`)) FROM `target`.`D_CUSTOMER` WHERE (`email` IS NOT NULL ) " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_HHxCEKk9EfCpp_nJYIoYFQ" name="Minimal Length With Blank" label="Minimal Length With Blank">
            <taggedValue xmi:id="_HHxCEak9EfCpp_nJYIoYFQ" tag="Description" value="computes the minimal length of a text field, counting blank as zero length values."/>
            <taggedValue xmi:id="_HHxCEqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the length of the smallest textual record"/>
            <sqlGenericExpression xmi:id="_HHxCE6k9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_HHxCFKk9EfCpp_nJYIoYFQ" body="SELECT MIN( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_HHxCFak9EfCpp_nJYIoYFQ" body="SELECT MIN(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_HHxCFqk9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_HHxCF6k9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_HHxCGKk9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_HHxCGak9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_HHxCGqk9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_HHxCG6k9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_HHxCHKk9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_HHxCHak9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          </builtInIndicatorDefinition>
        </minLengthWithBlankIndicator>
        <minLengthWithNullIndicator xmi:id="_GcNkL6k9EfCpp_nJYIoYFQ" computed="true" length="21">
          <parameters xmi:id="_GcNkMKk9EfCpp_nJYIoYFQ">
            <textParameter xmi:id="_GcNkMak9EfCpp_nJYIoYFQ" useBlank="false" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llPKk9EfCpp_nJYIoYFQ"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Null_0.1.definition#_a4KsoI1qEd-xwI2imLgHRA"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTMPAqk9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(IFNULL(`email`,''))) FROM `target`.`D_CUSTOMER` WHERE (TRIM(IFNULL(`email`,'NULL TALEND')) &lt;> '' ) " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_HH4W0Kk9EfCpp_nJYIoYFQ" name="Minimal Length With Null" label="Minimal Length With Null">
            <taggedValue xmi:id="_HH4W0ak9EfCpp_nJYIoYFQ" tag="Description" value="computes the minimal length of a text field, counting null as zero length values."/>
            <taggedValue xmi:id="_HH4W0qk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the length of the smallest textual record"/>
            <sqlGenericExpression xmi:id="_HH4W06k9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_HH4W1Kk9EfCpp_nJYIoYFQ" body="SELECT MIN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_HH4W1ak9EfCpp_nJYIoYFQ" body="SELECT MIN(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_HH4W1qk9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_HH4W16k9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_HH4W2Kk9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_HH4W2ak9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_HH4W2qk9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_HH4W26k9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_HH4W3Kk9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_HH4W3ak9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_HH4W3qk9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </minLengthWithNullIndicator>
        <minLengthWithBlankNullIndicator xmi:id="_GcNkMqk9EfCpp_nJYIoYFQ" computed="true" length="21">
          <parameters xmi:id="_GcNkM6k9EfCpp_nJYIoYFQ">
            <textParameter xmi:id="_GcNkNKk9EfCpp_nJYIoYFQ" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llPKk9EfCpp_nJYIoYFQ"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Blank_and_Null_0.1.definition#_9HDjMJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTMPA6k9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(IFNULL(`email`,''))) FROM `target`.`D_CUSTOMER` " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_HH_rkKk9EfCpp_nJYIoYFQ" name="Minimal Length With Blank and Null" label="Minimal Length With Blank and Null">
            <taggedValue xmi:id="_HH_rkak9EfCpp_nJYIoYFQ" tag="Description" value="computes the minimal length of a text field, counting blank and null as zero length values."/>
            <taggedValue xmi:id="_HH_rkqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the length of the smallest textual record"/>
            <sqlGenericExpression xmi:id="_HH_rk6k9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_HH_rlKk9EfCpp_nJYIoYFQ" body="SELECT MIN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_HH_rlak9EfCpp_nJYIoYFQ" body="SELECT MIN(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_HH_rlqk9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_HH_rl6k9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_HH_rmKk9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_HH_rmak9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_HH_rmqk9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_HH_rm6k9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_HH_rnKk9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_HH_rnak9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_HH_rnqk9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </minLengthWithBlankNullIndicator>
        <maxLengthWithBlankIndicator xmi:id="_GcNkNak9EfCpp_nJYIoYFQ" computed="true" length="38">
          <parameters xmi:id="_GcNkNqk9EfCpp_nJYIoYFQ">
            <textParameter xmi:id="_GcNkN6k9EfCpp_nJYIoYFQ"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llPKk9EfCpp_nJYIoYFQ"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Blank_0.1.definition#_-xmZcJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTMO_qk9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(`email`)) FROM `target`.`D_CUSTOMER` WHERE (`email` IS NOT NULL ) " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_HHZOoKk9EfCpp_nJYIoYFQ" name="Maximal Length With Blank" label="Maximal Length With Blank">
            <taggedValue xmi:id="_HHZOoak9EfCpp_nJYIoYFQ" tag="Description" value="computes the maximal length of a text field, counting blank data  as zero length values."/>
            <taggedValue xmi:id="_HHZOoqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the length of the longest textual record"/>
            <sqlGenericExpression xmi:id="_HHZOo6k9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_HHZOpKk9EfCpp_nJYIoYFQ" body="SELECT MAX( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_HHZOpak9EfCpp_nJYIoYFQ" body="SELECT MAX(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_HHZOpqk9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_HHZOp6k9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_HHZOqKk9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_HHZOqak9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_HHZOqqk9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_HHZOq6k9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_HHZOrKk9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_HHZOrak9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          </builtInIndicatorDefinition>
        </maxLengthWithBlankIndicator>
        <maxLengthWithNullIndicator xmi:id="_GcNkOKk9EfCpp_nJYIoYFQ" computed="true" length="38">
          <parameters xmi:id="_GcNkOak9EfCpp_nJYIoYFQ">
            <textParameter xmi:id="_GcNkOqk9EfCpp_nJYIoYFQ" useBlank="false" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llPKk9EfCpp_nJYIoYFQ"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Null_0.1.definition#_-_UFUJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTMO_6k9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(IFNULL(`email`,''))) FROM `target`.`D_CUSTOMER` WHERE (TRIM(IFNULL(`email`,'NULL TALEND')) &lt;> '' ) " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_HHgjYKk9EfCpp_nJYIoYFQ" name="Maximal Length With Null" label="Maximal Length With Null">
            <taggedValue xmi:id="_HHgjYak9EfCpp_nJYIoYFQ" tag="Description" value="computes the maximal length of a text field, counting null data as zero length values."/>
            <taggedValue xmi:id="_HHgjYqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the length of the longest textual record"/>
            <sqlGenericExpression xmi:id="_HHgjY6k9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_HHgjZKk9EfCpp_nJYIoYFQ" body="SELECT MAX(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_HHgjZak9EfCpp_nJYIoYFQ" body="SELECT MAX(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_HHgjZqk9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_HHgjZ6k9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_HHgjaKk9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_HHgjaak9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive" version=""/>
            <sqlGenericExpression xmi:id="_HHgjaqk9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_HHgja6k9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_HHgjbKk9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_HHgjbak9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_HHgjbqk9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </maxLengthWithNullIndicator>
        <maxLengthWithBlankNullIndicator xmi:id="_GcNkO6k9EfCpp_nJYIoYFQ" computed="true" length="38">
          <parameters xmi:id="_GcNkPKk9EfCpp_nJYIoYFQ">
            <textParameter xmi:id="_GcNkPak9EfCpp_nJYIoYFQ" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llPKk9EfCpp_nJYIoYFQ"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Blank_and_Null_0.1.definition#_-hzp8JSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTMPAKk9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(IFNULL(`email`,''))) FROM `target`.`D_CUSTOMER` " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_HHn4IKk9EfCpp_nJYIoYFQ" name="Maximal Length With Blank and Null" label="Maximal Length With Blank and Null">
            <taggedValue xmi:id="_HHn4Iak9EfCpp_nJYIoYFQ" tag="Description" value="computes the maximal length of a text field, counting null and blank data as zero length values."/>
            <taggedValue xmi:id="_HHn4Iqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the length of the longest textual record"/>
            <sqlGenericExpression xmi:id="_HHn4I6k9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_HHn4JKk9EfCpp_nJYIoYFQ" body="SELECT MAX(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_HHn4Jak9EfCpp_nJYIoYFQ" body="SELECT MAX(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_HHn4Jqk9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_HHn4J6k9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_HHn4KKk9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_HHn4Kak9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_HHn4Kqk9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_HHn4K6k9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_HHn4LKk9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_HHn4Lak9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_HHn4Lqk9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </maxLengthWithBlankNullIndicator>
        <avgLengthWithBlankIndicator xmi:id="_GcNkPqk9EfCpp_nJYIoYFQ" count="30" computed="true" sumLength="828.0">
          <parameters xmi:id="_GcNkP6k9EfCpp_nJYIoYFQ">
            <textParameter xmi:id="_GcNkQKk9EfCpp_nJYIoYFQ"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llPKk9EfCpp_nJYIoYFQ"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Blank_0.1.definition#__gPoIJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTMO-6k9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH(CASE WHEN   CHAR_LENGTH( TRIM(`email`) ) =0  THEN '' ELSE  `email` END)), COUNT(*) FROM `target`.`D_CUSTOMER` WHERE (`email` IS NOT NULL ) " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_HHDQYKk9EfCpp_nJYIoYFQ" name="Average Length With Blank" label="Average Length With Blank">
            <taggedValue xmi:id="_HHDQYak9EfCpp_nJYIoYFQ" tag="Description" value="computes the average length of the field, counting blank data as zero length values."/>
            <taggedValue xmi:id="_HHDQYqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the average length of the textual record"/>
            <sqlGenericExpression xmi:id="_HHDQY6k9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH(CASE WHEN   CHAR_LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_HHDQZKk9EfCpp_nJYIoYFQ" body="SELECT SUM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NOT NULL AND  TRIM(&lt;%=__COLUMN_NAMES__%>) IS NULL THEN 0 ELSE  LENGTH(&lt;%=__COLUMN_NAMES__%>)END), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_HHDQZak9EfCpp_nJYIoYFQ" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) )=0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_HHDQZqk9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_HHDQZ6k9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_HHDQaKk9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_HHDQaak9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_HHDQaqk9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_HHDQa6k9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_HHDQbKk9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM( &lt;%=__COLUMN_NAMES__%> ) ) =0  THEN '' ELSE   &lt;%=__COLUMN_NAMES__%>  END)), COUNT(*) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_HHDQbak9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          </builtInIndicatorDefinition>
        </avgLengthWithBlankIndicator>
        <avgLengthWithNullIndicator xmi:id="_GcNkQak9EfCpp_nJYIoYFQ" count="30" computed="true" sumLength="828.0">
          <parameters xmi:id="_GcNkQqk9EfCpp_nJYIoYFQ">
            <textParameter xmi:id="_GcNkQ6k9EfCpp_nJYIoYFQ" useBlank="false" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llPKk9EfCpp_nJYIoYFQ"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Null_0.1.definition#__vI_wJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTMO_Kk9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH(IFNULL(`email`,''))), COUNT(*) FROM `target`.`D_CUSTOMER` WHERE (TRIM(IFNULL(`email`,'NULL TALEND')) &lt;> '' ) " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_HHKlIKk9EfCpp_nJYIoYFQ" name="Average Length With Null" label="Average Length With Null">
            <taggedValue xmi:id="_HHKlIak9EfCpp_nJYIoYFQ" tag="Description" value="computes the average length of the field, counting null data as zero length values."/>
            <taggedValue xmi:id="_HHKlIqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the average length of the textual record"/>
            <sqlGenericExpression xmi:id="_HHKlI6k9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_HHKlJKk9EfCpp_nJYIoYFQ" body="SELECT SUM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_HHKlJak9EfCpp_nJYIoYFQ" body="SELECT SUM(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_HHKlJqk9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_HHKlJ6k9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_HHKlKKk9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_HHKlKak9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_HHKlKqk9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_HHKlK6k9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_HHKlLKk9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_HHKlLak9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_HHKlLqk9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </avgLengthWithNullIndicator>
        <avgLengthWithBlankNullIndicator xmi:id="_GcNkRKk9EfCpp_nJYIoYFQ" count="30" computed="true" sumLength="828.0">
          <parameters xmi:id="_GcNkRak9EfCpp_nJYIoYFQ">
            <textParameter xmi:id="_GcNkRqk9EfCpp_nJYIoYFQ" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llPKk9EfCpp_nJYIoYFQ"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Blank_and_Null_0.1.definition#__TbUIJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTMO_ak9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH(CASE WHEN   CHAR_LENGTH( TRIM(IFNULL(`email`,'')) ) =0  THEN '' ELSE  IFNULL(`email`,'') END)), COUNT(*) FROM `target`.`D_CUSTOMER` " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_HHR54Kk9EfCpp_nJYIoYFQ" name="Average Length With Blank and Null" label="Average Length With Blank and Null">
            <taggedValue xmi:id="_HHSg8Kk9EfCpp_nJYIoYFQ" tag="Description" value="computes the average length of the field, counting blank and null data as zero lenght values."/>
            <taggedValue xmi:id="_HHSg8ak9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the average length of the textual record"/>
            <sqlGenericExpression xmi:id="_HHSg8qk9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH(CASE WHEN   CHAR_LENGTH( TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'')) ) =0  THEN '' ELSE  IFNULL(&lt;%=__COLUMN_NAMES__%>,'') END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_HHSg86k9EfCpp_nJYIoYFQ" body="SELECT SUM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NOT NULL AND  TRIM(&lt;%=__COLUMN_NAMES__%>) IS NULL THEN 0 ELSE CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END  END), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_HHSg9Kk9EfCpp_nJYIoYFQ" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) )=0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_HHSg9ak9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_HHSg9qk9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_HHSg96k9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_HHSg-Kk9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_HHSg-ak9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_HHSg-qk9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_HHSg-6k9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END ) ) =0  THEN '' ELSE   CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END  END)), COUNT(*) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_HHSg_Kk9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_HHSg_ak9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH(CASE WHEN   CHAR_LENGTH( TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'')) ) =0  THEN '' ELSE  ISNULL(&lt;%=__COLUMN_NAMES__%>,'') END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </avgLengthWithBlankNullIndicator>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RowCountIndicator" xmi:id="_GcNkSKk9EfCpp_nJYIoYFQ" count="30" computed="true">
        <parameters xmi:id="_GcNkSak9EfCpp_nJYIoYFQ"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llQKk9EfCpp_nJYIoYFQ"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Row_Count_0.1.definition#_ccFOkBF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTLn5ak9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM `target`.`D_CUSTOMER` " language="MySQL"/>
        <builtInIndicatorDefinition xmi:id="_HIHAUKk9EfCpp_nJYIoYFQ" name="Row Count" label="Row Count">
          <taggedValue xmi:id="_HIHAUak9EfCpp_nJYIoYFQ" tag="Description" value="counts the number of rows"/>
          <taggedValue xmi:id="_HIHAUqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the number of records"/>
          <sqlGenericExpression xmi:id="_HIHAU6k9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:NullCountIndicator" xmi:id="_GcNkSqk9EfCpp_nJYIoYFQ" count="30" computed="true">
        <parameters xmi:id="_GcNkS6k9EfCpp_nJYIoYFQ"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llQKk9EfCpp_nJYIoYFQ"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Null_Count_0.1.definition#_GrAeADh9Ed2XmO7pl5Yuyg"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTMPBKk9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM `target`.`D_CUSTOMER` WHERE `streetAddress` IS NULL " language="MySQL"/>
        <builtInIndicatorDefinition xmi:id="_HIQKQKk9EfCpp_nJYIoYFQ" name="Null Count" label="Null Count">
          <taggedValue xmi:id="_HIQKQak9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluate the number of missing data (null records)"/>
          <taggedValue xmi:id="_HIQKQqk9EfCpp_nJYIoYFQ" tag="Description" value="counts the number of null rows"/>
          <sqlGenericExpression xmi:id="_HIQKQ6k9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE &lt;%=__COLUMN_NAMES__%> IS NULL &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:DistinctCountIndicator" xmi:id="_GcNkTKk9EfCpp_nJYIoYFQ" count="30" computed="true" distinctValueCount="10">
        <parameters xmi:id="_GcNkTak9EfCpp_nJYIoYFQ"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llQKk9EfCpp_nJYIoYFQ"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Distinct_Count_0.1.definition#_ccHq0BF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTMPBak9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT DISTINCT `streetAddress` FROM `target`.`D_CUSTOMER` ) A" language="MySQL"/>
        <builtInIndicatorDefinition xmi:id="_HIaiUKk9EfCpp_nJYIoYFQ" name="Distinct Count" label="Distinct Count">
          <taggedValue xmi:id="_HIaiUak9EfCpp_nJYIoYFQ" tag="Description" value="counts the number of distinct rows (like a &quot;SELECT DISTINCT&quot; SQL statement)"/>
          <taggedValue xmi:id="_HIaiUqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the number of distinct records"/>
          <sqlGenericExpression xmi:id="_HIaiU6k9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT DISTINCT &lt;%=__COLUMN_NAMES__%> FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>) A" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:UniqueCountIndicator" xmi:id="_GcNkTqk9EfCpp_nJYIoYFQ" count="30" computed="true" uniqueValueCount="0">
        <parameters xmi:id="_GcNkT6k9EfCpp_nJYIoYFQ"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llQKk9EfCpp_nJYIoYFQ"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Unique_Count_0.1.definition#_ccHq0RF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTMPBqk9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT `streetAddress`, COUNT(*) mycount FROM `target`.`D_CUSTOMER`  GROUP BY `streetAddress` HAVING mycount = 1) AS myquery" language="MySQL"/>
        <builtInIndicatorDefinition xmi:id="_HIieIKk9EfCpp_nJYIoYFQ" name="Unique Count" label="Unique Count">
          <taggedValue xmi:id="_HIieIak9EfCpp_nJYIoYFQ" tag="Description" value="counts the number of unique rows (i.e. distinct rows with only one instance: rows that are not duplicated)"/>
          <taggedValue xmi:id="_HIieIqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the number of unique records"/>
          <sqlGenericExpression xmi:id="_HIieI6k9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="SQL"/>
          <sqlGenericExpression xmi:id="_HIieJKk9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount = 1) AS myquery" language="MySQL"/>
          <sqlGenericExpression xmi:id="_HIieJak9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) myquery" language="Oracle"/>
          <sqlGenericExpression xmi:id="_HIieJqk9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount = 1) AS myquery" language="Teradata"/>
          <sqlGenericExpression xmi:id="_HIieJ6k9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_HIieKKk9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_HIieKak9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1)  myquery" language="Hive" version=""/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:DuplicateCountIndicator" xmi:id="_GcNkUKk9EfCpp_nJYIoYFQ" count="30" computed="true" duplicateValueCount="10">
        <parameters xmi:id="_GcNkUak9EfCpp_nJYIoYFQ"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llQKk9EfCpp_nJYIoYFQ"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Duplicate_Count_0.1.definition#_ccHq0hF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTMPB6k9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT `streetAddress`, COUNT(*) mycount FROM `target`.`D_CUSTOMER`  m  GROUP BY `streetAddress` HAVING mycount > 1) AS myquery" language="MySQL"/>
        <builtInIndicatorDefinition xmi:id="_HIpy4Kk9EfCpp_nJYIoYFQ" name="Duplicate Count" label="Duplicate Count">
          <taggedValue xmi:id="_HIpy4ak9EfCpp_nJYIoYFQ" tag="Description" value="counts the number of duplicate rows. This number and the number of unique data equals the number of distinct rows"/>
          <taggedValue xmi:id="_HIpy4qk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the number of duplicated records"/>
          <sqlGenericExpression xmi:id="_HIpy46k9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) AS myquery" language="SQL"/>
          <sqlGenericExpression xmi:id="_HIpy5Kk9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount > 1) AS myquery" language="MySQL"/>
          <sqlGenericExpression xmi:id="_HIpy5ak9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Oracle"/>
          <sqlGenericExpression xmi:id="_HIpy5qk9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount > 1) AS myquery" language="Teradata"/>
          <sqlGenericExpression xmi:id="_HIpy56k9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_HIpy6Kk9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) AS myquery" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_HIpy6ak9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Hive"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:BlankCountIndicator" xmi:id="_GcNkUqk9EfCpp_nJYIoYFQ" count="30" computed="true">
        <parameters xmi:id="_GcNkU6k9EfCpp_nJYIoYFQ"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llQKk9EfCpp_nJYIoYFQ"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Blank_Count_0.1.definition#_ccHq0xF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTMPCKk9EfCpp_nJYIoYFQ" body="SELECT COUNT(`streetAddress`) FROM `target`.`D_CUSTOMER` WHERE TRIM(`streetAddress`) = '' " language="MySQL"/>
        <builtInIndicatorDefinition xmi:id="_HIyVwKk9EfCpp_nJYIoYFQ" name="Blank Count" label="Blank Count">
          <taggedValue xmi:id="_HIyVwak9EfCpp_nJYIoYFQ" tag="Description" value="counts the number of blank rows. A blank is a non null textual data that contains only white spaces (or nothing). Note that Oracle does not distinguish between the empty string and the null value"/>
          <taggedValue xmi:id="_HIyVwqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the number of blank records"/>
          <sqlGenericExpression xmi:id="_HIyVw6k9EfCpp_nJYIoYFQ" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE TRIM(&lt;%=__COLUMN_NAMES__%>) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_HIyVxKk9EfCpp_nJYIoYFQ" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE TRIM(&lt;%=__COLUMN_NAMES__%>) IS NULL &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_HIyVxak9EfCpp_nJYIoYFQ" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_HIyVxqk9EfCpp_nJYIoYFQ" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_HIyVx6k9EfCpp_nJYIoYFQ" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> = '' or RTRIM(LTRIM(&lt;%=__COLUMN_NAMES__%>)) = '') &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:TextIndicator" xmi:id="_GcNkVKk9EfCpp_nJYIoYFQ">
        <parameters xmi:id="_GcNkVak9EfCpp_nJYIoYFQ"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llQKk9EfCpp_nJYIoYFQ"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Text_Statistics_0.1.definition#_yb9x0zh8Ed2XmO7pl5Yuyg"/>
        <averageLengthIndicator xmi:id="_GcNkVqk9EfCpp_nJYIoYFQ" count="30" computed="true" sumLength="630.0">
          <parameters xmi:id="_GcNkV6k9EfCpp_nJYIoYFQ">
            <textParameter xmi:id="_GcNkWKk9EfCpp_nJYIoYFQ" useBlank="false"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llQKk9EfCpp_nJYIoYFQ"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_0.1.definition#_ccIR4BF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTMPCak9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH(`streetAddress`)), COUNT(`streetAddress`) FROM `target`.`D_CUSTOMER` WHERE (`streetAddress` IS NOT NULL ) AND (TRIM(IFNULL(`streetAddress`,'NULL TALEND')) &lt;> '' ) " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_HI6RkKk9EfCpp_nJYIoYFQ" name="Average Length" label="Average Length">
            <taggedValue xmi:id="_HI6Rkak9EfCpp_nJYIoYFQ" tag="Description" value="computes the average length of the field. Does not take into account the null values when computing the average."/>
            <taggedValue xmi:id="_HI6Rkqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the average length of the textual record"/>
            <sqlGenericExpression xmi:id="_HI6Rk6k9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_HI6RlKk9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_HI6Rlak9EfCpp_nJYIoYFQ" body="SELECT SUM(LEN(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_HI6Rlqk9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_HI6Rl6k9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_HI6RmKk9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_HI6Rmak9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_HI6Rmqk9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_HI6Rm6k9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_HI6RnKk9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )), COUNT( &lt;%=__COLUMN_NAMES__%> ) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_HI6Rnak9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_HI6Rnqk9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </averageLengthIndicator>
        <maxLengthIndicator xmi:id="_GcNkWak9EfCpp_nJYIoYFQ" computed="true" length="30">
          <parameters xmi:id="_GcNkWqk9EfCpp_nJYIoYFQ">
            <textParameter xmi:id="_GcNkW6k9EfCpp_nJYIoYFQ" useBlank="false"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llQKk9EfCpp_nJYIoYFQ"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_0.1.definition#_ccHq1RF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTMPCqk9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(`streetAddress`)) FROM `target`.`D_CUSTOMER` WHERE (`streetAddress` IS NOT NULL ) AND (TRIM(IFNULL(`streetAddress`,'NULL TALEND')) &lt;> '' ) " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_HJDbgKk9EfCpp_nJYIoYFQ" name="Maximal Length" label="Maximal Length">
            <taggedValue xmi:id="_HJDbgak9EfCpp_nJYIoYFQ" tag="Description" value="computes the maximal length of a text field."/>
            <taggedValue xmi:id="_HJDbgqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the length of the longest textual record"/>
            <sqlGenericExpression xmi:id="_HJDbg6k9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_HJDbhKk9EfCpp_nJYIoYFQ" body="SELECT MAX( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle" modificationDate=""/>
            <sqlGenericExpression xmi:id="_HJDbhak9EfCpp_nJYIoYFQ" body="SELECT MAX(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_HJDbhqk9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_HJDbh6k9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_HJDbiKk9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_HJDbiak9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive" modificationDate=""/>
            <sqlGenericExpression xmi:id="_HJDbiqk9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_HJDbi6k9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' )  &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_HJDbjKk9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_HJDbjak9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_HJDbjqk9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </maxLengthIndicator>
        <minLengthIndicator xmi:id="_GcNkXKk9EfCpp_nJYIoYFQ" computed="true" length="17">
          <parameters xmi:id="_GcNkXak9EfCpp_nJYIoYFQ">
            <textParameter xmi:id="_GcNkXqk9EfCpp_nJYIoYFQ" useBlank="false"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llQKk9EfCpp_nJYIoYFQ"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_0.1.definition#_ccHq1BF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTMPC6k9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(`streetAddress`)) FROM `target`.`D_CUSTOMER` WHERE (`streetAddress` IS NOT NULL ) AND (TRIM(IFNULL(`streetAddress`,'NULL TALEND')) &lt;> '' ) " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_HJLXUKk9EfCpp_nJYIoYFQ" name="Minimal Length" label="Minimal Length">
            <taggedValue xmi:id="_HJLXUak9EfCpp_nJYIoYFQ" tag="Description" value="computes the minimal length of a text field. Does not take into account the null values when computing the minimal length."/>
            <taggedValue xmi:id="_HJLXUqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the length of the smallest textual record"/>
            <sqlGenericExpression xmi:id="_HJLXU6k9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_HJLXVKk9EfCpp_nJYIoYFQ" body="SELECT MIN( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_HJLXVak9EfCpp_nJYIoYFQ" body="SELECT MIN(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_HJLXVqk9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_HJLXV6k9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_HJLXWKk9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_HJLXWak9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_HJLXWqk9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_HJLXW6k9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_HJLXXKk9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_HJLXXak9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (1=1) AND (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_HJLXXqk9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </minLengthIndicator>
        <minLengthWithBlankIndicator xmi:id="_GcNkX6k9EfCpp_nJYIoYFQ" computed="true" length="17">
          <parameters xmi:id="_GcNkYKk9EfCpp_nJYIoYFQ">
            <textParameter xmi:id="_GcNkYak9EfCpp_nJYIoYFQ"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llQKk9EfCpp_nJYIoYFQ"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Blank_0.1.definition#_G4EzQZU9Ed-Y15ulK_jijQ"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTMPEqk9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(`streetAddress`)) FROM `target`.`D_CUSTOMER` WHERE (`streetAddress` IS NOT NULL ) " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_HKFWQKk9EfCpp_nJYIoYFQ" name="Minimal Length With Blank" label="Minimal Length With Blank">
            <taggedValue xmi:id="_HKFWQak9EfCpp_nJYIoYFQ" tag="Description" value="computes the minimal length of a text field, counting blank as zero length values."/>
            <taggedValue xmi:id="_HKFWQqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the length of the smallest textual record"/>
            <sqlGenericExpression xmi:id="_HKFWQ6k9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_HKFWRKk9EfCpp_nJYIoYFQ" body="SELECT MIN( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_HKFWRak9EfCpp_nJYIoYFQ" body="SELECT MIN(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_HKFWRqk9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_HKFWR6k9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_HKFWSKk9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_HKFWSak9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_HKFWSqk9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_HKFWS6k9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_HKFWTKk9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_HKFWTak9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          </builtInIndicatorDefinition>
        </minLengthWithBlankIndicator>
        <minLengthWithNullIndicator xmi:id="_GcNkYqk9EfCpp_nJYIoYFQ" computed="true" length="17">
          <parameters xmi:id="_GcNkY6k9EfCpp_nJYIoYFQ">
            <textParameter xmi:id="_GcNkZKk9EfCpp_nJYIoYFQ" useBlank="false" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llQKk9EfCpp_nJYIoYFQ"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Null_0.1.definition#_a4KsoI1qEd-xwI2imLgHRA"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTMPE6k9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(IFNULL(`streetAddress`,''))) FROM `target`.`D_CUSTOMER` WHERE (TRIM(IFNULL(`streetAddress`,'NULL TALEND')) &lt;> '' ) " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_HKNSEKk9EfCpp_nJYIoYFQ" name="Minimal Length With Null" label="Minimal Length With Null">
            <taggedValue xmi:id="_HKNSEak9EfCpp_nJYIoYFQ" tag="Description" value="computes the minimal length of a text field, counting null as zero length values."/>
            <taggedValue xmi:id="_HKNSEqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the length of the smallest textual record"/>
            <sqlGenericExpression xmi:id="_HKNSE6k9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_HKNSFKk9EfCpp_nJYIoYFQ" body="SELECT MIN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_HKNSFak9EfCpp_nJYIoYFQ" body="SELECT MIN(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_HKNSFqk9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_HKNSF6k9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_HKNSGKk9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_HKNSGak9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_HKNSGqk9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_HKNSG6k9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_HKNSHKk9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_HKNSHak9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_HKNSHqk9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </minLengthWithNullIndicator>
        <minLengthWithBlankNullIndicator xmi:id="_GcNkZak9EfCpp_nJYIoYFQ" computed="true" length="17">
          <parameters xmi:id="_GcNkZqk9EfCpp_nJYIoYFQ">
            <textParameter xmi:id="_GcNkZ6k9EfCpp_nJYIoYFQ" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llQKk9EfCpp_nJYIoYFQ"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Blank_and_Null_0.1.definition#_9HDjMJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTM2AKk9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(IFNULL(`streetAddress`,''))) FROM `target`.`D_CUSTOMER` " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_HKXqIKk9EfCpp_nJYIoYFQ" name="Minimal Length With Blank and Null" label="Minimal Length With Blank and Null">
            <taggedValue xmi:id="_HKXqIak9EfCpp_nJYIoYFQ" tag="Description" value="computes the minimal length of a text field, counting blank and null as zero length values."/>
            <taggedValue xmi:id="_HKXqIqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the length of the smallest textual record"/>
            <sqlGenericExpression xmi:id="_HKXqI6k9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_HKXqJKk9EfCpp_nJYIoYFQ" body="SELECT MIN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_HKXqJak9EfCpp_nJYIoYFQ" body="SELECT MIN(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_HKXqJqk9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_HKXqJ6k9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_HKXqKKk9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_HKXqKak9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_HKXqKqk9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_HKXqK6k9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_HKXqLKk9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_HKXqLak9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_HKXqLqk9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </minLengthWithBlankNullIndicator>
        <maxLengthWithBlankIndicator xmi:id="_GcNkaKk9EfCpp_nJYIoYFQ" computed="true" length="30">
          <parameters xmi:id="_GcNkaak9EfCpp_nJYIoYFQ">
            <textParameter xmi:id="_GcNkaqk9EfCpp_nJYIoYFQ"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llQKk9EfCpp_nJYIoYFQ"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Blank_0.1.definition#_-xmZcJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTMPD6k9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(`streetAddress`)) FROM `target`.`D_CUSTOMER` WHERE (`streetAddress` IS NOT NULL ) " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_HJti0Kk9EfCpp_nJYIoYFQ" name="Maximal Length With Blank" label="Maximal Length With Blank">
            <taggedValue xmi:id="_HJti0ak9EfCpp_nJYIoYFQ" tag="Description" value="computes the maximal length of a text field, counting blank data  as zero length values."/>
            <taggedValue xmi:id="_HJti0qk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the length of the longest textual record"/>
            <sqlGenericExpression xmi:id="_HJti06k9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_HJti1Kk9EfCpp_nJYIoYFQ" body="SELECT MAX( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_HJti1ak9EfCpp_nJYIoYFQ" body="SELECT MAX(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_HJti1qk9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_HJti16k9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_HJti2Kk9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_HJti2ak9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_HJti2qk9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_HJti26k9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_HJti3Kk9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_HJti3ak9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          </builtInIndicatorDefinition>
        </maxLengthWithBlankIndicator>
        <maxLengthWithNullIndicator xmi:id="_GcNka6k9EfCpp_nJYIoYFQ" computed="true" length="30">
          <parameters xmi:id="_GcNkbKk9EfCpp_nJYIoYFQ">
            <textParameter xmi:id="_GcNkbak9EfCpp_nJYIoYFQ" useBlank="false" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llQKk9EfCpp_nJYIoYFQ"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Null_0.1.definition#_-_UFUJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTMPEKk9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(IFNULL(`streetAddress`,''))) FROM `target`.`D_CUSTOMER` WHERE (TRIM(IFNULL(`streetAddress`,'NULL TALEND')) &lt;> '' ) " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_HJ1eoKk9EfCpp_nJYIoYFQ" name="Maximal Length With Null" label="Maximal Length With Null">
            <taggedValue xmi:id="_HJ1eoak9EfCpp_nJYIoYFQ" tag="Description" value="computes the maximal length of a text field, counting null data as zero length values."/>
            <taggedValue xmi:id="_HJ1eoqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the length of the longest textual record"/>
            <sqlGenericExpression xmi:id="_HJ1eo6k9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_HJ1epKk9EfCpp_nJYIoYFQ" body="SELECT MAX(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_HJ1epak9EfCpp_nJYIoYFQ" body="SELECT MAX(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_HJ1epqk9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_HJ1ep6k9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_HJ1eqKk9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_HJ1eqak9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive" version=""/>
            <sqlGenericExpression xmi:id="_HJ1eqqk9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_HJ1eq6k9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_HJ1erKk9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_HJ1erak9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_HJ1erqk9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </maxLengthWithNullIndicator>
        <maxLengthWithBlankNullIndicator xmi:id="_GcNkbqk9EfCpp_nJYIoYFQ" computed="true" length="30">
          <parameters xmi:id="_GcNkb6k9EfCpp_nJYIoYFQ">
            <textParameter xmi:id="_GcNkcKk9EfCpp_nJYIoYFQ" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llQKk9EfCpp_nJYIoYFQ"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Blank_and_Null_0.1.definition#_-hzp8JSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTMPEak9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(IFNULL(`streetAddress`,''))) FROM `target`.`D_CUSTOMER` " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_HJ9acKk9EfCpp_nJYIoYFQ" name="Maximal Length With Blank and Null" label="Maximal Length With Blank and Null">
            <taggedValue xmi:id="_HJ9acak9EfCpp_nJYIoYFQ" tag="Description" value="computes the maximal length of a text field, counting null and blank data as zero length values."/>
            <taggedValue xmi:id="_HJ9acqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the length of the longest textual record"/>
            <sqlGenericExpression xmi:id="_HJ9ac6k9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_HJ9adKk9EfCpp_nJYIoYFQ" body="SELECT MAX(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_HJ9adak9EfCpp_nJYIoYFQ" body="SELECT MAX(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_HJ9adqk9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_HJ9ad6k9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_HJ9aeKk9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_HJ9aeak9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_HJ9aeqk9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_HJ9ae6k9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_HJ9afKk9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_HJ9afak9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_HJ9afqk9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </maxLengthWithBlankNullIndicator>
        <avgLengthWithBlankIndicator xmi:id="_GcNkcak9EfCpp_nJYIoYFQ" count="30" computed="true" sumLength="630.0">
          <parameters xmi:id="_GcNkcqk9EfCpp_nJYIoYFQ">
            <textParameter xmi:id="_GcNkc6k9EfCpp_nJYIoYFQ"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llQKk9EfCpp_nJYIoYFQ"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Blank_0.1.definition#__gPoIJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTMPDKk9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH(CASE WHEN   CHAR_LENGTH( TRIM(`streetAddress`) ) =0  THEN '' ELSE  `streetAddress` END)), COUNT(*) FROM `target`.`D_CUSTOMER` WHERE (`streetAddress` IS NOT NULL ) " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_HJUhQKk9EfCpp_nJYIoYFQ" name="Average Length With Blank" label="Average Length With Blank">
            <taggedValue xmi:id="_HJUhQak9EfCpp_nJYIoYFQ" tag="Description" value="computes the average length of the field, counting blank data as zero length values."/>
            <taggedValue xmi:id="_HJUhQqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the average length of the textual record"/>
            <sqlGenericExpression xmi:id="_HJUhQ6k9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH(CASE WHEN   CHAR_LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_HJUhRKk9EfCpp_nJYIoYFQ" body="SELECT SUM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NOT NULL AND  TRIM(&lt;%=__COLUMN_NAMES__%>) IS NULL THEN 0 ELSE  LENGTH(&lt;%=__COLUMN_NAMES__%>)END), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_HJUhRak9EfCpp_nJYIoYFQ" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) )=0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_HJUhRqk9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_HJUhR6k9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_HJUhSKk9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_HJUhSak9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_HJUhSqk9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_HJUhS6k9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_HJUhTKk9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM( &lt;%=__COLUMN_NAMES__%> ) ) =0  THEN '' ELSE   &lt;%=__COLUMN_NAMES__%>  END)), COUNT(*) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_HJUhTak9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          </builtInIndicatorDefinition>
        </avgLengthWithBlankIndicator>
        <avgLengthWithNullIndicator xmi:id="_GcNkdKk9EfCpp_nJYIoYFQ" count="30" computed="true" sumLength="630.0">
          <parameters xmi:id="_GcNkdak9EfCpp_nJYIoYFQ">
            <textParameter xmi:id="_GcNkdqk9EfCpp_nJYIoYFQ" useBlank="false" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llQKk9EfCpp_nJYIoYFQ"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Null_0.1.definition#__vI_wJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTMPDak9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH(IFNULL(`streetAddress`,''))), COUNT(*) FROM `target`.`D_CUSTOMER` WHERE (TRIM(IFNULL(`streetAddress`,'NULL TALEND')) &lt;> '' ) " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_HJcdEKk9EfCpp_nJYIoYFQ" name="Average Length With Null" label="Average Length With Null">
            <taggedValue xmi:id="_HJcdEak9EfCpp_nJYIoYFQ" tag="Description" value="computes the average length of the field, counting null data as zero length values."/>
            <taggedValue xmi:id="_HJcdEqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the average length of the textual record"/>
            <sqlGenericExpression xmi:id="_HJcdE6k9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_HJcdFKk9EfCpp_nJYIoYFQ" body="SELECT SUM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_HJcdFak9EfCpp_nJYIoYFQ" body="SELECT SUM(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_HJcdFqk9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_HJcdF6k9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_HJcdGKk9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_HJcdGak9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_HJcdGqk9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_HJcdG6k9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_HJcdHKk9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_HJcdHak9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_HJcdHqk9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </avgLengthWithNullIndicator>
        <avgLengthWithBlankNullIndicator xmi:id="_GcNkd6k9EfCpp_nJYIoYFQ" count="30" computed="true" sumLength="630.0">
          <parameters xmi:id="_GcNkeKk9EfCpp_nJYIoYFQ">
            <textParameter xmi:id="_GcNkeak9EfCpp_nJYIoYFQ" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llQKk9EfCpp_nJYIoYFQ"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Blank_and_Null_0.1.definition#__TbUIJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTMPDqk9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH(CASE WHEN   CHAR_LENGTH( TRIM(IFNULL(`streetAddress`,'')) ) =0  THEN '' ELSE  IFNULL(`streetAddress`,'') END)), COUNT(*) FROM `target`.`D_CUSTOMER` " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_HJlnAKk9EfCpp_nJYIoYFQ" name="Average Length With Blank and Null" label="Average Length With Blank and Null">
            <taggedValue xmi:id="_HJlnAak9EfCpp_nJYIoYFQ" tag="Description" value="computes the average length of the field, counting blank and null data as zero lenght values."/>
            <taggedValue xmi:id="_HJlnAqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the average length of the textual record"/>
            <sqlGenericExpression xmi:id="_HJlnA6k9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH(CASE WHEN   CHAR_LENGTH( TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'')) ) =0  THEN '' ELSE  IFNULL(&lt;%=__COLUMN_NAMES__%>,'') END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_HJlnBKk9EfCpp_nJYIoYFQ" body="SELECT SUM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NOT NULL AND  TRIM(&lt;%=__COLUMN_NAMES__%>) IS NULL THEN 0 ELSE CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END  END), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_HJlnBak9EfCpp_nJYIoYFQ" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) )=0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_HJlnBqk9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_HJlnB6k9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_HJlnCKk9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_HJlnCak9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_HJlnCqk9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_HJlnC6k9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_HJlnDKk9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END ) ) =0  THEN '' ELSE   CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END  END)), COUNT(*) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_HJlnDak9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_HJlnDqk9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH(CASE WHEN   CHAR_LENGTH( TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'')) ) =0  THEN '' ELSE  ISNULL(&lt;%=__COLUMN_NAMES__%>,'') END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </avgLengthWithBlankNullIndicator>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RowCountIndicator" xmi:id="_GcNke6k9EfCpp_nJYIoYFQ" count="30" computed="true">
        <parameters xmi:id="_GcNkfKk9EfCpp_nJYIoYFQ"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llRKk9EfCpp_nJYIoYFQ"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Row_Count_0.1.definition#_ccFOkBF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTLn56k9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM `target`.`D_CUSTOMER` " language="MySQL"/>
        <builtInIndicatorDefinition xmi:id="_HKfl8Kk9EfCpp_nJYIoYFQ" name="Row Count" label="Row Count">
          <taggedValue xmi:id="_HKfl8ak9EfCpp_nJYIoYFQ" tag="Description" value="counts the number of rows"/>
          <taggedValue xmi:id="_HKfl8qk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the number of records"/>
          <sqlGenericExpression xmi:id="_HKfl86k9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:NullCountIndicator" xmi:id="_GcNkfak9EfCpp_nJYIoYFQ" count="30" computed="true">
        <parameters xmi:id="_GcNkfqk9EfCpp_nJYIoYFQ"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llRKk9EfCpp_nJYIoYFQ"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Null_Count_0.1.definition#_GrAeADh9Ed2XmO7pl5Yuyg"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTM2Aak9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM `target`.`D_CUSTOMER` WHERE `state` IS NULL " language="MySQL"/>
        <builtInIndicatorDefinition xmi:id="_HKoI0Kk9EfCpp_nJYIoYFQ" name="Null Count" label="Null Count">
          <taggedValue xmi:id="_HKoI0ak9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluate the number of missing data (null records)"/>
          <taggedValue xmi:id="_HKoI0qk9EfCpp_nJYIoYFQ" tag="Description" value="counts the number of null rows"/>
          <sqlGenericExpression xmi:id="_HKoI06k9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE &lt;%=__COLUMN_NAMES__%> IS NULL &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:DistinctCountIndicator" xmi:id="_GcNkf6k9EfCpp_nJYIoYFQ" count="30" computed="true" distinctValueCount="3">
        <parameters xmi:id="_GcNkgKk9EfCpp_nJYIoYFQ"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llRKk9EfCpp_nJYIoYFQ"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Distinct_Count_0.1.definition#_ccHq0BF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTM2Aqk9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT DISTINCT `state` FROM `target`.`D_CUSTOMER` ) A" language="MySQL"/>
        <builtInIndicatorDefinition xmi:id="_HKx50Kk9EfCpp_nJYIoYFQ" name="Distinct Count" label="Distinct Count">
          <taggedValue xmi:id="_HKx50ak9EfCpp_nJYIoYFQ" tag="Description" value="counts the number of distinct rows (like a &quot;SELECT DISTINCT&quot; SQL statement)"/>
          <taggedValue xmi:id="_HKx50qk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the number of distinct records"/>
          <sqlGenericExpression xmi:id="_HKx506k9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT DISTINCT &lt;%=__COLUMN_NAMES__%> FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>) A" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:UniqueCountIndicator" xmi:id="_GcNkgak9EfCpp_nJYIoYFQ" count="30" computed="true" uniqueValueCount="0">
        <parameters xmi:id="_GcNkgqk9EfCpp_nJYIoYFQ"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llRKk9EfCpp_nJYIoYFQ"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Unique_Count_0.1.definition#_ccHq0RF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTM2A6k9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT `state`, COUNT(*) mycount FROM `target`.`D_CUSTOMER`  GROUP BY `state` HAVING mycount = 1) AS myquery" language="MySQL"/>
        <builtInIndicatorDefinition xmi:id="_HK51oKk9EfCpp_nJYIoYFQ" name="Unique Count" label="Unique Count">
          <taggedValue xmi:id="_HK51oak9EfCpp_nJYIoYFQ" tag="Description" value="counts the number of unique rows (i.e. distinct rows with only one instance: rows that are not duplicated)"/>
          <taggedValue xmi:id="_HK51oqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the number of unique records"/>
          <sqlGenericExpression xmi:id="_HK51o6k9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="SQL"/>
          <sqlGenericExpression xmi:id="_HK51pKk9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount = 1) AS myquery" language="MySQL"/>
          <sqlGenericExpression xmi:id="_HK51pak9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) myquery" language="Oracle"/>
          <sqlGenericExpression xmi:id="_HK51pqk9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount = 1) AS myquery" language="Teradata"/>
          <sqlGenericExpression xmi:id="_HK51p6k9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_HK51qKk9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_HK51qak9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1)  myquery" language="Hive" version=""/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:DuplicateCountIndicator" xmi:id="_GcNkg6k9EfCpp_nJYIoYFQ" count="30" computed="true" duplicateValueCount="3">
        <parameters xmi:id="_GcNkhKk9EfCpp_nJYIoYFQ"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llRKk9EfCpp_nJYIoYFQ"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Duplicate_Count_0.1.definition#_ccHq0hF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTM2BKk9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT `state`, COUNT(*) mycount FROM `target`.`D_CUSTOMER`  m  GROUP BY `state` HAVING mycount > 1) AS myquery" language="MySQL"/>
        <builtInIndicatorDefinition xmi:id="_HLCYgKk9EfCpp_nJYIoYFQ" name="Duplicate Count" label="Duplicate Count">
          <taggedValue xmi:id="_HLCYgak9EfCpp_nJYIoYFQ" tag="Description" value="counts the number of duplicate rows. This number and the number of unique data equals the number of distinct rows"/>
          <taggedValue xmi:id="_HLCYgqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the number of duplicated records"/>
          <sqlGenericExpression xmi:id="_HLCYg6k9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) AS myquery" language="SQL"/>
          <sqlGenericExpression xmi:id="_HLCYhKk9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount > 1) AS myquery" language="MySQL"/>
          <sqlGenericExpression xmi:id="_HLCYhak9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Oracle"/>
          <sqlGenericExpression xmi:id="_HLCYhqk9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount > 1) AS myquery" language="Teradata"/>
          <sqlGenericExpression xmi:id="_HLCYh6k9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_HLCYiKk9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) AS myquery" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_HLCYiak9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Hive"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:BlankCountIndicator" xmi:id="_GcNkhak9EfCpp_nJYIoYFQ" count="30" computed="true" blankCount="23">
        <parameters xmi:id="_GcNkhqk9EfCpp_nJYIoYFQ"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llRKk9EfCpp_nJYIoYFQ"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Blank_Count_0.1.definition#_ccHq0xF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTM2Bak9EfCpp_nJYIoYFQ" body="SELECT COUNT(`state`) FROM `target`.`D_CUSTOMER` WHERE TRIM(`state`) = '' " language="MySQL"/>
        <builtInIndicatorDefinition xmi:id="_HLKUUKk9EfCpp_nJYIoYFQ" name="Blank Count" label="Blank Count">
          <taggedValue xmi:id="_HLKUUak9EfCpp_nJYIoYFQ" tag="Description" value="counts the number of blank rows. A blank is a non null textual data that contains only white spaces (or nothing). Note that Oracle does not distinguish between the empty string and the null value"/>
          <taggedValue xmi:id="_HLKUUqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the number of blank records"/>
          <sqlGenericExpression xmi:id="_HLKUU6k9EfCpp_nJYIoYFQ" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE TRIM(&lt;%=__COLUMN_NAMES__%>) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_HLKUVKk9EfCpp_nJYIoYFQ" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE TRIM(&lt;%=__COLUMN_NAMES__%>) IS NULL &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_HLKUVak9EfCpp_nJYIoYFQ" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_HLKUVqk9EfCpp_nJYIoYFQ" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_HLKUV6k9EfCpp_nJYIoYFQ" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> = '' or RTRIM(LTRIM(&lt;%=__COLUMN_NAMES__%>)) = '') &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:TextIndicator" xmi:id="_GcNkh6k9EfCpp_nJYIoYFQ">
        <parameters xmi:id="_GcNkiKk9EfCpp_nJYIoYFQ"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llRKk9EfCpp_nJYIoYFQ"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Text_Statistics_0.1.definition#_yb9x0zh8Ed2XmO7pl5Yuyg"/>
        <averageLengthIndicator xmi:id="_GcNkiak9EfCpp_nJYIoYFQ" count="7" computed="true" sumLength="30.0">
          <parameters xmi:id="_HTM2Bqk9EfCpp_nJYIoYFQ">
            <textParameter xmi:id="_HTM2B6k9EfCpp_nJYIoYFQ" useBlank="false"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llRKk9EfCpp_nJYIoYFQ"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_0.1.definition#_ccIR4BF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTM2CKk9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH(`state`)), COUNT(`state`) FROM `target`.`D_CUSTOMER` WHERE (`state` IS NOT NULL ) AND (TRIM(IFNULL(`state`,'NULL TALEND')) &lt;> '' ) " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_HLS3MKk9EfCpp_nJYIoYFQ" name="Average Length" label="Average Length">
            <taggedValue xmi:id="_HLS3Mak9EfCpp_nJYIoYFQ" tag="Description" value="computes the average length of the field. Does not take into account the null values when computing the average."/>
            <taggedValue xmi:id="_HLS3Mqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the average length of the textual record"/>
            <sqlGenericExpression xmi:id="_HLS3M6k9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_HLS3NKk9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_HLS3Nak9EfCpp_nJYIoYFQ" body="SELECT SUM(LEN(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_HLS3Nqk9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_HLS3N6k9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_HLS3OKk9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_HLS3Oak9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_HLS3Oqk9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_HLS3O6k9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_HLS3PKk9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )), COUNT( &lt;%=__COLUMN_NAMES__%> ) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_HLS3Pak9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_HLS3Pqk9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </averageLengthIndicator>
        <maxLengthIndicator xmi:id="_GcNkiqk9EfCpp_nJYIoYFQ" computed="true" length="10">
          <parameters xmi:id="_HTM2Cak9EfCpp_nJYIoYFQ">
            <textParameter xmi:id="_HTM2Cqk9EfCpp_nJYIoYFQ" useBlank="false"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llRKk9EfCpp_nJYIoYFQ"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_0.1.definition#_ccHq1RF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTM2C6k9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(`state`)) FROM `target`.`D_CUSTOMER` WHERE (`state` IS NOT NULL ) AND (TRIM(IFNULL(`state`,'NULL TALEND')) &lt;> '' ) " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_HLbaEKk9EfCpp_nJYIoYFQ" name="Maximal Length" label="Maximal Length">
            <taggedValue xmi:id="_HLbaEak9EfCpp_nJYIoYFQ" tag="Description" value="computes the maximal length of a text field."/>
            <taggedValue xmi:id="_HLbaEqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the length of the longest textual record"/>
            <sqlGenericExpression xmi:id="_HLbaE6k9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_HLbaFKk9EfCpp_nJYIoYFQ" body="SELECT MAX( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle" modificationDate=""/>
            <sqlGenericExpression xmi:id="_HLbaFak9EfCpp_nJYIoYFQ" body="SELECT MAX(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_HLbaFqk9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_HLbaF6k9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_HLbaGKk9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_HLbaGak9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive" modificationDate=""/>
            <sqlGenericExpression xmi:id="_HLbaGqk9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_HLbaG6k9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' )  &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_HLbaHKk9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_HLbaHak9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_HLbaHqk9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </maxLengthIndicator>
        <minLengthIndicator xmi:id="_GcNki6k9EfCpp_nJYIoYFQ" computed="true" length="2">
          <parameters xmi:id="_HTM2DKk9EfCpp_nJYIoYFQ">
            <textParameter xmi:id="_HTM2Dak9EfCpp_nJYIoYFQ" useBlank="false"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llRKk9EfCpp_nJYIoYFQ"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_0.1.definition#_ccHq1BF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTM2Dqk9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(`state`)) FROM `target`.`D_CUSTOMER` WHERE (`state` IS NOT NULL ) AND (TRIM(IFNULL(`state`,'NULL TALEND')) &lt;> '' ) " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_HLjV4Kk9EfCpp_nJYIoYFQ" name="Minimal Length" label="Minimal Length">
            <taggedValue xmi:id="_HLjV4ak9EfCpp_nJYIoYFQ" tag="Description" value="computes the minimal length of a text field. Does not take into account the null values when computing the minimal length."/>
            <taggedValue xmi:id="_HLjV4qk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the length of the smallest textual record"/>
            <sqlGenericExpression xmi:id="_HLjV46k9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_HLjV5Kk9EfCpp_nJYIoYFQ" body="SELECT MIN( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_HLjV5ak9EfCpp_nJYIoYFQ" body="SELECT MIN(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_HLjV5qk9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_HLjV56k9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_HLjV6Kk9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_HLjV6ak9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_HLjV6qk9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_HLjV66k9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_HLjV7Kk9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_HLjV7ak9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (1=1) AND (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_HLjV7qk9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </minLengthIndicator>
        <minLengthWithBlankIndicator xmi:id="_GcNkjKk9EfCpp_nJYIoYFQ" computed="true" length="0">
          <parameters xmi:id="_HTM2Iak9EfCpp_nJYIoYFQ">
            <textParameter xmi:id="_HTM2Iqk9EfCpp_nJYIoYFQ"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llRKk9EfCpp_nJYIoYFQ"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Blank_0.1.definition#_G4EzQZU9Ed-Y15ulK_jijQ"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTM2I6k9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(`state`)) FROM `target`.`D_CUSTOMER` WHERE (`state` IS NOT NULL ) " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_HMysAKk9EfCpp_nJYIoYFQ" name="Minimal Length With Blank" label="Minimal Length With Blank">
            <taggedValue xmi:id="_HMysAak9EfCpp_nJYIoYFQ" tag="Description" value="computes the minimal length of a text field, counting blank as zero length values."/>
            <taggedValue xmi:id="_HMysAqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the length of the smallest textual record"/>
            <sqlGenericExpression xmi:id="_HMysA6k9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_HMysBKk9EfCpp_nJYIoYFQ" body="SELECT MIN( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_HMysBak9EfCpp_nJYIoYFQ" body="SELECT MIN(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_HMysBqk9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_HMysB6k9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_HMysCKk9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_HMysCak9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_HMysCqk9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_HMysC6k9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_HMysDKk9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_HMysDak9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          </builtInIndicatorDefinition>
        </minLengthWithBlankIndicator>
        <minLengthWithNullIndicator xmi:id="_GcNkjak9EfCpp_nJYIoYFQ" computed="true" length="2">
          <parameters xmi:id="_HTM2JKk9EfCpp_nJYIoYFQ">
            <textParameter xmi:id="_HTM2Jak9EfCpp_nJYIoYFQ" useBlank="false" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llRKk9EfCpp_nJYIoYFQ"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Null_0.1.definition#_a4KsoI1qEd-xwI2imLgHRA"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTM2Jqk9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(IFNULL(`state`,''))) FROM `target`.`D_CUSTOMER` WHERE (TRIM(IFNULL(`state`,'NULL TALEND')) &lt;> '' ) " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_HNLGgKk9EfCpp_nJYIoYFQ" name="Minimal Length With Null" label="Minimal Length With Null">
            <taggedValue xmi:id="_HNLGgak9EfCpp_nJYIoYFQ" tag="Description" value="computes the minimal length of a text field, counting null as zero length values."/>
            <taggedValue xmi:id="_HNLGgqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the length of the smallest textual record"/>
            <sqlGenericExpression xmi:id="_HNLGg6k9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_HNLGhKk9EfCpp_nJYIoYFQ" body="SELECT MIN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_HNLGhak9EfCpp_nJYIoYFQ" body="SELECT MIN(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_HNLGhqk9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_HNLGh6k9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_HNLGiKk9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_HNLGiak9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_HNLGiqk9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_HNLGi6k9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_HNLGjKk9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_HNLGjak9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_HNLGjqk9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </minLengthWithNullIndicator>
        <minLengthWithBlankNullIndicator xmi:id="_GcNkjqk9EfCpp_nJYIoYFQ" computed="true" length="0">
          <parameters xmi:id="_HTM2J6k9EfCpp_nJYIoYFQ">
            <textParameter xmi:id="_HTM2KKk9EfCpp_nJYIoYFQ" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llRKk9EfCpp_nJYIoYFQ"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Blank_and_Null_0.1.definition#_9HDjMJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTM2Kak9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(IFNULL(`state`,''))) FROM `target`.`D_CUSTOMER` " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_HNTpYKk9EfCpp_nJYIoYFQ" name="Minimal Length With Blank and Null" label="Minimal Length With Blank and Null">
            <taggedValue xmi:id="_HNTpYak9EfCpp_nJYIoYFQ" tag="Description" value="computes the minimal length of a text field, counting blank and null as zero length values."/>
            <taggedValue xmi:id="_HNTpYqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the length of the smallest textual record"/>
            <sqlGenericExpression xmi:id="_HNTpY6k9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_HNTpZKk9EfCpp_nJYIoYFQ" body="SELECT MIN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_HNTpZak9EfCpp_nJYIoYFQ" body="SELECT MIN(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_HNTpZqk9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_HNTpZ6k9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_HNTpaKk9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_HNTpaak9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_HNTpaqk9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_HNTpa6k9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_HNTpbKk9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_HNTpbak9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_HNTpbqk9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </minLengthWithBlankNullIndicator>
        <maxLengthWithBlankIndicator xmi:id="_GcNkj6k9EfCpp_nJYIoYFQ" computed="true" length="10">
          <parameters xmi:id="_HTM2GKk9EfCpp_nJYIoYFQ">
            <textParameter xmi:id="_HTM2Gak9EfCpp_nJYIoYFQ"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llRKk9EfCpp_nJYIoYFQ"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Blank_0.1.definition#_-xmZcJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTM2Gqk9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(`state`)) FROM `target`.`D_CUSTOMER` WHERE (`state` IS NOT NULL ) " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_HMIksKk9EfCpp_nJYIoYFQ" name="Maximal Length With Blank" label="Maximal Length With Blank">
            <taggedValue xmi:id="_HMIksak9EfCpp_nJYIoYFQ" tag="Description" value="computes the maximal length of a text field, counting blank data  as zero length values."/>
            <taggedValue xmi:id="_HMIksqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the length of the longest textual record"/>
            <sqlGenericExpression xmi:id="_HMIks6k9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_HMIktKk9EfCpp_nJYIoYFQ" body="SELECT MAX( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_HMIktak9EfCpp_nJYIoYFQ" body="SELECT MAX(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_HMIktqk9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_HMIkt6k9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_HMIkuKk9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_HMIkuak9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_HMIkuqk9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_HMIku6k9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_HMIkvKk9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_HMIkvak9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          </builtInIndicatorDefinition>
        </maxLengthWithBlankIndicator>
        <maxLengthWithNullIndicator xmi:id="_GcNkkKk9EfCpp_nJYIoYFQ" computed="true" length="10">
          <parameters xmi:id="_HTM2G6k9EfCpp_nJYIoYFQ">
            <textParameter xmi:id="_HTM2HKk9EfCpp_nJYIoYFQ" useBlank="false" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llRKk9EfCpp_nJYIoYFQ"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Null_0.1.definition#_-_UFUJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTM2Hak9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(IFNULL(`state`,''))) FROM `target`.`D_CUSTOMER` WHERE (TRIM(IFNULL(`state`,'NULL TALEND')) &lt;> '' ) " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_HMTj0Kk9EfCpp_nJYIoYFQ" name="Maximal Length With Null" label="Maximal Length With Null">
            <taggedValue xmi:id="_HMTj0ak9EfCpp_nJYIoYFQ" tag="Description" value="computes the maximal length of a text field, counting null data as zero length values."/>
            <taggedValue xmi:id="_HMTj0qk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the length of the longest textual record"/>
            <sqlGenericExpression xmi:id="_HMTj06k9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_HMTj1Kk9EfCpp_nJYIoYFQ" body="SELECT MAX(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_HMTj1ak9EfCpp_nJYIoYFQ" body="SELECT MAX(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_HMTj1qk9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_HMTj16k9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_HMTj2Kk9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_HMTj2ak9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive" version=""/>
            <sqlGenericExpression xmi:id="_HMTj2qk9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_HMTj26k9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_HMTj3Kk9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_HMTj3ak9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_HMTj3qk9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </maxLengthWithNullIndicator>
        <maxLengthWithBlankNullIndicator xmi:id="_GcNkkak9EfCpp_nJYIoYFQ" computed="true" length="10">
          <parameters xmi:id="_HTM2Hqk9EfCpp_nJYIoYFQ">
            <textParameter xmi:id="_HTM2H6k9EfCpp_nJYIoYFQ" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llRKk9EfCpp_nJYIoYFQ"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Blank_and_Null_0.1.definition#_-hzp8JSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTM2IKk9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(IFNULL(`state`,''))) FROM `target`.`D_CUSTOMER` " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_HMpiEKk9EfCpp_nJYIoYFQ" name="Maximal Length With Blank and Null" label="Maximal Length With Blank and Null">
            <taggedValue xmi:id="_HMpiEak9EfCpp_nJYIoYFQ" tag="Description" value="computes the maximal length of a text field, counting null and blank data as zero length values."/>
            <taggedValue xmi:id="_HMpiEqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the length of the longest textual record"/>
            <sqlGenericExpression xmi:id="_HMpiE6k9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_HMpiFKk9EfCpp_nJYIoYFQ" body="SELECT MAX(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_HMpiFak9EfCpp_nJYIoYFQ" body="SELECT MAX(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_HMpiFqk9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_HMpiF6k9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_HMpiGKk9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_HMpiGak9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_HMpiGqk9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_HMpiG6k9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_HMpiHKk9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_HMpiHak9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_HMpiHqk9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </maxLengthWithBlankNullIndicator>
        <avgLengthWithBlankIndicator xmi:id="_GcNkkqk9EfCpp_nJYIoYFQ" count="30" computed="true" sumLength="30.0">
          <parameters xmi:id="_HTM2D6k9EfCpp_nJYIoYFQ">
            <textParameter xmi:id="_HTM2EKk9EfCpp_nJYIoYFQ"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llRKk9EfCpp_nJYIoYFQ"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Blank_0.1.definition#__gPoIJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTM2Eak9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH(CASE WHEN   CHAR_LENGTH( TRIM(`state`) ) =0  THEN '' ELSE  `state` END)), COUNT(*) FROM `target`.`D_CUSTOMER` WHERE (`state` IS NOT NULL ) " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_HLr4wKk9EfCpp_nJYIoYFQ" name="Average Length With Blank" label="Average Length With Blank">
            <taggedValue xmi:id="_HLr4wak9EfCpp_nJYIoYFQ" tag="Description" value="computes the average length of the field, counting blank data as zero length values."/>
            <taggedValue xmi:id="_HLr4wqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the average length of the textual record"/>
            <sqlGenericExpression xmi:id="_HLr4w6k9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH(CASE WHEN   CHAR_LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_HLr4xKk9EfCpp_nJYIoYFQ" body="SELECT SUM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NOT NULL AND  TRIM(&lt;%=__COLUMN_NAMES__%>) IS NULL THEN 0 ELSE  LENGTH(&lt;%=__COLUMN_NAMES__%>)END), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_HLr4xak9EfCpp_nJYIoYFQ" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) )=0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_HLr4xqk9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_HLr4x6k9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_HLr4yKk9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_HLr4yak9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_HLr4yqk9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_HLr4y6k9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_HLr4zKk9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM( &lt;%=__COLUMN_NAMES__%> ) ) =0  THEN '' ELSE   &lt;%=__COLUMN_NAMES__%>  END)), COUNT(*) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_HLr4zak9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          </builtInIndicatorDefinition>
        </avgLengthWithBlankIndicator>
        <avgLengthWithNullIndicator xmi:id="_GcNkk6k9EfCpp_nJYIoYFQ" count="7" computed="true" sumLength="30.0">
          <parameters xmi:id="_HTM2Eqk9EfCpp_nJYIoYFQ">
            <textParameter xmi:id="_HTM2E6k9EfCpp_nJYIoYFQ" useBlank="false" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llRKk9EfCpp_nJYIoYFQ"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Null_0.1.definition#__vI_wJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTM2FKk9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH(IFNULL(`state`,''))), COUNT(*) FROM `target`.`D_CUSTOMER` WHERE (TRIM(IFNULL(`state`,'NULL TALEND')) &lt;> '' ) " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_HL1CsKk9EfCpp_nJYIoYFQ" name="Average Length With Null" label="Average Length With Null">
            <taggedValue xmi:id="_HL1Csak9EfCpp_nJYIoYFQ" tag="Description" value="computes the average length of the field, counting null data as zero length values."/>
            <taggedValue xmi:id="_HL1Csqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the average length of the textual record"/>
            <sqlGenericExpression xmi:id="_HL1Cs6k9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_HL1CtKk9EfCpp_nJYIoYFQ" body="SELECT SUM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_HL1Ctak9EfCpp_nJYIoYFQ" body="SELECT SUM(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_HL1Ctqk9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_HL1Ct6k9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_HL1CuKk9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_HL1Cuak9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_HL1Cuqk9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_HL1Cu6k9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_HL1CvKk9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_HL1Cvak9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_HL1Cvqk9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </avgLengthWithNullIndicator>
        <avgLengthWithBlankNullIndicator xmi:id="_GcNklKk9EfCpp_nJYIoYFQ" count="30" computed="true" sumLength="30.0">
          <parameters xmi:id="_HTM2Fak9EfCpp_nJYIoYFQ">
            <textParameter xmi:id="_HTM2Fqk9EfCpp_nJYIoYFQ" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llRKk9EfCpp_nJYIoYFQ"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Blank_and_Null_0.1.definition#__TbUIJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTM2F6k9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH(CASE WHEN   CHAR_LENGTH( TRIM(IFNULL(`state`,'')) ) =0  THEN '' ELSE  IFNULL(`state`,'') END)), COUNT(*) FROM `target`.`D_CUSTOMER` " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_HMAB0Kk9EfCpp_nJYIoYFQ" name="Average Length With Blank and Null" label="Average Length With Blank and Null">
            <taggedValue xmi:id="_HMAB0ak9EfCpp_nJYIoYFQ" tag="Description" value="computes the average length of the field, counting blank and null data as zero lenght values."/>
            <taggedValue xmi:id="_HMAB0qk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the average length of the textual record"/>
            <sqlGenericExpression xmi:id="_HMAB06k9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH(CASE WHEN   CHAR_LENGTH( TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'')) ) =0  THEN '' ELSE  IFNULL(&lt;%=__COLUMN_NAMES__%>,'') END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_HMAB1Kk9EfCpp_nJYIoYFQ" body="SELECT SUM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NOT NULL AND  TRIM(&lt;%=__COLUMN_NAMES__%>) IS NULL THEN 0 ELSE CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END  END), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_HMAB1ak9EfCpp_nJYIoYFQ" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) )=0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_HMAB1qk9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_HMAB16k9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_HMAB2Kk9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_HMAB2ak9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_HMAB2qk9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_HMAB26k9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_HMAB3Kk9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END ) ) =0  THEN '' ELSE   CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END  END)), COUNT(*) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_HMAB3ak9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_HMAB3qk9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH(CASE WHEN   CHAR_LENGTH( TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'')) ) =0  THEN '' ELSE  ISNULL(&lt;%=__COLUMN_NAMES__%>,'') END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </avgLengthWithBlankNullIndicator>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RowCountIndicator" xmi:id="_GcOKsak9EfCpp_nJYIoYFQ" count="30" computed="true">
        <parameters xmi:id="_GcOKsqk9EfCpp_nJYIoYFQ"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llSKk9EfCpp_nJYIoYFQ"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Row_Count_0.1.definition#_ccFOkBF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTLn4ak9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM `target`.`D_CUSTOMER` " language="MySQL"/>
        <builtInIndicatorDefinition xmi:id="_HNcMQKk9EfCpp_nJYIoYFQ" name="Row Count" label="Row Count">
          <taggedValue xmi:id="_HNcMQak9EfCpp_nJYIoYFQ" tag="Description" value="counts the number of rows"/>
          <taggedValue xmi:id="_HNcMQqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the number of records"/>
          <sqlGenericExpression xmi:id="_HNcMQ6k9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:NullCountIndicator" xmi:id="_GcOKs6k9EfCpp_nJYIoYFQ" count="30" computed="true">
        <parameters xmi:id="_GcOKtKk9EfCpp_nJYIoYFQ"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llSKk9EfCpp_nJYIoYFQ"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Null_Count_0.1.definition#_GrAeADh9Ed2XmO7pl5Yuyg"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTM2Kqk9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM `target`.`D_CUSTOMER` WHERE `postalCode` IS NULL " language="MySQL"/>
        <builtInIndicatorDefinition xmi:id="_HNlWMKk9EfCpp_nJYIoYFQ" name="Null Count" label="Null Count">
          <taggedValue xmi:id="_HNlWMak9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluate the number of missing data (null records)"/>
          <taggedValue xmi:id="_HNlWMqk9EfCpp_nJYIoYFQ" tag="Description" value="counts the number of null rows"/>
          <sqlGenericExpression xmi:id="_HNlWM6k9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE &lt;%=__COLUMN_NAMES__%> IS NULL &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:DistinctCountIndicator" xmi:id="_GcOKtak9EfCpp_nJYIoYFQ" count="30" computed="true" distinctValueCount="10">
        <parameters xmi:id="_GcOKtqk9EfCpp_nJYIoYFQ"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llSKk9EfCpp_nJYIoYFQ"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Distinct_Count_0.1.definition#_ccHq0BF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTM2K6k9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT DISTINCT `postalCode` FROM `target`.`D_CUSTOMER` ) A" language="MySQL"/>
        <builtInIndicatorDefinition xmi:id="_HNt5EKk9EfCpp_nJYIoYFQ" name="Distinct Count" label="Distinct Count">
          <taggedValue xmi:id="_HNt5Eak9EfCpp_nJYIoYFQ" tag="Description" value="counts the number of distinct rows (like a &quot;SELECT DISTINCT&quot; SQL statement)"/>
          <taggedValue xmi:id="_HNt5Eqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the number of distinct records"/>
          <sqlGenericExpression xmi:id="_HNt5E6k9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT DISTINCT &lt;%=__COLUMN_NAMES__%> FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>) A" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:UniqueCountIndicator" xmi:id="_GcOKt6k9EfCpp_nJYIoYFQ" count="30" computed="true" uniqueValueCount="0">
        <parameters xmi:id="_GcOKuKk9EfCpp_nJYIoYFQ"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llSKk9EfCpp_nJYIoYFQ"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Unique_Count_0.1.definition#_ccHq0RF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTM2LKk9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT `postalCode`, COUNT(*) mycount FROM `target`.`D_CUSTOMER`  GROUP BY `postalCode` HAVING mycount = 1) AS myquery" language="MySQL"/>
        <builtInIndicatorDefinition xmi:id="_HN2b8Kk9EfCpp_nJYIoYFQ" name="Unique Count" label="Unique Count">
          <taggedValue xmi:id="_HN2b8ak9EfCpp_nJYIoYFQ" tag="Description" value="counts the number of unique rows (i.e. distinct rows with only one instance: rows that are not duplicated)"/>
          <taggedValue xmi:id="_HN2b8qk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the number of unique records"/>
          <sqlGenericExpression xmi:id="_HN2b86k9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="SQL"/>
          <sqlGenericExpression xmi:id="_HN2b9Kk9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount = 1) AS myquery" language="MySQL"/>
          <sqlGenericExpression xmi:id="_HN2b9ak9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) myquery" language="Oracle"/>
          <sqlGenericExpression xmi:id="_HN2b9qk9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount = 1) AS myquery" language="Teradata"/>
          <sqlGenericExpression xmi:id="_HN2b96k9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_HN2b-Kk9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_HN2b-ak9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1)  myquery" language="Hive" version=""/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:DuplicateCountIndicator" xmi:id="_GcOKuak9EfCpp_nJYIoYFQ" count="30" computed="true" duplicateValueCount="10">
        <parameters xmi:id="_GcOKuqk9EfCpp_nJYIoYFQ"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llSKk9EfCpp_nJYIoYFQ"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Duplicate_Count_0.1.definition#_ccHq0hF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTM2Lak9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT `postalCode`, COUNT(*) mycount FROM `target`.`D_CUSTOMER`  m  GROUP BY `postalCode` HAVING mycount > 1) AS myquery" language="MySQL"/>
        <builtInIndicatorDefinition xmi:id="_HN--0Kk9EfCpp_nJYIoYFQ" name="Duplicate Count" label="Duplicate Count">
          <taggedValue xmi:id="_HN--0ak9EfCpp_nJYIoYFQ" tag="Description" value="counts the number of duplicate rows. This number and the number of unique data equals the number of distinct rows"/>
          <taggedValue xmi:id="_HN--0qk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the number of duplicated records"/>
          <sqlGenericExpression xmi:id="_HN--06k9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) AS myquery" language="SQL"/>
          <sqlGenericExpression xmi:id="_HN--1Kk9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount > 1) AS myquery" language="MySQL"/>
          <sqlGenericExpression xmi:id="_HN--1ak9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Oracle"/>
          <sqlGenericExpression xmi:id="_HN--1qk9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount > 1) AS myquery" language="Teradata"/>
          <sqlGenericExpression xmi:id="_HN--16k9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_HN--2Kk9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) AS myquery" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_HN--2ak9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Hive"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RowCountIndicator" xmi:id="_GcOKvKk9EfCpp_nJYIoYFQ" count="30" computed="true">
        <parameters xmi:id="_GcOKvak9EfCpp_nJYIoYFQ"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llTKk9EfCpp_nJYIoYFQ"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Row_Count_0.1.definition#_ccFOkBF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTLn46k9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM `target`.`D_CUSTOMER` " language="MySQL"/>
        <builtInIndicatorDefinition xmi:id="_HPFLAKk9EfCpp_nJYIoYFQ" name="Row Count" label="Row Count">
          <taggedValue xmi:id="_HPFLAak9EfCpp_nJYIoYFQ" tag="Description" value="counts the number of rows"/>
          <taggedValue xmi:id="_HPFLAqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the number of records"/>
          <sqlGenericExpression xmi:id="_HPFLA6k9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:NullCountIndicator" xmi:id="_GcOKvqk9EfCpp_nJYIoYFQ" count="30" computed="true">
        <parameters xmi:id="_GcOKv6k9EfCpp_nJYIoYFQ"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llTKk9EfCpp_nJYIoYFQ"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Null_Count_0.1.definition#_GrAeADh9Ed2XmO7pl5Yuyg"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTM2Lqk9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM `target`.`D_CUSTOMER` WHERE `gender` IS NULL " language="MySQL"/>
        <builtInIndicatorDefinition xmi:id="_HPOU8Kk9EfCpp_nJYIoYFQ" name="Null Count" label="Null Count">
          <taggedValue xmi:id="_HPOU8ak9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluate the number of missing data (null records)"/>
          <taggedValue xmi:id="_HPOU8qk9EfCpp_nJYIoYFQ" tag="Description" value="counts the number of null rows"/>
          <sqlGenericExpression xmi:id="_HPOU86k9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE &lt;%=__COLUMN_NAMES__%> IS NULL &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:DistinctCountIndicator" xmi:id="_GcOKwKk9EfCpp_nJYIoYFQ" count="30" computed="true" distinctValueCount="2">
        <parameters xmi:id="_GcOKwak9EfCpp_nJYIoYFQ"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llTKk9EfCpp_nJYIoYFQ"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Distinct_Count_0.1.definition#_ccHq0BF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTM2L6k9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT DISTINCT `gender` FROM `target`.`D_CUSTOMER` ) A" language="MySQL"/>
        <builtInIndicatorDefinition xmi:id="_HPXe4Kk9EfCpp_nJYIoYFQ" name="Distinct Count" label="Distinct Count">
          <taggedValue xmi:id="_HPXe4ak9EfCpp_nJYIoYFQ" tag="Description" value="counts the number of distinct rows (like a &quot;SELECT DISTINCT&quot; SQL statement)"/>
          <taggedValue xmi:id="_HPXe4qk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the number of distinct records"/>
          <sqlGenericExpression xmi:id="_HPXe46k9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT DISTINCT &lt;%=__COLUMN_NAMES__%> FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>) A" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:UniqueCountIndicator" xmi:id="_GcOKwqk9EfCpp_nJYIoYFQ" count="30" computed="true" uniqueValueCount="0">
        <parameters xmi:id="_GcOKw6k9EfCpp_nJYIoYFQ"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llTKk9EfCpp_nJYIoYFQ"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Unique_Count_0.1.definition#_ccHq0RF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTM2MKk9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT `gender`, COUNT(*) mycount FROM `target`.`D_CUSTOMER`  GROUP BY `gender` HAVING mycount = 1) AS myquery" language="MySQL"/>
        <builtInIndicatorDefinition xmi:id="_HPhP4Kk9EfCpp_nJYIoYFQ" name="Unique Count" label="Unique Count">
          <taggedValue xmi:id="_HPhP4ak9EfCpp_nJYIoYFQ" tag="Description" value="counts the number of unique rows (i.e. distinct rows with only one instance: rows that are not duplicated)"/>
          <taggedValue xmi:id="_HPhP4qk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the number of unique records"/>
          <sqlGenericExpression xmi:id="_HPhP46k9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="SQL"/>
          <sqlGenericExpression xmi:id="_HPhP5Kk9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount = 1) AS myquery" language="MySQL"/>
          <sqlGenericExpression xmi:id="_HPhP5ak9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) myquery" language="Oracle"/>
          <sqlGenericExpression xmi:id="_HPhP5qk9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount = 1) AS myquery" language="Teradata"/>
          <sqlGenericExpression xmi:id="_HPhP56k9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_HPhP6Kk9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_HPhP6ak9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1)  myquery" language="Hive" version=""/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:DuplicateCountIndicator" xmi:id="_GcOKxKk9EfCpp_nJYIoYFQ" count="30" computed="true" duplicateValueCount="2">
        <parameters xmi:id="_GcOKxak9EfCpp_nJYIoYFQ"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llTKk9EfCpp_nJYIoYFQ"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Duplicate_Count_0.1.definition#_ccHq0hF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTM2Mak9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT `gender`, COUNT(*) mycount FROM `target`.`D_CUSTOMER`  m  GROUP BY `gender` HAVING mycount > 1) AS myquery" language="MySQL"/>
        <builtInIndicatorDefinition xmi:id="_HPqZ0Kk9EfCpp_nJYIoYFQ" name="Duplicate Count" label="Duplicate Count">
          <taggedValue xmi:id="_HPqZ0ak9EfCpp_nJYIoYFQ" tag="Description" value="counts the number of duplicate rows. This number and the number of unique data equals the number of distinct rows"/>
          <taggedValue xmi:id="_HPqZ0qk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the number of duplicated records"/>
          <sqlGenericExpression xmi:id="_HPqZ06k9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) AS myquery" language="SQL"/>
          <sqlGenericExpression xmi:id="_HPqZ1Kk9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount > 1) AS myquery" language="MySQL"/>
          <sqlGenericExpression xmi:id="_HPqZ1ak9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Oracle"/>
          <sqlGenericExpression xmi:id="_HPqZ1qk9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount > 1) AS myquery" language="Teradata"/>
          <sqlGenericExpression xmi:id="_HPqZ16k9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_HPqZ2Kk9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) AS myquery" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_HPqZ2ak9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Hive"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:BlankCountIndicator" xmi:id="_GcOKxqk9EfCpp_nJYIoYFQ" count="30" computed="true">
        <parameters xmi:id="_GcOKx6k9EfCpp_nJYIoYFQ"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llTKk9EfCpp_nJYIoYFQ"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Blank_Count_0.1.definition#_ccHq0xF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTM2Mqk9EfCpp_nJYIoYFQ" body="SELECT COUNT(`gender`) FROM `target`.`D_CUSTOMER` WHERE TRIM(`gender`) = '' " language="MySQL"/>
        <builtInIndicatorDefinition xmi:id="_HPy8sKk9EfCpp_nJYIoYFQ" name="Blank Count" label="Blank Count">
          <taggedValue xmi:id="_HPy8sak9EfCpp_nJYIoYFQ" tag="Description" value="counts the number of blank rows. A blank is a non null textual data that contains only white spaces (or nothing). Note that Oracle does not distinguish between the empty string and the null value"/>
          <taggedValue xmi:id="_HPy8sqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the number of blank records"/>
          <sqlGenericExpression xmi:id="_HPy8s6k9EfCpp_nJYIoYFQ" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE TRIM(&lt;%=__COLUMN_NAMES__%>) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_HPy8tKk9EfCpp_nJYIoYFQ" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE TRIM(&lt;%=__COLUMN_NAMES__%>) IS NULL &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_HPy8tak9EfCpp_nJYIoYFQ" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_HPy8tqk9EfCpp_nJYIoYFQ" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_HPy8t6k9EfCpp_nJYIoYFQ" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> = '' or RTRIM(LTRIM(&lt;%=__COLUMN_NAMES__%>)) = '') &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:TextIndicator" xmi:id="_GcOKyKk9EfCpp_nJYIoYFQ">
        <parameters xmi:id="_GcOKyak9EfCpp_nJYIoYFQ"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llTKk9EfCpp_nJYIoYFQ"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Text_Statistics_0.1.definition#_yb9x0zh8Ed2XmO7pl5Yuyg"/>
        <averageLengthIndicator xmi:id="_GcOKyqk9EfCpp_nJYIoYFQ" count="30" computed="true" sumLength="30.0">
          <parameters xmi:id="_HTM2M6k9EfCpp_nJYIoYFQ">
            <textParameter xmi:id="_HTM2NKk9EfCpp_nJYIoYFQ" useBlank="false"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llTKk9EfCpp_nJYIoYFQ"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_0.1.definition#_ccIR4BF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTM2Nak9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH(`gender`)), COUNT(`gender`) FROM `target`.`D_CUSTOMER` WHERE (`gender` IS NOT NULL ) AND (TRIM(IFNULL(`gender`,'NULL TALEND')) &lt;> '' ) " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_HP7fkKk9EfCpp_nJYIoYFQ" name="Average Length" label="Average Length">
            <taggedValue xmi:id="_HP7fkak9EfCpp_nJYIoYFQ" tag="Description" value="computes the average length of the field. Does not take into account the null values when computing the average."/>
            <taggedValue xmi:id="_HP7fkqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the average length of the textual record"/>
            <sqlGenericExpression xmi:id="_HP7fk6k9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_HP7flKk9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_HP7flak9EfCpp_nJYIoYFQ" body="SELECT SUM(LEN(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_HP7flqk9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_HP7fl6k9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_HP7fmKk9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_HP7fmak9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_HP7fmqk9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_HP7fm6k9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_HP7fnKk9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )), COUNT( &lt;%=__COLUMN_NAMES__%> ) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_HP7fnak9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_HP7fnqk9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </averageLengthIndicator>
        <maxLengthIndicator xmi:id="_GcOKy6k9EfCpp_nJYIoYFQ" computed="true" length="1">
          <parameters xmi:id="_HTM2Nqk9EfCpp_nJYIoYFQ">
            <textParameter xmi:id="_HTM2N6k9EfCpp_nJYIoYFQ" useBlank="false"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llTKk9EfCpp_nJYIoYFQ"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_0.1.definition#_ccHq1RF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTM2OKk9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(`gender`)) FROM `target`.`D_CUSTOMER` WHERE (`gender` IS NOT NULL ) AND (TRIM(IFNULL(`gender`,'NULL TALEND')) &lt;> '' ) " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_HQF3oKk9EfCpp_nJYIoYFQ" name="Maximal Length" label="Maximal Length">
            <taggedValue xmi:id="_HQF3oak9EfCpp_nJYIoYFQ" tag="Description" value="computes the maximal length of a text field."/>
            <taggedValue xmi:id="_HQF3oqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the length of the longest textual record"/>
            <sqlGenericExpression xmi:id="_HQF3o6k9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_HQF3pKk9EfCpp_nJYIoYFQ" body="SELECT MAX( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle" modificationDate=""/>
            <sqlGenericExpression xmi:id="_HQF3pak9EfCpp_nJYIoYFQ" body="SELECT MAX(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_HQF3pqk9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_HQF3p6k9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_HQF3qKk9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_HQF3qak9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive" modificationDate=""/>
            <sqlGenericExpression xmi:id="_HQF3qqk9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_HQF3q6k9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' )  &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_HQF3rKk9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_HQF3rak9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_HQF3rqk9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </maxLengthIndicator>
        <minLengthIndicator xmi:id="_GcOKzKk9EfCpp_nJYIoYFQ" computed="true" length="1">
          <parameters xmi:id="_HTM2Oak9EfCpp_nJYIoYFQ">
            <textParameter xmi:id="_HTM2Oqk9EfCpp_nJYIoYFQ" useBlank="false"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llTKk9EfCpp_nJYIoYFQ"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_0.1.definition#_ccHq1BF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTM2O6k9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(`gender`)) FROM `target`.`D_CUSTOMER` WHERE (`gender` IS NOT NULL ) AND (TRIM(IFNULL(`gender`,'NULL TALEND')) &lt;> '' ) " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_HQHFwKk9EfCpp_nJYIoYFQ" name="Minimal Length" label="Minimal Length">
            <taggedValue xmi:id="_HQHFwak9EfCpp_nJYIoYFQ" tag="Description" value="computes the minimal length of a text field. Does not take into account the null values when computing the minimal length."/>
            <taggedValue xmi:id="_HQHFwqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the length of the smallest textual record"/>
            <sqlGenericExpression xmi:id="_HQHFw6k9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_HQHFxKk9EfCpp_nJYIoYFQ" body="SELECT MIN( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_HQHFxak9EfCpp_nJYIoYFQ" body="SELECT MIN(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_HQHFxqk9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_HQHFx6k9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_HQHFyKk9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_HQHFyak9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_HQHFyqk9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_HQHFy6k9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_HQHFzKk9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_HQHFzak9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (1=1) AND (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_HQHFzqk9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </minLengthIndicator>
        <minLengthWithBlankIndicator xmi:id="_GcOKzak9EfCpp_nJYIoYFQ" computed="true" length="1">
          <parameters xmi:id="_HTM2Tqk9EfCpp_nJYIoYFQ">
            <textParameter xmi:id="_HTM2T6k9EfCpp_nJYIoYFQ"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llTKk9EfCpp_nJYIoYFQ"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Blank_0.1.definition#_G4EzQZU9Ed-Y15ulK_jijQ"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTM2UKk9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(`gender`)) FROM `target`.`D_CUSTOMER` WHERE (`gender` IS NOT NULL ) " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_HREID6k9EfCpp_nJYIoYFQ" name="Minimal Length With Blank" label="Minimal Length With Blank">
            <taggedValue xmi:id="_HREIEKk9EfCpp_nJYIoYFQ" tag="Description" value="computes the minimal length of a text field, counting blank as zero length values."/>
            <taggedValue xmi:id="_HREIEak9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the length of the smallest textual record"/>
            <sqlGenericExpression xmi:id="_HREIEqk9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_HREIE6k9EfCpp_nJYIoYFQ" body="SELECT MIN( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_HREIFKk9EfCpp_nJYIoYFQ" body="SELECT MIN(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_HREIFak9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_HREIFqk9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_HREIF6k9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_HREIGKk9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_HREIGak9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_HREIGqk9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_HREIG6k9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_HREIHKk9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          </builtInIndicatorDefinition>
        </minLengthWithBlankIndicator>
        <minLengthWithNullIndicator xmi:id="_GcOKzqk9EfCpp_nJYIoYFQ" computed="true" length="1">
          <parameters xmi:id="_HTM2Uak9EfCpp_nJYIoYFQ">
            <textParameter xmi:id="_HTM2Uqk9EfCpp_nJYIoYFQ" useBlank="false" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llTKk9EfCpp_nJYIoYFQ"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Null_0.1.definition#_a4KsoI1qEd-xwI2imLgHRA"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTNdEKk9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(IFNULL(`gender`,''))) FROM `target`.`D_CUSTOMER` WHERE (TRIM(IFNULL(`gender`,'NULL TALEND')) &lt;> '' ) " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_HRN5AKk9EfCpp_nJYIoYFQ" name="Minimal Length With Null" label="Minimal Length With Null">
            <taggedValue xmi:id="_HRN5Aak9EfCpp_nJYIoYFQ" tag="Description" value="computes the minimal length of a text field, counting null as zero length values."/>
            <taggedValue xmi:id="_HRN5Aqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the length of the smallest textual record"/>
            <sqlGenericExpression xmi:id="_HRN5A6k9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_HRN5BKk9EfCpp_nJYIoYFQ" body="SELECT MIN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_HRN5Bak9EfCpp_nJYIoYFQ" body="SELECT MIN(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_HRN5Bqk9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_HRN5B6k9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_HRN5CKk9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_HRN5Cak9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_HRN5Cqk9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_HRN5C6k9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_HRN5DKk9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_HRN5Dak9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_HRN5Dqk9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </minLengthWithNullIndicator>
        <minLengthWithBlankNullIndicator xmi:id="_GcOKz6k9EfCpp_nJYIoYFQ" computed="true" length="1">
          <parameters xmi:id="_HTNdEak9EfCpp_nJYIoYFQ">
            <textParameter xmi:id="_HTNdEqk9EfCpp_nJYIoYFQ" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llTKk9EfCpp_nJYIoYFQ"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Blank_and_Null_0.1.definition#_9HDjMJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTNdE6k9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(IFNULL(`gender`,''))) FROM `target`.`D_CUSTOMER` " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_HReXsKk9EfCpp_nJYIoYFQ" name="Minimal Length With Blank and Null" label="Minimal Length With Blank and Null">
            <taggedValue xmi:id="_HReXsak9EfCpp_nJYIoYFQ" tag="Description" value="computes the minimal length of a text field, counting blank and null as zero length values."/>
            <taggedValue xmi:id="_HReXsqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the length of the smallest textual record"/>
            <sqlGenericExpression xmi:id="_HReXs6k9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_HReXtKk9EfCpp_nJYIoYFQ" body="SELECT MIN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_HReXtak9EfCpp_nJYIoYFQ" body="SELECT MIN(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_HReXtqk9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_HReXt6k9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_HReXuKk9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_HReXuak9EfCpp_nJYIoYFQ" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_HReXuqk9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_HReXu6k9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_HReXvKk9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_HReXvak9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_HReXvqk9EfCpp_nJYIoYFQ" body="SELECT MIN(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </minLengthWithBlankNullIndicator>
        <maxLengthWithBlankIndicator xmi:id="_GcOK0Kk9EfCpp_nJYIoYFQ" computed="true" length="1">
          <parameters xmi:id="_HTM2Rak9EfCpp_nJYIoYFQ">
            <textParameter xmi:id="_HTM2Rqk9EfCpp_nJYIoYFQ"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llTKk9EfCpp_nJYIoYFQ"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Blank_0.1.definition#_-xmZcJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTM2R6k9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(`gender`)) FROM `target`.`D_CUSTOMER` WHERE (`gender` IS NOT NULL ) " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_HQzCQKk9EfCpp_nJYIoYFQ" name="Maximal Length With Blank" label="Maximal Length With Blank">
            <taggedValue xmi:id="_HQzCQak9EfCpp_nJYIoYFQ" tag="Description" value="computes the maximal length of a text field, counting blank data  as zero length values."/>
            <taggedValue xmi:id="_HQzCQqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the length of the longest textual record"/>
            <sqlGenericExpression xmi:id="_HQzCQ6k9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_HQzCRKk9EfCpp_nJYIoYFQ" body="SELECT MAX( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_HQzCRak9EfCpp_nJYIoYFQ" body="SELECT MAX(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_HQzCRqk9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_HQzCR6k9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_HQzCSKk9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_HQzCSak9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_HQzCSqk9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_HQzCS6k9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_HQzCTKk9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_HQzCTak9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          </builtInIndicatorDefinition>
        </maxLengthWithBlankIndicator>
        <maxLengthWithNullIndicator xmi:id="_GcOK0ak9EfCpp_nJYIoYFQ" computed="true" length="1">
          <parameters xmi:id="_HTM2SKk9EfCpp_nJYIoYFQ">
            <textParameter xmi:id="_HTM2Sak9EfCpp_nJYIoYFQ" useBlank="false" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llTKk9EfCpp_nJYIoYFQ"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Null_0.1.definition#_-_UFUJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTM2Sqk9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(IFNULL(`gender`,''))) FROM `target`.`D_CUSTOMER` WHERE (TRIM(IFNULL(`gender`,'NULL TALEND')) &lt;> '' ) " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_HQ7lIKk9EfCpp_nJYIoYFQ" name="Maximal Length With Null" label="Maximal Length With Null">
            <taggedValue xmi:id="_HQ7lIak9EfCpp_nJYIoYFQ" tag="Description" value="computes the maximal length of a text field, counting null data as zero length values."/>
            <taggedValue xmi:id="_HQ7lIqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the length of the longest textual record"/>
            <sqlGenericExpression xmi:id="_HQ7lI6k9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_HQ7lJKk9EfCpp_nJYIoYFQ" body="SELECT MAX(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_HQ7lJak9EfCpp_nJYIoYFQ" body="SELECT MAX(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_HQ7lJqk9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_HQ7lJ6k9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_HQ7lKKk9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_HQ7lKak9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive" version=""/>
            <sqlGenericExpression xmi:id="_HQ7lKqk9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_HQ7lK6k9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_HQ7lLKk9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_HQ7lLak9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_HQ7lLqk9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </maxLengthWithNullIndicator>
        <maxLengthWithBlankNullIndicator xmi:id="_GcOK0qk9EfCpp_nJYIoYFQ" computed="true" length="1">
          <parameters xmi:id="_HTM2S6k9EfCpp_nJYIoYFQ">
            <textParameter xmi:id="_HTM2TKk9EfCpp_nJYIoYFQ" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llTKk9EfCpp_nJYIoYFQ"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Blank_and_Null_0.1.definition#_-hzp8JSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTM2Tak9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(IFNULL(`gender`,''))) FROM `target`.`D_CUSTOMER` " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_HREIAKk9EfCpp_nJYIoYFQ" name="Maximal Length With Blank and Null" label="Maximal Length With Blank and Null">
            <taggedValue xmi:id="_HREIAak9EfCpp_nJYIoYFQ" tag="Description" value="computes the maximal length of a text field, counting null and blank data as zero length values."/>
            <taggedValue xmi:id="_HREIAqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the length of the longest textual record"/>
            <sqlGenericExpression xmi:id="_HREIA6k9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_HREIBKk9EfCpp_nJYIoYFQ" body="SELECT MAX(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_HREIBak9EfCpp_nJYIoYFQ" body="SELECT MAX(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_HREIBqk9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_HREIB6k9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_HREICKk9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_HREICak9EfCpp_nJYIoYFQ" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_HREICqk9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_HREIC6k9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_HREIDKk9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_HREIDak9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_HREIDqk9EfCpp_nJYIoYFQ" body="SELECT MAX(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </maxLengthWithBlankNullIndicator>
        <avgLengthWithBlankIndicator xmi:id="_GcOK06k9EfCpp_nJYIoYFQ" count="30" computed="true" sumLength="30.0">
          <parameters xmi:id="_HTM2PKk9EfCpp_nJYIoYFQ">
            <textParameter xmi:id="_HTM2Pak9EfCpp_nJYIoYFQ"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llTKk9EfCpp_nJYIoYFQ"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Blank_0.1.definition#__gPoIJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTM2Pqk9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH(CASE WHEN   CHAR_LENGTH( TRIM(`gender`) ) =0  THEN '' ELSE  `gender` END)), COUNT(*) FROM `target`.`D_CUSTOMER` WHERE (`gender` IS NOT NULL ) " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_HQYLgKk9EfCpp_nJYIoYFQ" name="Average Length With Blank" label="Average Length With Blank">
            <taggedValue xmi:id="_HQYLgak9EfCpp_nJYIoYFQ" tag="Description" value="computes the average length of the field, counting blank data as zero length values."/>
            <taggedValue xmi:id="_HQYLgqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the average length of the textual record"/>
            <sqlGenericExpression xmi:id="_HQYLg6k9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH(CASE WHEN   CHAR_LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_HQYLhKk9EfCpp_nJYIoYFQ" body="SELECT SUM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NOT NULL AND  TRIM(&lt;%=__COLUMN_NAMES__%>) IS NULL THEN 0 ELSE  LENGTH(&lt;%=__COLUMN_NAMES__%>)END), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_HQYLhak9EfCpp_nJYIoYFQ" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) )=0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_HQYLhqk9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_HQYLh6k9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_HQYLiKk9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_HQYLiak9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_HQYLiqk9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_HQYLi6k9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_HQYLjKk9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM( &lt;%=__COLUMN_NAMES__%> ) ) =0  THEN '' ELSE   &lt;%=__COLUMN_NAMES__%>  END)), COUNT(*) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_HQYLjak9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          </builtInIndicatorDefinition>
        </avgLengthWithBlankIndicator>
        <avgLengthWithNullIndicator xmi:id="_GcOK1Kk9EfCpp_nJYIoYFQ" count="30" computed="true" sumLength="30.0">
          <parameters xmi:id="_HTM2P6k9EfCpp_nJYIoYFQ">
            <textParameter xmi:id="_HTM2QKk9EfCpp_nJYIoYFQ" useBlank="false" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llTKk9EfCpp_nJYIoYFQ"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Null_0.1.definition#__vI_wJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTM2Qak9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH(IFNULL(`gender`,''))), COUNT(*) FROM `target`.`D_CUSTOMER` WHERE (TRIM(IFNULL(`gender`,'NULL TALEND')) &lt;> '' ) " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_HQhVcKk9EfCpp_nJYIoYFQ" name="Average Length With Null" label="Average Length With Null">
            <taggedValue xmi:id="_HQhVcak9EfCpp_nJYIoYFQ" tag="Description" value="computes the average length of the field, counting null data as zero length values."/>
            <taggedValue xmi:id="_HQhVcqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the average length of the textual record"/>
            <sqlGenericExpression xmi:id="_HQhVc6k9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_HQhVdKk9EfCpp_nJYIoYFQ" body="SELECT SUM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_HQhVdak9EfCpp_nJYIoYFQ" body="SELECT SUM(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_HQhVdqk9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_HQhVd6k9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_HQhVeKk9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_HQhVeak9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_HQhVeqk9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_HQhVe6k9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_HQhVfKk9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_HQhVfak9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_HQhVfqk9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </avgLengthWithNullIndicator>
        <avgLengthWithBlankNullIndicator xmi:id="_GcOK1ak9EfCpp_nJYIoYFQ" count="30" computed="true" sumLength="30.0">
          <parameters xmi:id="_HTM2Qqk9EfCpp_nJYIoYFQ">
            <textParameter xmi:id="_HTM2Q6k9EfCpp_nJYIoYFQ" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llTKk9EfCpp_nJYIoYFQ"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Blank_and_Null_0.1.definition#__TbUIJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTM2RKk9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH(CASE WHEN   CHAR_LENGTH( TRIM(IFNULL(`gender`,'')) ) =0  THEN '' ELSE  IFNULL(`gender`,'') END)), COUNT(*) FROM `target`.`D_CUSTOMER` " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_HQp4UKk9EfCpp_nJYIoYFQ" name="Average Length With Blank and Null" label="Average Length With Blank and Null">
            <taggedValue xmi:id="_HQp4Uak9EfCpp_nJYIoYFQ" tag="Description" value="computes the average length of the field, counting blank and null data as zero lenght values."/>
            <taggedValue xmi:id="_HQp4Uqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the average length of the textual record"/>
            <sqlGenericExpression xmi:id="_HQp4U6k9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH(CASE WHEN   CHAR_LENGTH( TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'')) ) =0  THEN '' ELSE  IFNULL(&lt;%=__COLUMN_NAMES__%>,'') END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_HQp4VKk9EfCpp_nJYIoYFQ" body="SELECT SUM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NOT NULL AND  TRIM(&lt;%=__COLUMN_NAMES__%>) IS NULL THEN 0 ELSE CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END  END), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_HQp4Vak9EfCpp_nJYIoYFQ" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) )=0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_HQp4Vqk9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_HQp4V6k9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_HQp4WKk9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_HQp4Wak9EfCpp_nJYIoYFQ" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_HQp4Wqk9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_HQp4W6k9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_HQp4XKk9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END ) ) =0  THEN '' ELSE   CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END  END)), COUNT(*) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_HQp4Xak9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_HQp4Xqk9EfCpp_nJYIoYFQ" body="SELECT SUM(CHAR_LENGTH(CASE WHEN   CHAR_LENGTH( TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'')) ) =0  THEN '' ELSE  ISNULL(&lt;%=__COLUMN_NAMES__%>,'') END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </avgLengthWithBlankNullIndicator>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RowCountIndicator" xmi:id="_GcOK16k9EfCpp_nJYIoYFQ" count="30" computed="true">
        <parameters xmi:id="_GcOK2Kk9EfCpp_nJYIoYFQ"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llUKk9EfCpp_nJYIoYFQ"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Row_Count_0.1.definition#_ccFOkBF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTLn6ak9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM `target`.`D_CUSTOMER` " language="MySQL"/>
        <builtInIndicatorDefinition xmi:id="_HRnhoKk9EfCpp_nJYIoYFQ" name="Row Count" label="Row Count">
          <taggedValue xmi:id="_HRnhoak9EfCpp_nJYIoYFQ" tag="Description" value="counts the number of rows"/>
          <taggedValue xmi:id="_HRnhoqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the number of records"/>
          <sqlGenericExpression xmi:id="_HRnho6k9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:NullCountIndicator" xmi:id="_GcOK2ak9EfCpp_nJYIoYFQ" count="30" computed="true">
        <parameters xmi:id="_GcOK2qk9EfCpp_nJYIoYFQ"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llUKk9EfCpp_nJYIoYFQ"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Null_Count_0.1.definition#_GrAeADh9Ed2XmO7pl5Yuyg"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTNdFKk9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM `target`.`D_CUSTOMER` WHERE `dob` IS NULL " language="MySQL"/>
        <builtInIndicatorDefinition xmi:id="_HRygwKk9EfCpp_nJYIoYFQ" name="Null Count" label="Null Count">
          <taggedValue xmi:id="_HRygwak9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluate the number of missing data (null records)"/>
          <taggedValue xmi:id="_HRygwqk9EfCpp_nJYIoYFQ" tag="Description" value="counts the number of null rows"/>
          <sqlGenericExpression xmi:id="_HRygw6k9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE &lt;%=__COLUMN_NAMES__%> IS NULL &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:DistinctCountIndicator" xmi:id="_GcOK26k9EfCpp_nJYIoYFQ" count="30" computed="true" distinctValueCount="10">
        <parameters xmi:id="_GcOK3Kk9EfCpp_nJYIoYFQ"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llUKk9EfCpp_nJYIoYFQ"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Distinct_Count_0.1.definition#_ccHq0BF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTNdFak9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT DISTINCT `dob` FROM `target`.`D_CUSTOMER` ) A" language="MySQL"/>
        <builtInIndicatorDefinition xmi:id="_HR7qsKk9EfCpp_nJYIoYFQ" name="Distinct Count" label="Distinct Count">
          <taggedValue xmi:id="_HR7qsak9EfCpp_nJYIoYFQ" tag="Description" value="counts the number of distinct rows (like a &quot;SELECT DISTINCT&quot; SQL statement)"/>
          <taggedValue xmi:id="_HR7qsqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the number of distinct records"/>
          <sqlGenericExpression xmi:id="_HR7qs6k9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT DISTINCT &lt;%=__COLUMN_NAMES__%> FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>) A" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:UniqueCountIndicator" xmi:id="_GcOK3ak9EfCpp_nJYIoYFQ" count="30" computed="true" uniqueValueCount="0">
        <parameters xmi:id="_GcOK3qk9EfCpp_nJYIoYFQ"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llUKk9EfCpp_nJYIoYFQ"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Unique_Count_0.1.definition#_ccHq0RF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTNdFqk9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT `dob`, COUNT(*) mycount FROM `target`.`D_CUSTOMER`  GROUP BY `dob` HAVING mycount = 1) AS myquery" language="MySQL"/>
        <builtInIndicatorDefinition xmi:id="_HSGCwKk9EfCpp_nJYIoYFQ" name="Unique Count" label="Unique Count">
          <taggedValue xmi:id="_HSGCwak9EfCpp_nJYIoYFQ" tag="Description" value="counts the number of unique rows (i.e. distinct rows with only one instance: rows that are not duplicated)"/>
          <taggedValue xmi:id="_HSGCwqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the number of unique records"/>
          <sqlGenericExpression xmi:id="_HSGCw6k9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="SQL"/>
          <sqlGenericExpression xmi:id="_HSGCxKk9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount = 1) AS myquery" language="MySQL"/>
          <sqlGenericExpression xmi:id="_HSGCxak9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) myquery" language="Oracle"/>
          <sqlGenericExpression xmi:id="_HSGCxqk9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount = 1) AS myquery" language="Teradata"/>
          <sqlGenericExpression xmi:id="_HSGCx6k9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_HSGCyKk9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_HSGCyak9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1)  myquery" language="Hive" version=""/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:DuplicateCountIndicator" xmi:id="_GcOK36k9EfCpp_nJYIoYFQ" count="30" computed="true" duplicateValueCount="10">
        <parameters xmi:id="_GcOK4Kk9EfCpp_nJYIoYFQ"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llUKk9EfCpp_nJYIoYFQ"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Duplicate_Count_0.1.definition#_ccHq0hF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTNdF6k9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT `dob`, COUNT(*) mycount FROM `target`.`D_CUSTOMER`  m  GROUP BY `dob` HAVING mycount > 1) AS myquery" language="MySQL"/>
        <builtInIndicatorDefinition xmi:id="_HSPMsKk9EfCpp_nJYIoYFQ" name="Duplicate Count" label="Duplicate Count">
          <taggedValue xmi:id="_HSPMsak9EfCpp_nJYIoYFQ" tag="Description" value="counts the number of duplicate rows. This number and the number of unique data equals the number of distinct rows"/>
          <taggedValue xmi:id="_HSPMsqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the number of duplicated records"/>
          <sqlGenericExpression xmi:id="_HSPMs6k9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) AS myquery" language="SQL"/>
          <sqlGenericExpression xmi:id="_HSPMtKk9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount > 1) AS myquery" language="MySQL"/>
          <sqlGenericExpression xmi:id="_HSPMtak9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Oracle"/>
          <sqlGenericExpression xmi:id="_HSPMtqk9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount > 1) AS myquery" language="Teradata"/>
          <sqlGenericExpression xmi:id="_HSPMt6k9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_HSPMuKk9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) AS myquery" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_HSPMuak9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Hive"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RowCountIndicator" xmi:id="_GcOK4qk9EfCpp_nJYIoYFQ" count="30" computed="true">
        <parameters xmi:id="_GcOK46k9EfCpp_nJYIoYFQ"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llVKk9EfCpp_nJYIoYFQ"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Row_Count_0.1.definition#_ccFOkBF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTLn5Kk9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM `target`.`D_CUSTOMER` " language="MySQL"/>
        <builtInIndicatorDefinition xmi:id="_HSXvkKk9EfCpp_nJYIoYFQ" name="Row Count" label="Row Count">
          <taggedValue xmi:id="_HSXvkak9EfCpp_nJYIoYFQ" tag="Description" value="counts the number of rows"/>
          <taggedValue xmi:id="_HSXvkqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the number of records"/>
          <sqlGenericExpression xmi:id="_HSXvk6k9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:NullCountIndicator" xmi:id="_GcOK5Kk9EfCpp_nJYIoYFQ" count="30" computed="true">
        <parameters xmi:id="_GcOK5ak9EfCpp_nJYIoYFQ"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llVKk9EfCpp_nJYIoYFQ"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Null_Count_0.1.definition#_GrAeADh9Ed2XmO7pl5Yuyg"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTNdGKk9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM `target`.`D_CUSTOMER` WHERE `current_flag` IS NULL " language="MySQL"/>
        <builtInIndicatorDefinition xmi:id="_HSiHoKk9EfCpp_nJYIoYFQ" name="Null Count" label="Null Count">
          <taggedValue xmi:id="_HSiHoak9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluate the number of missing data (null records)"/>
          <taggedValue xmi:id="_HSiHoqk9EfCpp_nJYIoYFQ" tag="Description" value="counts the number of null rows"/>
          <sqlGenericExpression xmi:id="_HSiHo6k9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE &lt;%=__COLUMN_NAMES__%> IS NULL &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:DistinctCountIndicator" xmi:id="_GcOK5qk9EfCpp_nJYIoYFQ" count="30" computed="true" distinctValueCount="1">
        <parameters xmi:id="_GcOK56k9EfCpp_nJYIoYFQ"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llVKk9EfCpp_nJYIoYFQ"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Distinct_Count_0.1.definition#_ccHq0BF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTNdGak9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT DISTINCT `current_flag` FROM `target`.`D_CUSTOMER` ) A" language="MySQL"/>
        <builtInIndicatorDefinition xmi:id="_HSsfsKk9EfCpp_nJYIoYFQ" name="Distinct Count" label="Distinct Count">
          <taggedValue xmi:id="_HSsfsak9EfCpp_nJYIoYFQ" tag="Description" value="counts the number of distinct rows (like a &quot;SELECT DISTINCT&quot; SQL statement)"/>
          <taggedValue xmi:id="_HSsfsqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the number of distinct records"/>
          <sqlGenericExpression xmi:id="_HSsfs6k9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT DISTINCT &lt;%=__COLUMN_NAMES__%> FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>) A" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:UniqueCountIndicator" xmi:id="_GcOK6Kk9EfCpp_nJYIoYFQ" count="30" computed="true" uniqueValueCount="0">
        <parameters xmi:id="_GcOK6ak9EfCpp_nJYIoYFQ"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llVKk9EfCpp_nJYIoYFQ"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Unique_Count_0.1.definition#_ccHq0RF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTNdGqk9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT `current_flag`, COUNT(*) mycount FROM `target`.`D_CUSTOMER`  GROUP BY `current_flag` HAVING mycount = 1) AS myquery" language="MySQL"/>
        <builtInIndicatorDefinition xmi:id="_HS23wKk9EfCpp_nJYIoYFQ" name="Unique Count" label="Unique Count">
          <taggedValue xmi:id="_HS23wak9EfCpp_nJYIoYFQ" tag="Description" value="counts the number of unique rows (i.e. distinct rows with only one instance: rows that are not duplicated)"/>
          <taggedValue xmi:id="_HS23wqk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the number of unique records"/>
          <sqlGenericExpression xmi:id="_HS23w6k9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="SQL"/>
          <sqlGenericExpression xmi:id="_HS23xKk9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount = 1) AS myquery" language="MySQL"/>
          <sqlGenericExpression xmi:id="_HS23xak9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) myquery" language="Oracle"/>
          <sqlGenericExpression xmi:id="_HS23xqk9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount = 1) AS myquery" language="Teradata"/>
          <sqlGenericExpression xmi:id="_HS23x6k9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_HS23yKk9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_HS23yak9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1)  myquery" language="Hive" version=""/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:DuplicateCountIndicator" xmi:id="_GcOK6qk9EfCpp_nJYIoYFQ" count="30" computed="true" duplicateValueCount="1">
        <parameters xmi:id="_GcOK66k9EfCpp_nJYIoYFQ"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/TalendQualityCustomer_0.1.item#_D2llVKk9EfCpp_nJYIoYFQ"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Duplicate_Count_0.1.definition#_ccHq0hF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_HTNdG6k9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT `current_flag`, COUNT(*) mycount FROM `target`.`D_CUSTOMER`  m  GROUP BY `current_flag` HAVING mycount > 1) AS myquery" language="MySQL"/>
        <builtInIndicatorDefinition xmi:id="_HTBP0Kk9EfCpp_nJYIoYFQ" name="Duplicate Count" label="Duplicate Count">
          <taggedValue xmi:id="_HTBP0ak9EfCpp_nJYIoYFQ" tag="Description" value="counts the number of duplicate rows. This number and the number of unique data equals the number of distinct rows"/>
          <taggedValue xmi:id="_HTBP0qk9EfCpp_nJYIoYFQ" tag="Purpose" value="evaluates the number of duplicated records"/>
          <sqlGenericExpression xmi:id="_HTBP06k9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) AS myquery" language="SQL"/>
          <sqlGenericExpression xmi:id="_HTBP1Kk9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount > 1) AS myquery" language="MySQL"/>
          <sqlGenericExpression xmi:id="_HTBP1ak9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Oracle"/>
          <sqlGenericExpression xmi:id="_HTBP1qk9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount > 1) AS myquery" language="Teradata"/>
          <sqlGenericExpression xmi:id="_HTBP16k9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_HTBP2Kk9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) AS myquery" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_HTBP2ak9EfCpp_nJYIoYFQ" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Hive"/>
        </builtInIndicatorDefinition>
      </indicators>
    </results>
    <parameters xmi:id="_1a1GSqk8EfCpp_nJYIoYFQ" dataFilter="_GcOK7qk9EfCpp_nJYIoYFQ" analysisType="Multiple Column Analysis"/>
    <contextType xmi:id="_GcNjoKk9EfCpp_nJYIoYFQ" confirmationNeeded="false" hide="false" name="Default"/>
  </dataquality.analysis:Analysis>
  <orgomg.cwm.objectmodel.core:Dependency xmi:id="_RmtKEKnVEfCPYfrxWxsLvw" kind="Usage" supplier="_1a1GQak8EfCpp_nJYIoYFQ">
    <client xsi:type="dataquality.reports:TdReport" href="../../Reports/DataQualityReports/Customer_Deletes_0.1.rep#_HgsjYKnVEfCPYfrxWxsLvw"/>
  </orgomg.cwm.objectmodel.core:Dependency>
  <dataquality.domain:Domain xmi:id="_GcOK7qk9EfCpp_nJYIoYFQ" name="Deletes">
    <ranges xmi:id="_GcOK76k9EfCpp_nJYIoYFQ">
      <expressions xmi:id="_GcOK8Kk9EfCpp_nJYIoYFQ">
        <expression xsi:type="relational:TdExpression" xmi:id="_GcOK8ak9EfCpp_nJYIoYFQ" body="" language="SQL"/>
      </expressions>
    </ranges>
  </dataquality.domain:Domain>
</xmi:XMI>
